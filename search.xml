<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>ICPC-SHSite-Note - ICPC上海站-记</title>
    <url>/2020/12/15/ICPC-SHSite-Note/</url>
    <content><![CDATA[<h2 id="ICPC上海游记"><a href="#ICPC上海游记" class="headerlink" title="ICPC上海游记"></a>ICPC上海游记</h2><a id="more"></a>

<h1 id="Day-0"><a href="#Day-0" class="headerlink" title="Day 0"></a>Day 0</h1><p>早上起来脑子昏昏沉沉，在床上打了一早上游戏…</p>
<p>中午吃了 Burger King 的大皇堡，吃撑了， 队友去打印店打印了队内总结的板子。</p>
<p>睡了一个半小时午觉，起来背着包考 CET - 6 了</p>
<p>（起码半年没正儿八经的刷英语了 qaq ，除了看英文题面和 Kaggle 上的 Machine Learning Project 上的英文之外……就没碰过英语了。）</p>
<p>考完之后去吃了鸡肉饭， 带着笔记本和板子去机房了。</p>
<p>到机房志愿者学长给安置了打印机、安装了驱动。</p>
<p>拿了包费列罗等队友来 qaq （好吃！</p>
<p>热身赛开始之后学长给发了题。</p>
<p>三个题一人看一道</p>
<p>A 算期望， B 看上去像图论， 应该是个推公式的题。</p>
<p>C 计算几何。</p>
<p>开局没看懂 A ，把 A 抛给队友去看 B 。</p>
<p>看了一会之后感觉推出公式就上机写 B 。</p>
<p>写完交了 WA 掉之后发现自己写假了， 不太好搞就放了。</p>
<p>和队友一起想 A 了。</p>
<p>大概是我出了一个思路， qsw 想到了正解， tzf 解决了其中的子问题。</p>
<p>于是过了A， 后面的计算几何和公式也没怎么推出来就再没了。</p>
<p>希望明天能拿牌。</p>
<p>晚安！</p>
<h1 id="Day1"><a href="#Day1" class="headerlink" title="Day1"></a>Day1</h1><p>起床去家家悦买了零食就去了机房， 刷了会儿毛概题库坐等选手身份核验和正式开赛。</p>
<p>核验时候我没有身份证， 不过事前已经和 ICPC 联系人沟通过了， 所以也没有什么事。</p>
<p>于是又刷了会题库， 快 11 点的时候翻了翻准备的板子。</p>
<p>志愿者也开始打印题目了。</p>
<p>开始比赛， 我从 M 开始看， 感觉 M 可做，但是有点麻烦，先放着继续往下看题了。</p>
<p>回头看榜已经有人过 G 了，于是三个人回来看 G ，发现了基本规律之后 qsw 让我们去看其他题， 他来推 G 。</p>
<p>我又看了 D ， 感觉也可做， 这时 M 也有人出了， 遂回头看 M 。</p>
<p>大致想了一下应该是模拟目录树类似的结构来维护信息。</p>
<p>qsw 也差不多推出G的式子， 但样例没过， 我们也就来帮着 debug ， 改了一会后 A 掉了。</p>
<p>AC G 后给 qsw 讲了 M 题意， qsw 认为可以用 Trie 做， 想了一下不如直接建树， 结点保存信息即可。</p>
<p>我上机写， 调了一会后 AC 了 M 。</p>
<p>然后跟榜认为 B 和 D 是最可做的， qsw 认为 B 不好做， 于是在推 D 的分类讨论， 我和 tzf 在想 B。</p>
<p>最开始写了个大暴力， 果不其然 T 了， 因为是 SPJ， 我们猜一定有解， 于我把暴力删了直接随机化找点。</p>
<p>但还是 T ， 遂猜想可能有无解输出 -1 的情况， 在大循环里加了循环次数约束条件后调了调约束次数就 AC 了。</p>
<p>此时 qsw 已经 WA 了好多发 D 了， 但我们都认为他的基本思路没有错， 因为赛前目标也仅仅是拿牌， 所以我们集中起来帮 qsw 看 D ， 最后修修改改补补也还是没有 AC 掉 D 。</p>
<p>结束后询问学长队才知道， 大体思路没有错， 漏讨论了一种情况。</p>
<p>总体上有点点小失望， 毕竟还是朝着拿牌去的嘛…， 结果就是差一点点可以打铜。</p>
<p>&amp;… 赛后</p>
<p>晚上补 B 正解， 非常简单的结论， 但场上并没有想到， 可能也出于经验原因。</p>
<p>然后对着 B 交自己场上调出来的 AC 程序， ……交了 4 页也没AC…</p>
<p>我确信确实是随机化 + 运气 A 掉的 B 题……</p>
<p>QAQ…</p>
<p>今年不再有比赛了… 明年3月份往后加油吧。</p>
]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>ACM</tag>
        <tag>ICPC</tag>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title>可持久化权值线段树</title>
    <url>/2020/12/15/%E4%B8%BB%E5%B8%AD%E6%A0%91/</url>
    <content><![CDATA[<p>静态区间第k大-<strong>可持久化权值线段树</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mid (l+r)/2</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n, q, m, cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn], b[maxn];</span><br><span class="line"><span class="keyword">int</span> root[maxn];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l, r, v;</span><br><span class="line">&#125;tree[maxn&lt;&lt;<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">newnode</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> rt = ++cnt;</span><br><span class="line">    tree[rt].v = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(l &lt; r)&#123;</span><br><span class="line">        tree[rt].l = newnode(l, mid);</span><br><span class="line">        tree[rt].r = newnode(mid+<span class="number">1</span>, r);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> rt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> pre, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> rt = ++cnt;</span><br><span class="line">    tree[rt].l = tree[pre].l;</span><br><span class="line">    tree[rt].r = tree[pre].r;</span><br><span class="line">    tree[rt].v = tree[pre].v + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(l &lt; r)&#123;</span><br><span class="line">        <span class="keyword">if</span>(x &lt;= mid) tree[rt].l = update(tree[pre].l, l, mid, x);</span><br><span class="line">        <span class="keyword">else</span> tree[rt].r = update(tree[pre].r, mid+<span class="number">1</span>, r, x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> rt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span> l;</span><br><span class="line">    <span class="keyword">int</span> x = tree[tree[v].l].v - tree[tree[u].l].v;</span><br><span class="line">    <span class="keyword">if</span>(x &gt;= k) <span class="keyword">return</span> query(tree[u].l, tree[v].l, l, mid, k);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> query(tree[u].r, tree[v].r, mid+<span class="number">1</span>, r, k - x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;q);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, a+i);</span><br><span class="line">        b[i] = a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sort(b+<span class="number">1</span>, b+<span class="number">1</span>+n);</span><br><span class="line">    <span class="keyword">int</span> len = unique(b+<span class="number">1</span>, b+<span class="number">1</span>+n) - b - <span class="number">1</span>;</span><br><span class="line">    root[<span class="number">0</span>] = newnode(<span class="number">1</span>, len);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> t = lower_bound(b+<span class="number">1</span>, b+<span class="number">1</span>+len, a[i]) - b;</span><br><span class="line">        root[i] = update(root[i<span class="number">-1</span>], <span class="number">1</span>, len, t);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="keyword">int</span> x, y, z;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;x, &amp;y, &amp;z);</span><br><span class="line">        <span class="keyword">int</span> t = query(root[x<span class="number">-1</span>], root[y], <span class="number">1</span>, len, z);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, b[t]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>ICPC</category>
        <category>Template</category>
      </categories>
      <tags>
        <tag>ACM</tag>
        <tag>ICPC</tag>
      </tags>
  </entry>
  <entry>
    <title>Java连接Sql-Server的一些问题</title>
    <url>/2020/12/16/Java%E8%BF%9E%E6%8E%A5SqlServer%E7%9A%84%E8%8B%A5%E5%B9%B2%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E7%AD%94/</url>
    <content><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyDB</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Connection conn;</span><br><span class="line">    <span class="keyword">private</span> Statement stat;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyDB</span><span class="params">(String DBName)</span> <span class="keyword">throws</span> SQLException, ClassNotFoundException</span>&#123;</span><br><span class="line">        Class.forName(<span class="string">&quot;com.microsoft.sqlserver.jdbc.SQLServerDriver&quot;</span>);</span><br><span class="line">        conn = DriverManager.getConnection(<span class="string">&quot;jdbc:sqlserver://localhost:1433;DatabaseName = student; user = sa; password = 123456&quot;</span>);</span><br><span class="line">        stat = conn.createStatemeng();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span><span class="params">()</span> <span class="keyword">throws</span> SQLException, ClassNotFoundException</span>&#123;</span><br><span class="line">        MyDB = <span class="keyword">new</span> MyDB(<span class="string">&quot;student&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上述代码是一个连接Sql的一个模板， 但最初在运行时遇到了两个问题</p>
<h3 id="TCP-IP未启动"><a href="#TCP-IP未启动" class="headerlink" title="TCP/IP未启动"></a>TCP/IP未启动</h3><p>Run之后出来一大段红字， 大概就是说访问 1433 failed了</p>
<p>于是到处找资料…</p>
<p>解决方法： 在SQL Server 配置管理器中</p>
<p>将使用的服务器(因为可能电脑上不止一个Sql服务器)的管理器， 将</p>
<p><strong>网络配置</strong>中相应服务器的<strong>TCP/IP</strong>启用即可。</p>
<p>当我开心地Run之后…发现这个问题的确是没了， 变成了……</p>
<h3 id="用户sa登录失败"><a href="#用户sa登录失败" class="headerlink" title="用户sa登录失败"></a>用户sa登录失败</h3><p>QAQ！</p>
<p>又是问老师又是找各种资料， 倒腾dos命令和管理器qaq</p>
<p>最后发现是因为…</p>
<p>不知道为什么我的SqlServer服务器<strong>使用的TCP端口并不是默认的1433</strong>而是另外的数字…</p>
<p>突然发现这点之后把代码中的端口改成了对应的数字就解决了…</p>
]]></content>
      <categories>
        <category>Java</category>
        <category>SqlServer</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>SqlServer</tag>
      </tags>
  </entry>
  <entry>
    <title>三体攻击-高维差分&amp;前缀和&amp;二分答案</title>
    <url>/2020/12/20/Prefix_diff/</url>
    <content><![CDATA[<h3 id="题面描述简化版："><a href="#题面描述简化版：" class="headerlink" title="题面描述简化版："></a>题面描述简化版：</h3><p>有 $$A\times B\times C$$ 的一个整数三维矩阵，对其进行 $m$ 次操作，每次操作指定 $$7$$ 个数，$$ la, lb, lc, ra, rb, rc, h$$ ，将由点$$(la, lb, lc)$$ 与 $$(ra, rb, rc)$$ 确定的范围内的数字减去 $h$ , 问在第几次操作后，有第一个非正数出现在矩阵中。</p>
<p>$$0 ＜ A\times B\times C &lt; 1e6 $$ </p>
<p>$$0 &lt; m &lt; 1e6 $$ </p>
<p>$$ 0 &lt; la, lb, lc, ra, rb, rc &lt; 1e6 $$</p>
<p>$$0 &lt; h, d(i, j, k) &lt; 1e9$$ </p>
<p>其中 $$d(i, j, k)$$ 表示序列中第 $$((i-1)\times B + (j-1))\times C + k $$  个数。</p>
<p>$$Time Limited:$$ $$5000ms$$ </p>
<h4 id="题意分析-amp-做法分析："><a href="#题意分析-amp-做法分析：" class="headerlink" title="题意分析 &amp; 做法分析："></a>题意分析 &amp; 做法分析：</h4><p>题目即对一个三维数组进行区间操作，由于其区间操作比较特殊(由两个点确定的小矩阵)，不难想到通过三维差分来在常数阶时间内实现区间修改，考虑朴素做法：</p>
<p>遍历m次操作, 每次操作后求前缀和查看是否有负数。</p>
<p>复杂度$$ O(ABCm) $$ $$1e12$$ 显然 $$TLE$$ </p>
<p>由于区间修改过程中所有整数的变化是单调的(只减不加)</p>
<p>因此考虑二分来确定答案取值。 时间复杂度 $$O((ABC + m)logm) $$ </p>
<h5 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h5><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5e6</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a, b, c, m;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">pos</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ((i<span class="number">-1</span>)*b + (j<span class="number">-1</span>)) * c + k;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ll arr[maxn];</span><br><span class="line">ll prefix[maxn];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">attack</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> la, ra, lb, rb, lc, rc;</span><br><span class="line">    ll h;</span><br><span class="line">&#125;A[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">change</span><span class="params">(attack x, <span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line">    arr[pos(x.la, x.lb, x.lc)] += x.h * f;</span><br><span class="line">    arr[pos(x.ra + <span class="number">1</span>, x.lb, x.lc)] -= x.h * f;</span><br><span class="line">    arr[pos(x.la, x.rb + <span class="number">1</span>, x.lc)] -= x.h * f;</span><br><span class="line">    arr[pos(x.la, x.lb, x.rc + <span class="number">1</span>)] -= x.h * f;</span><br><span class="line">    arr[pos(x.ra + <span class="number">1</span>, x.rb + <span class="number">1</span>, x.lc)] += x.h * f;</span><br><span class="line">    arr[pos(x.ra + <span class="number">1</span>, x.lb, x.rc + <span class="number">1</span>)] += x.h * f;</span><br><span class="line">    arr[pos(x.la, x.rb + <span class="number">1</span>, x.rc + <span class="number">1</span>)] += x.h * f;</span><br><span class="line">    arr[pos(x.ra + <span class="number">1</span>, x.rb + <span class="number">1</span>, x.rc + <span class="number">1</span>)] -= x.h * f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> lastu = <span class="number">-1</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(lastu &lt; u) <span class="keyword">for</span>(<span class="keyword">int</span> i = lastu + <span class="number">1</span>; i &lt;= u; i++) change(A[i], <span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">else</span>&#123; </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = lastu; i &gt; u; i--) change(A[i], <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(prefix, <span class="number">0</span>, <span class="keyword">sizeof</span> prefix);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= a; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= b; j++)  </span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= c; k++)&#123;</span><br><span class="line">                prefix[pos(i, j, k)] = prefix[pos(i<span class="number">-1</span>, j, k)] + prefix[pos(i, j<span class="number">-1</span>, k)] + </span><br><span class="line">                prefix[pos(i, j, k<span class="number">-1</span>)] - prefix[pos(i<span class="number">-1</span>, j<span class="number">-1</span>, k)] - prefix[pos(i<span class="number">-1</span>, j, k<span class="number">-1</span>)] - prefix[pos(i, j<span class="number">-1</span>, k<span class="number">-1</span>)] + prefix[pos(i<span class="number">-1</span>, j<span class="number">-1</span>, k<span class="number">-1</span>)] + arr[pos(i, j, k)];</span><br><span class="line">                <span class="keyword">if</span>(prefix[pos(i, j, k)] &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>, &amp;a, &amp;b, &amp;c, &amp;m);</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= a; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= b; j++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= c; k++)&#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">                arr[pos(i, j, k)] += x;</span><br><span class="line">                arr[pos(i+<span class="number">1</span>, j, k)] -= x;</span><br><span class="line">                arr[pos(i, j+<span class="number">1</span>, k)] -= x;</span><br><span class="line">                arr[pos(i, j, k+<span class="number">1</span>)] -= x;</span><br><span class="line">                arr[pos(i+<span class="number">1</span>, j+<span class="number">1</span>, k)] += x;</span><br><span class="line">                arr[pos(i+<span class="number">1</span>, j, k+<span class="number">1</span>)] += x;</span><br><span class="line">                arr[pos(i, j+<span class="number">1</span>, k+<span class="number">1</span>)] += x;</span><br><span class="line">                arr[pos(i+<span class="number">1</span>, j+<span class="number">1</span>, k+<span class="number">1</span>)] -= x;</span><br><span class="line">            &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d%d%d%lld&quot;</span>, &amp;A[i].la, &amp;A[i].ra, &amp;A[i].lb,</span><br><span class="line">         &amp;A[i].rb, &amp;A[i].lc, &amp;A[i].rc, &amp;A[i].h);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">0</span>, r = m<span class="number">-1</span>;</span><br><span class="line">    <span class="comment">//cout &lt;&lt; l &lt;&lt; &quot; &quot; &lt;&lt; r &lt;&lt; endl;</span></span><br><span class="line">    <span class="keyword">while</span>(l &lt; r)&#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(check(mid)) r = mid;</span><br><span class="line">        <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//cout &lt;&lt; l &lt;&lt; &quot; &quot; &lt;&lt; r &lt;&lt; endl;</span></span><br><span class="line">        lastu = mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//cout &lt;&lt; l &lt;&lt; &quot; &quot; &lt;&lt; r &lt;&lt; endl;</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; r + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>题解</category>
      </categories>
      <tags>
        <tag>-ACM</tag>
      </tags>
  </entry>
  <entry>
    <title>关于Java Swing组件、线程、数据库操作、文件OI</title>
    <url>/2020/12/30/java%E5%B0%8F%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h2 id="1-Swing界面基本内容"><a href="#1-Swing界面基本内容" class="headerlink" title="1.Swing界面基本内容"></a>1.Swing界面基本内容</h2><h4 id="a-基本Frame设置-amp-布局"><a href="#a-基本Frame设置-amp-布局" class="headerlink" title="a. 基本Frame设置 &amp; 布局"></a>a. 基本Frame设置 &amp; 布局</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyFrame</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">super</span>(<span class="string">&quot;Sno&quot;</span>);</span><br><span class="line">    <span class="keyword">this</span>.setSize(<span class="number">800</span>, <span class="number">400</span>);</span><br><span class="line">    <span class="keyword">this</span>.setLayout(<span class="keyword">new</span> BorderLayout());</span><br><span class="line">    <span class="keyword">this</span>.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.setVisible(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="b-JComboBox-下拉框-amp-JRadioButton-点状选择按钮"><a href="#b-JComboBox-下拉框-amp-JRadioButton-点状选择按钮" class="headerlink" title="b.  JComboBox 下拉框 &amp; JRadioButton 点状选择按钮"></a>b.  JComboBox 下拉框 &amp; JRadioButton 点状选择按钮</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> String[] sdepts = &#123;<span class="string">&quot;计算机&quot;</span>, <span class="string">&quot;数媒&quot;</span>, <span class="string">&quot;软工&quot;</span>&#125;;</span><br><span class="line"><span class="keyword">private</span> JComboBox&lt;String&gt; sdept = <span class="keyword">new</span> JComboBox&lt;String&gt;(sdepts);</span><br><span class="line"><span class="keyword">private</span> ButtonGroup bg = <span class="keyword">new</span> ButtonGroup();</span><br><span class="line"><span class="keyword">private</span> String[] sexes = &#123;<span class="string">&quot;男&quot;</span>, <span class="string">&quot;女&quot;</span>&#125;;</span><br><span class="line"><span class="keyword">private</span> JRadioButton[] sex = <span class="keyword">new</span> JRadioButton[sexes.length];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyFrame</span><span class="params">()</span></span>&#123;</span><br><span class="line">    &#123;&#125;</span><br><span class="line">    <span class="keyword">this</span>.add(sdept, <span class="string">&quot;South&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sexes.length; i++)&#123;</span><br><span class="line">        sex[i] = <span class="keyword">new</span> JRadioButton(sexes[i]);</span><br><span class="line">        bg.add(sex[i]);</span><br><span class="line">        <span class="keyword">this</span>.add(sex[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="c-JList-amp-its-DModel-dlist"><a href="#c-JList-amp-its-DModel-dlist" class="headerlink" title="c. JList &amp; its DModel(dlist)"></a>c. JList &amp; its DModel(dlist)</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> DefaultListModel&lt;String&gt; dlist = <span class="keyword">new</span> DefaultListModel&lt;String&gt;();</span><br><span class="line"><span class="keyword">private</span> JList&lt;String&gt; jlist = <span class="keyword">new</span> JList&lt;String&gt;(dlist);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyFrame</span><span class="params">()</span></span>&#123;</span><br><span class="line">    &#123;&#125;</span><br><span class="line">    <span class="keyword">this</span>.add(jlist, <span class="string">&quot;Center&quot;</span>);</span><br><span class="line">    dlist.add(idx, Str);<span class="comment">//在第idx个位置上插入一条str</span></span><br><span class="line">    &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="d-JTable-amp-its-DModel-dtable"><a href="#d-JTable-amp-its-DModel-dtable" class="headerlink" title="d. JTable &amp; its DModel(dtable)"></a>d. JTable &amp; its DModel(dtable)</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> String[] row = &#123;<span class="string">&quot;学号&quot;</span>, <span class="string">&quot;姓名&quot;</span>, <span class="string">&quot;专业&quot;</span>, <span class="string">&quot;性别&quot;</span>&#125;;</span><br><span class="line"><span class="keyword">private</span> DefaultTableModel dtable = <span class="keyword">new</span> DefaultTableModel(row, <span class="number">0</span>);</span><br><span class="line"><span class="comment">//以row为表头, 第二个参数为初始行数（容量）</span></span><br><span class="line"><span class="keyword">private</span> JTable jtable = <span class="keyword">new</span> JTable(dtable);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyFrame</span><span class="params">()</span></span>&#123;</span><br><span class="line">    &#123;&#125;</span><br><span class="line">    <span class="keyword">this</span>.add(<span class="keyword">new</span> JScrollPane(jtable), <span class="string">&quot;Center&quot;</span>);</span><br><span class="line">    dtable.addRow(<span class="keyword">new</span> Object[dtable.getColumnCount()]);</span><br><span class="line">    <span class="keyword">int</span> now = dtable.getRowCount() - <span class="number">1</span>; <span class="comment">//当前行索引号</span></span><br><span class="line">    dtable.setValueAt(Str, rowi, coli);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span>[] selrow = jtable.getSelectedRows();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; selrow.length; i++)</span><br><span class="line">        dtable.removeRow(selrow[<span class="number">0</span>]);</span><br><span class="line">    &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="e-对话框提示"><a href="#e-对话框提示" class="headerlink" title="e. 对话框提示"></a>e. 对话框提示</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">JOptionPane.showMessageDialog(<span class="keyword">null</span>, <span class="string">&quot;内容&quot;</span>, <span class="string">&quot;标题&quot;</span>);</span><br></pre></td></tr></table></figure>

<h4 id="f-JMenuBar"><a href="#f-JMenuBar" class="headerlink" title="f.JMenuBar"></a>f.JMenuBar</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addMenu</span><span class="params">()</span></span>&#123;</span><br><span class="line">        javax.swing.JMenuBar menu = <span class="keyword">new</span> javax.swing.JMenuBar();</span><br><span class="line">        <span class="keyword">this</span>.setJMenuBar(menu);</span><br><span class="line"></span><br><span class="line">        String[] str = &#123;<span class="string">&quot;文件&quot;</span>, <span class="string">&quot;编辑&quot;</span>, <span class="string">&quot;查看&quot;</span>, <span class="string">&quot;帮助&quot;</span>&#125;;</span><br><span class="line">        String[][] itemstr = &#123;&#123;<span class="string">&quot;打开&quot;</span>, <span class="string">&quot;重命名&quot;</span>, <span class="string">&quot;删除&quot;</span>, <span class="string">&quot;刷新&quot;</span>, <span class="string">&quot;刷新&quot;</span>, <span class="string">&quot;搜索&quot;</span> ,<span class="string">&quot;→&quot;</span>, <span class="string">&quot;退出&quot;</span>&#125;, &#123;<span class="string">&quot;剪切&quot;</span>, <span class="string">&quot;复制&quot;</span>, <span class="string">&quot;黏贴&quot;</span>, <span class="string">&quot;→&quot;</span>, <span class="string">&quot;复制备份到文件夹&quot;</span>&#125;, &#123;<span class="string">&quot;返回上级&quot;</span>&#125;, &#123;&#125;&#125;;</span><br><span class="line">        JMenu[] Menu = <span class="keyword">new</span> JMenu[str.length];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.length; i++)&#123;</span><br><span class="line">            Menu[i] = <span class="keyword">new</span> JMenu(str[i]);</span><br><span class="line">            menu.add(Menu[i]);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; itemstr[i].length; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(itemstr[i][j].equals(<span class="string">&quot;→&quot;</span>)) Menu[i].addSeparator();</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    JMenuItem item = <span class="keyword">new</span> JMenuItem(itemstr[i][j]);</span><br><span class="line">                    Menu[i].add(item);</span><br><span class="line">                    item.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        JMenu menu2 = <span class="keyword">new</span> JMenu(<span class="string">&quot;新建&quot;</span>);</span><br><span class="line">        Menu[<span class="number">0</span>].insert(menu2, <span class="number">0</span>);</span><br><span class="line">        String[] item2 = &#123;<span class="string">&quot;文件夹&quot;</span>, <span class="string">&quot;文本文档&quot;</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; item2.length; i++)&#123;</span><br><span class="line">            JMenuItem item = <span class="keyword">new</span> JMenuItem(item2[i]);</span><br><span class="line">            item.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">            menu2.add(item);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>





<h2 id="2-线程"><a href="#2-线程" class="headerlink" title="2.线程"></a>2.线程</h2><h4 id="内部类版："><a href="#内部类版：" class="headerlink" title="内部类版："></a>内部类版：</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">xc</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> sleeptime = <span class="number">1000</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                doing();</span><br><span class="line">            &#125;<span class="keyword">catch</span>(Exception ex)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Runnable接口版"><a href="#Runnable接口版" class="headerlink" title="Runnable接口版"></a>Runnable接口版</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> class <span class="title">MyFrame</span><span class="params">()</span> extends JFrame implements ActionListener, Runnable</span>&#123;</span><br><span class="line">    Thread xc = <span class="keyword">new</span> Thread(<span class="keyword">this</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                doing();</span><br><span class="line">            &#125;<span class="keyword">catch</span>(Exception ex)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="线程实例-Runnable版"><a href="#线程实例-Runnable版" class="headerlink" title="线程实例 - Runnable版"></a>线程实例 - Runnable版</h4><p>重点： a.<strong>JButton的actionPerformed</strong>怎么写 （start &amp; end按钮和Thread交互)</p>
<p>​            b.<strong>run</strong>函数的实现</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">XC</span> <span class="keyword">extends</span> <span class="title">JFrame</span> <span class="keyword">implements</span> <span class="title">Runnable</span>, <span class="title">ActionListener</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> JPanel p = <span class="keyword">new</span> JPanel(<span class="keyword">new</span> BorderLayout());</span><br><span class="line">    <span class="keyword">private</span> JTextField jf = <span class="keyword">new</span> JTextField(<span class="string">&quot;0.0&quot;</span>, <span class="number">4</span>);</span><br><span class="line">    <span class="keyword">private</span> JButton start = <span class="keyword">new</span> JButton(<span class="string">&quot;启动线程&quot;</span>), end = <span class="keyword">new</span> JButton(<span class="string">&quot;结束线程&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> Thread xc;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">XC</span><span class="params">()</span></span>&#123;</span><br><span class="line">        jf.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.BOLD, <span class="number">50</span>));</span><br><span class="line">        jf.setEnabled(<span class="keyword">false</span>);</span><br><span class="line">        p.add(jf, <span class="string">&quot;Center&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        jf.setBackground(Color.BLUE);</span><br><span class="line">        JPanel temp = <span class="keyword">new</span> JPanel(<span class="keyword">new</span> FlowLayout(FlowLayout.CENTER));</span><br><span class="line">        temp.add(start); temp.add(end);</span><br><span class="line">        start.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">        end.addActionListener(<span class="keyword">this</span>);</span><br><span class="line">        p.add(temp, <span class="string">&quot;South&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.setSize(<span class="number">800</span>,<span class="number">400</span>);</span><br><span class="line">        <span class="keyword">this</span>.setLayout(<span class="keyword">new</span> BorderLayout());</span><br><span class="line">        <span class="keyword">this</span>.add(p, <span class="string">&quot;Center&quot;</span>);</span><br><span class="line">        <span class="keyword">this</span>.setVisible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">this</span>.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line">	<span class="comment">//****</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sleeptime = <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                <span class="keyword">double</span> tmp = Double.parseDouble(jf.getText());</span><br><span class="line">                tmp = tmp + <span class="number">0.11</span>;</span><br><span class="line">                System.out.println(tmp);</span><br><span class="line">                jf.setText(Double.toString((<span class="keyword">int</span>)(tmp*<span class="number">10</span>) / <span class="number">10.0</span>));</span><br><span class="line">                xc.sleep(sleeptime);</span><br><span class="line">            &#125;<span class="keyword">catch</span>(InterruptedException ex)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">	<span class="comment">//***</span></span><br><span class="line">    <span class="comment">//***</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(e.getSource() == start)&#123;</span><br><span class="line">            <span class="keyword">if</span>(xc == <span class="keyword">null</span> || xc.getState() == Thread.State.TERMINATED) &#123;</span><br><span class="line">                xc = <span class="keyword">new</span> Thread(<span class="keyword">this</span>);</span><br><span class="line">                xc.start();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(e.getSource() == end)&#123;</span><br><span class="line">            <span class="keyword">if</span>(xc == <span class="keyword">null</span> || xc.getState() == Thread.State.TERMINATED) &#123;</span><br><span class="line">                JOptionPane.showMessageDialog(<span class="keyword">null</span>, <span class="string">&quot;线程未启动！&quot;</span>,<span class="string">&quot;错误&quot;</span>,JOptionPane.ERROR_MESSAGE);</span><br><span class="line">                <span class="keyword">return</span> ;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(xc.getState() != Thread.State.TIMED_WAITING) <span class="keyword">return</span> ;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(xc.getState() == Thread.State.TIMED_WAITING) xc.interrupt();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">	<span class="comment">//***</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> XC();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="多线程互斥运行-加互斥锁synchronized"><a href="#多线程互斥运行-加互斥锁synchronized" class="headerlink" title="多线程互斥运行(加互斥锁synchronized)"></a>多线程互斥运行(加互斥锁synchronized)</h4><p>实现方法：两个线程共用一个缓冲区<strong>buffer</strong></p>
<p>设定初始指令<strong>order</strong>(让谁先开始占用资源)</p>
<p>第一个线程运行完了之后， 将 <strong>order</strong> 指向另一个线程。</p>
<p>以此类推。</p>
<p>重要：当改变完order之后 调用this.notify() 唤醒另一个线程</p>
<p>而当指令不指向自己时， 调用this.wait()使当前线程进入阻塞态。</p>
<p><strong>对阻塞态的理解： run()方法停留不再运行。</strong></p>
<h2 id="3-文件OI"><a href="#3-文件OI" class="headerlink" title="3.文件OI"></a>3.文件OI</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileOI</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Vector vec = <span class="keyword">new</span> Vector();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String[] readAllLines(String path) thorws EXception&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(path);</span><br><span class="line">        InputStream is = <span class="keyword">new</span> FileInputStream(file);</span><br><span class="line">        InputStreamReader isr = <span class="keyword">new</span> InputStreamReader(is, <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        BufferedReader br = <span class="keyword">new</span> BufferedReader(isr);</span><br><span class="line">        InputStreamReader isw = <span class="keyword">null</span>;</span><br><span class="line">        </span><br><span class="line">        String str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">while</span>((str = br.readLine()) != <span class="keyword">null</span>)&#123;</span><br><span class="line">            vec.add(str);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (String[]) vec.toArray(<span class="keyword">new</span> String[vec.size()]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(String path, String content)</span></span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(path);</span><br><span class="line">        FileOutPutStream fos = <span class="keyword">null</span>;</span><br><span class="line">        OutputStreamWriter osw = <span class="keyword">null</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(!file.exists())&#123;</span><br><span class="line">                <span class="keyword">boolean</span> hasFile = file.createNewFile();</span><br><span class="line">                <span class="keyword">if</span>(hasFile)&#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;file not exists, build a new one&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                fos = <span class="keyword">new</span> FileOutputStream(file);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                fos = <span class="keyword">new</span> FileOutputStream(file, <span class="keyword">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            osw = <span class="keyword">new</span> OutputStreamWriter(fos, <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">            osw.write(content);</span><br><span class="line">            osw.write(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="4-数据库操作"><a href="#4-数据库操作" class="headerlink" title="4.数据库操作"></a>4.数据库操作</h2><h4 id="a-数据库连接"><a href="#a-数据库连接" class="headerlink" title="a.数据库连接"></a>a.数据库连接</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyDB</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Connection conn;</span><br><span class="line">    <span class="keyword">private</span> Statement stmt;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyDB</span><span class="params">(String DBName)</span> <span class="keyword">throws</span> SQLException, ClassNotFoundException</span>&#123;</span><br><span class="line">        Class.forName(<span class="string">&quot;com.microsoft.sqlserver.jdbc.SQLServerDriver&quot;</span>);</span><br><span class="line">        conn = DriverManager.getConnection(<span class="string">&quot;jdbc:sqlserver://localhost:49671; DatabaseName=student;user = sa;password=123456;&quot;</span>);</span><br><span class="line">        <span class="keyword">this</span>.stmt = conn.createStatement();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="b-其他操作可以参照-Java-文件-MyDB-java-（query-amp-更新插入删除"><a href="#b-其他操作可以参照-Java-文件-MyDB-java-（query-amp-更新插入删除" class="headerlink" title="b. 其他操作可以参照 Java 文件 MyDB.java （query &amp; 更新插入删除)"></a>b. 其他操作可以参照 Java 文件 MyDB.java （query &amp; 更新插入删除)</h4><h2 id="5-异常处理"><a href="#5-异常处理" class="headerlink" title="5.异常处理"></a>5.异常处理</h2>]]></content>
      <categories>
        <category>Java</category>
        <category>复习</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>随机化-TJOI2015</title>
    <url>/2020/12/20/P3973/</url>
    <content><![CDATA[<h3 id="题意简述："><a href="#题意简述：" class="headerlink" title="题意简述："></a>题意简述：</h3><p>A为01矩阵, 求某矩阵运算的最优解(最大值)。</p>
<h5 id="题意分析："><a href="#题意分析：" class="headerlink" title="题意分析："></a>题意分析：</h5><p>因为A为01矩阵且是最优解问题, 故可以考虑随机化, 即随机选择一个位置，将其取反，如果答案更大则接受这个解，否则不接受。</p>
<h5 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h5><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">505</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">-1e9</span>, n;</span><br><span class="line"><span class="keyword">int</span> A[maxn];</span><br><span class="line"><span class="keyword">int</span> B[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> C[maxn], t[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(t, <span class="number">0</span>, <span class="keyword">sizeof</span> t);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)&#123;</span><br><span class="line">            t[i] += A[j] * B[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        t[i] -= C[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        res += A[i] * t[i];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(res &gt; ans)&#123;</span><br><span class="line">        ans = res;</span><br><span class="line">    &#125;<span class="keyword">else</span> A[p] ^= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    srand(<span class="number">10007</span>);</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;B[i][j];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;C[i], A[i] = <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> p = rand() % n;</span><br><span class="line">        A[p] ^= <span class="number">1</span>;</span><br><span class="line">        update(p);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>题解</category>
      </categories>
      <tags>
        <tag>ACM</tag>
        <tag>随机化</tag>
      </tags>
  </entry>
  <entry>
    <title>2020小结</title>
    <url>/2020/12/31/Write%20For%20Myself/</url>
    <content><![CDATA[<p>​    嘛 ~ 新年快乐啦大家！新年心想事成哦 ~</p>
<p>​    在这个关头上，其实是有很多东西想说的，在种种因素推动之下，2020于我而言，确是我的思想发生重大变化的一年。</p>
<p>​    而其中对我最重要的——这大概是我找到了自己所热爱的东西、找到了真正值得去持续不断地追求的东西的一年，大概是我觉得自己确确实实成为了一个大写的人的一年。</p>
<p>​    这算的上不太平的一年，我恨它，我却也打心底里感激它。</p>
<p>​    总之总之……新的一年，大家都要加油呀~www，希望大家都能，都能成为自己所想成为的样子。</p>
<hr>
<p>@tzf , @qsw 冲鸭，来年还要你们来carry我呢0.0，带我进World-Finals~ www 寒假我必会把端茶送水练得炉火纯青（？ 我是说算法（逃</p>
<p>@clz @stq 友队大佬轻点锤233 孙巨也算是在种种方面对我帮助不小的，经常会交流不少的事儿。新的一年继续抱紧孙巨大腿（clz女装照发了吗？？？？</p>
<p>@wlm @zzl @lsq @lcj @zsy 517大家庭w！（指大晚上都没人在宿舍的那种和谐氛围(逃  ）一直以来我生活习惯不是太好，哈哈哈对舍友们可能造成了一点困扰（尤其是lm，逃QAQ）嘿嘿~ 不过新的一年，也还请多多包涵啦。有啥做的不好也可以告诉我，我都可以改www（提前龙哥nb好吧，不接受异议的）</p>
<p>还有许许多多的人和我发生了不少的交集，但也就不一一都列出来啦。</p>
<p>​    2021 冲冲冲~</p>
]]></content>
      <categories>
        <category>随笔记</category>
      </categories>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>新年贺词：马克思主义的回归和新时代的开启</title>
    <url>/2021/01/01/Temp/</url>
    <content><![CDATA[<p>转载自赤色星灵佐伊的文章/待搬运至新的博客下。</p>
<p>临时置于此。</p>
<p>一、民间舆论左转的实质意义何在</p>
<p>2020年很多人有一个感受，即民间舆论在快速左转。这种感受是由一系列的热点事件串成的。</p>
<p>2020年4月9日，观察者网发文《社会主义中国的“马云们”到底是什么身份》，称马云为“人民富豪”。其后，有人在知乎发起话题，“如何评价观察者网将马云称为「人民富豪」?”这个话题下面有近2000个回答。有一个回答获得了四千多赞，这个回答就一句话，“一个大资本家成功的把自己包装成了和工人阶级一个队伍。”紧随其后的一个回答获得了万赞，这个回答引用金岳霖《形式逻辑》中的一段话，“资产阶级的‘理论家’为了保持他们的阶级利益，就胡诌出所谓‘人民资本主义’这样的虚假概念……人类认识的发展过程，也就是一个由真实概念逐渐替代虚假概念，深刻概念逐渐替代初步概念的过程。”</p>
<p>随后，马云商业就是最大的公益这一演讲，在b站被狂轰乱炸。弹幕区里满是“全世界无产者联合起来”，“你工人爷爷来了”，“996是福报，打倒资本家”之类的话。</p>
<p>5月1日，b站发布视频《后浪》，弹幕区再次沦陷，一堆人甚至跑到何冰微博下面开骂，“能不能别弄那么恶心的视频了行吗，现实点别弄毒鸡汤骗人。老实演戏，没戏演的话歇会，别出来恶心人。”“您还是闷声发大财吧，小孩该送到国外送到国外，该享受生活享受生活，底层的小孩该当服务员的当服务员，您到时候照顾生意就行。”</p>
<p>随后，有人提议设立企业家节。又是一群人跑到他的微博下面满咒骂。有人讽刺，“人大代表？你真的是人大代表？是人大代表，还是资本代表呀？996还不够，割韭菜还不够，还要建立狂欢节？”有人怒骂，“你代表了资本家，是人民的公敌！打倒一切资本家走狗！”有人怒斥，“资本家代表人民吗？”有人这样说，“我的话搁这，作为无产阶级的一份子，我不同意。”</p>
<p>除此外还有很多其他例子，这里不一一列举。</p>
<p>这里有一个重要的问题，即我们怎么看待这样的舆论变化。这样的舆论左转是个别现象还是普遍现象？是算法基于个人喜好推送给我们，因此让我们感觉明显，还是的确出现了某种普遍的趋势？如果的确出现了某种普遍的趋势，那么，造成这种趋势的基础是什么，以及，这种趋势会如何发展？这是我们需要搞清楚的问题。</p>
<p>我们先看一张表，这张表统计了四个关键词：资本家、无产阶级、毛选、他。</p>
<p>这四个关键词中，前两个带有明显的左翼倾向（民族主义和自由派，一般是用企业家代替资本家，用工人或职员代替无产阶级），用于衡量使用左翼词汇的互联网用户。</p>
<p>第三个关键词是毛选（很多国人是通过阅读《毛选》而走向马克思主义的），用于衡量自发/自觉学习理论的人的变化趋势（假定搜索毛选者和阅读毛选者比例恒定）。</p>
<p>第四个是中性词，大致可以衡量使用百度搜索引擎的用户规模变化。</p>
<p><img src="https://i.loli.net/2021/01/01/J9SHvneBThAL12m.png" alt="图片"></p>
<p><img src="https://i.loli.net/2021/01/01/DsKWUahlBIuoNSQ.png" alt="图片"></p>
<p>从表可以看出，2015-2020年间，使用左翼词汇进行搜索的百度用户越来越多。其中，2015-2018年变化相对缓慢，2019年开始剧烈增加，2020年增加幅度更大。在2015-2020年间，搜索毛选的人也越来越多，其中2015-2018年变化也相对缓慢，2019年快速增长，而2020年更是剧增。</p>
<p>这表明舆论左转不是个别的，而是普遍的，不是系统基于算法推送我们造成的印象偏差，而是的确出现了全网范围普遍的左转趋势。</p>
<p>这种左转趋势在青年人中尤为明显。</p>
<p>以B站为例，在用户年龄偏低的B站上面，出现了为数众多（绝对数而非比例）的初高中生，有些看过《共产党宣言》，有些人看过《国家与革命》，有些人看过《帝国主义论》，有些人甚至在高中就啃过《资本论》。还有一群年轻UP主在B站（以及知乎、微博、QQ群）自发宣称马克思主义，自发宣称的人数之众，以至于封号完全无济于事。有些人把毛选制作成音频传播，有些人把政经制作成通俗视频传播，有些人放着苏联的歌曲缅怀火红的时代，有些人用阶级的视角解读各种热点事件。还有更多的人，被这种透彻的世界观吸引，用跟风、玩梗的方式表达对现实的自发反抗。</p>
<p>有些人把B站出现的大量跟风玩梗视为年轻人无聊的举动，这是不对的。跟风玩梗的本质，是世界观尚不系统的年轻人，被彻底的世界观和方法论（马列主义的）吸引，但却不知道怎么和自身实践联系起来，于是用这种方式表达对现实的反抗。这种反抗是自发的舆论反抗，因此也是混乱无力的，但是这种反抗却折射出一股不可阻挡的进步趋势。</p>
<p>青年人接受马克思主义，也不仅仅是个别现象。百度统计显示，搜索毛选的人以年轻人为主。搜索人群中，29岁以下的年轻人占比超过75%。从TGI值看（[某年龄段搜索毛选人员所占该年龄段比例/所有年龄段搜索毛选人员所占比例]*标准数100），19岁以下的比例是最高的。</p>
<p><img src="https://i.loli.net/2021/01/01/YFNhLyMjS32lWrc.png" alt="图片"></p>
<p><img src="https://i.loli.net/2021/01/01/P7eUoigxdV9uMj1.png" alt="图片"></p>
<p>资本家的出格之举在网上招来声势浩大的声讨，用阶级、资本家等概念看待社会的人越来越多，搜索毛选的人大幅增长（因此可以判断看《毛选》的人也在大幅增长），并且以青年人为主，越来越多的青年人在网上自发从事着宣传，这一切说明了这样一个问题——马克思主义作为一种思潮（而非运动）在青年人中回归了，这是民间舆论左转最本质的意义。</p>
<p>恩格斯曾为德国工人继承了德意志民族的理论素养而自豪，列宁也曾描述过俄国工人学习《资本论》时的情景，并称俄国工人继承了德国工人对理论的自觉。</p>
<p>无疑，这个趋势在今天的中国再次兴起。中国先进无产者（及其后备军）对马克思主义的兴趣近年来逐步高涨，这个高涨的趋势在2020年进一步加速。这个趋势目前来看有如下特点：（1）虽然这些人在劳动者中占比非常小，但是绝对数量并不小，并且越来越多。（2）这些人主要以青年脑力无产者和青年学生为主。（3）对毛主席的崇敬，以及对毛主席著作的自发学习，构成了很多人思想转变的桥梁。</p>
<p>二、马克思主义是在什么样的主客观条件下回归的</p>
<p>马克思主义思潮回归是在什么样的主客观条件下发生的，这是我们要搞清楚的第二个问题。也就是说，是什么样的政治、经济和阶级条件，使得马克思主义重新回归。在这样的舆论平台上，我们无法分析每一个条件的历史和现状。在这里我们主要分析马克思主义回归的经济根源。</p>
<p>1978年后，我国经济基本可划分为三个大的阶段。</p>
<p>（1）1978-1992年</p>
<p>这是资本的复兴阶段。在这个阶段，资本被重新召唤出来，并基本建立了全国统一的商品市场、金融市场和劳动力市场。在这个阶段，资本家作为一个阶级重新出现。城市中，国企工人事实上成了雇佣劳动者，但是他们工作仍有保障。农村中，小农经济重新成为主体，大量农民流出农村，成为城市里面的农民工。贫富分化再次出现，意识形态的争论甚嚣尘上，但是这种争论更多局限在体制内。城市中工人的经济利益尚未受到冲击，农村中小农在分田初期（农产品收购价上调+打工赚钱）收入增加，他们对意识形态并不关心。</p>
<p>（2）1992-2008年</p>
<p>这是资本的快速发展阶段。在这个阶段，资本在法律上获得认可，私人资本家作为一个阶级在政治上获得认可，国有企业的资本化运营在实践层面快速推行。城市中，国企工人大规模下岗，新生代工人遭受着资本的残酷压迫。农村中，三农问题出现，农村逐步凋敝。体制内的意识形态之争基本完结，民间以老工人群体为主的左派却重新壮大起来。在这个过程中，脑力无产者群体作为一个阶层快速壮大，他们是工厂的工程师、公司的办事员、互联网的技术员、学校的老师，等等，他们在被资本压迫的同时，也享受着资本快速发展的红利，他们真诚地为资本唱着赞歌。</p>
<p>（3）2008-2020年</p>
<p>这是资本盛极而衰的阶段。在这个阶段的上半段，垄断资本快速形成。但是从2012年往后，经济增速断崖式下滑。为了保住就业民生，国家数次刺激经济，导致房价上天。在这个阶段，国企老工人的活动进入尾声，多数老工人退休进入了社保。新生代工人代替国企老工人，成了无产阶级的主体，而新生代工人是成长于资本环境下的工人，因此他们的抗争自发地仅仅是经济抗争，而不具备社会主义因素。农村已经凋敝了，农村青壮年劳动力大规模转移，缓和了三农问题。曾经享受着资本快速增长的红利，脑力无产者一度投向了自由主义的怀抱。但是，在垄断资本形成，而整个经济增速放缓的时候，资本对脑力无产者的压迫日趋严重。房价、教育、医疗等等，如同新的大山压得脑力无产者无法喘息。而脑力无产者又是这样的一个群体，他们多数上过大学，也就是说他们多数系统地接触过马克思主义的基本观点。他们上学时，大概对“阶级”、“资本”、“剥削”这些灌输的概念嗤之以鼻，学习的灌输与现实的政策完全不符，自然应该被青年人鄙夷。但是，当他们重新进入社会的时候，也就是说当他们真正地被资本剥削和压迫的时候，这一切发生了变化。</p>
<p>曾经那个老工人（含老左）的群体还在，他们以及受他们影响的青年群体（规模极小）在网上自发或自觉地宣传着马克思主义。这种宣传已经持续了十几年了。能接触到这种宣传的人主要是脑力无产者，而脑力无产者在2008年之前对这种宣传嗤之以鼻，“干嘛！要回到那个时代啊！”“不要动不动搞阶级对立！”“什么剥削，这就是一种分工！”</p>
<p>种子已经撒下了，但当时的土壤太干了，能发芽的没几颗。</p>
<p>垄断资本的快速形成，以及日益尖锐的阶级矛盾，使得整个土壤发生了变化。90后，特别是95后的脑力无产者，在他们进入劳动领域的时候，靠自己工资买房已经彻底无望，阶层固化甚至在他们上学的时候就成了热门话题，他们中越来越多的人用阶级的视角来看待这个社会。资本抽在他们身上的每一鞭，都在促使他们思考，“为什么！”“这是为什么！”他们中的一部分人开始自发寻找出路了，而此时“阶级”、“剥削”、“资本家”等等概念成了引导他们重新回归马克思主义的桥梁。</p>
<p>互联网的快速发展加速了转化的趋势。脑力无产者及其后备军（主要是大学生），通过互联网接触或被推送了大量宣传马克思主义的素材，而这些素材的世界观是那么深刻彻底，不带偏见的青年人被深深折服。</p>
<p>不是每一个青年都能重归马克思主义，但是，青年人作为一个整体，重归马克思主义的条件已经具备了。</p>
<p>具体的历史过程和现实环境，使得在体力无产者新陈代谢的更替期，脑力无产者成了马克思主义复兴的主力军。</p>
<p>就是在这样的主客观条件下，马克思主义作为一种思潮，在青年人中重新回归。</p>
<p>三、未来的趋势</p>
<p>当前宣传马克思主义的群体主要有四个：青年学生、青年脑力无产者、老工人（含老左）、新一代工人。</p>
<p>在不久的将来，导致这四个群体接受马克思主义的主客观条件会发生怎么样的变化呢？进而言之，这四个群体中，接受马克思主义的人会变多还是变少呢？关于这一点，我们不能详细分析，但可以大致勾勒出趋势。</p>
<p>这四个群体中，广大的青年脑力无产者和学生是最主要的群体。</p>
<p>青年脑力无产者的特点，是在深深体会到压迫后，通过各种渠道接触马克思主义，接受马克思主义。从未来趋势看，996没有逆转的趋势，资本对脑力无产者的压迫只会越来越强烈。因此，导致他们接受马克思主义的因素会不断加强，这个群体接受马克思主义的人数会不断增多。</p>
<p>青年学生的特点，是在没有阶级压迫的时候，通过理论学习以及阅读素材（比如阅读脑力无产者被压迫的素材）接受马克思主义。从未来趋势看，他们接触到相应资料（理论和素材）的概率会不断增加（因为自发或自觉宣传的人会增多），而客观条件（现实的压迫和舆论的反映）也会让他们更容易接受宣传。因此，这个群体接受马克思主义的人数也会增多。</p>
<p>老工人（含老左）这个群体人不少，但已经退出生产领域，且不熟悉网络。他们可歌可泣，是上个时代的余晖，也为照亮这个时代做出了卓越的贡献。这个群体的人，随着他们的老去，在不断缩减。</p>
<p>新一代工人。这个群体目前很少。他们工作太累了，基本是6天12小时，甚至更多。他们不太上知乎、B站、微博这种左翼大量聚集的的平台，因此他们接触左翼思想的时间和渠道都更少。然而，新一代工人才是真正的主力。他们掌握了大生产，随着产业的发展而壮大起来，他们受到的压迫是最重的，他们是所有群体中，最没有希望在当前发家致富的群体。他们要么一辈子做雇佣奴隶，要么站起来赚钱。</p>
<p>那么，新一代的工人会在怎样的条件下，大规模接受马克思主义呢？这里，我们不做任何细节的猜测，但可以给出一个大胆的判断：</p>
<p>作为无产阶级大军中最重要的产业工人，将在不久的将来，如同今天的脑力无产者一般，寻找自身的出路。而那时，已经先他们一步接受马克思主义思想的脑力无产者，将扮演他们领路人的角色。</p>
<p>2020年即将过去，一个新的时代已经开始了。</p>
]]></content>
      <categories>
        <category>临时分类文章</category>
      </categories>
      <tags>
        <tag>马克思主义</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/2021/01/02/Worker1/</url>
    <content><![CDATA[<p><strong>移自：佐伊23。</strong></p>
<p>工人不必然是“打工人”，只有在一定的制度下，工人才会变成“打工人”。工人变成打工人，最根本的条件是“生产资料和劳动者的分离”，这个分离最初是在80年代出现的。</p>
<p>一、城乡资本的复活和体制外打工人的出现</p>
<p>（一）城乡小生产的发展：第一批打工人的诞生</p>
<p>80年代初的农村改革破坏了集体经济，这造成了两个后果：（1）农村形成了大量自由劳动力。集体经济时期，农民在农忙时节从事农业劳动，在农闲时期从事集体劳动（如修水利等）；集体经济破坏后，农闲时期不再从事任何集体劳动，形成大量富余劳动力。（2）分田单干造成了小农经济，而不稳定的小农经济必然出现分化，先富起来的一批人，在政策的支持下承包农田、鱼塘、副业，并雇工经营。</p>
<p>1979年，在分田单干尚未大规模推行的时候，广东农民陈志雄承包鱼塘并雇工1人。陈志雄的雇工行为引起了广泛讨论，1981年人民日报发表文章《进一步解放思想，搞活经济》，文章称陈志雄雇工也不算剥削，因为他的“收入比其他人高，主要是多劳多得，是无可非议的”。</p>
<p>如果说陈志雄雇工一人还能说他收入较高主要是多劳多得，那么接下来的发展很快就突破了人民日报的论调。分田单干迅速导致贫富分化，“两户一体”（专业户、重点户和新经济联合体）大量出现，他们在政策支持下获得优惠贷款，承包农田、机器，雇佣农业工人进行生产。于是，农村中第一批“打工人”出现了。</p>
<p>与此同时，在城市中小生产也悄然出现。1979年，为解决闲散劳动力就业（比如返城知青）问题，召开了全国工商局长会议，允许在修理、服务等行业开展个体经营。这是城市资本发展的第一步。小生产快速发展的同时，一批个体户逐步积累资本开始雇工经营。怎么看待城市个体户雇工经营的问题，和怎么看待农村雇工经营一样，引起老干部广泛讨论。最终在1981年（也就是人民日报定调陈志雄雇工不属于剥削的那一年），国务院出台文件规定，“个体经营户，必要时，可以请一、二个帮手，技术性较强或者有特殊技艺的，可以带两、三个最多不超过五个学徒。”于是，城市中也出现了第一批“打工人”。</p>
<p>（二）城乡资本的发展：第二批打工人出现</p>
<p>社会主义条件下居然出现了资本式的雇工，这到底算不算剥削，这个问题让很多老干部感到疑惑。为了在理论上给改革开路，有人从《资本论》中找到例证，通过篡改理论的方式论证雇工的合法性。事情是这样的：在《资本论》第一卷的《剩余价值率和剩余价值量》这一部分中，马克思为了说明资本增值运动必须要有最低限度的价值额，为此而举例说，假如工作日为12小时，其中必要劳动时间8小时、剩余劳动时间4小时，那么为了使资本家的生活比工人好一倍、并且把所生产的剩余价值一半转化为资本，这样他必须同时至少需要雇佣8个人。有人如获至宝，明目张胆地篡改理论，说马克思划分了小业主和资本家的界限，雇佣8人以下是“介于资本家和工人之间的中间人物，成了小业主”，雇佣超过8人才是资本家。</p>
<p>中央以此为据，对雇工是否合法给出了一个似是而非的结论，雇工不超过8人就不是资本家。但是资本的发展异常迅猛，几乎就在中央定调的同时，城乡资本的雇工已经超过了8人的界限。</p>
<p>在农村中，变卖或承包社队企业导致生产资料和劳动者的进一步分离，这为资本快速发展创造了条件。1978年前，社队企业是农村集体工业的重要体现，也是新中国工业反哺农业的重要措施。他们采取就近取材、因地制宜的方式，从农副加工、采矿、建筑、农具制造、农机修配、运输等各种行业，旨在服务本地农民，反哺本地农业。但是改革以来，社队企业的固定资产被折价变卖或承包给个人经营，社队企业从名义上的集体企业变成了事实上的个人企业。而集体经济被破坏后，农闲时期又富余出大量劳动力，这些劳动力需要寻找就业出路。无疑，已经事实上私有化的社队企业成了他们就业的重要去向。他们农忙时候从事农业工作，农闲时候在社队企业从事工业劳动，典型的特点就是“离土不离乡”。于是，在农村开始形成了第二批“打工人”，他们受雇于名义上还是集体经济的社队企业（1984年改名为乡镇企业），成为资本增殖的工具。</p>
<p>但是资本发展再次突破了这个界限。一方面，相对于集体农业解体后出现的大量闲置劳动力，乡镇企业的规模显得太狭小了；另一方面，私营企业迅速发展，开始和国有企业抢夺生产资料，导致经济出现结构性失衡。为了缓解这一矛盾，沿海开始推广两头在外的外向型经济（原料从海外来，产品往海外卖）。廉价劳动力、廉价土地、完备的工业体系、受过一定教育的劳动力以及优质的营商环境，是世界上一切其他发展中国家都无法兼备的，这使得沿海成了资本增值的天堂。80年代中后期，农民工开始向沿海转移，出现了数千万“离土又离乡”的农民工，这在农村中形成了真正意义上的“打工人”，他们不再从事农业生产，而工资成了他们唯一的收入来源。在之后的新闻媒体中，他们被称为“农民工”。</p>
<p>在城市中，一批积累了资本的小生产开始扩大规模，成为了事实上的私营企业。1979年，靠炒瓜子“发家致富”的年广九雇工已经超过10人。1982年，“傻子瓜子”的雇工规模超过百人。1986年，傻子瓜子年终销售更是在3个月内实现利润100万。于是，城市中也出现了第二批“打工人”，他们受雇于城市的私营企业，成为资本增殖的工具。</p>
<p>城乡私营企业的发展是如此迅猛，到1987年，“城乡私营企业雇工达361万人，平均每户雇16人，雇工30人以下的占70％-80％，雇工超过100人的接近总数的1％。”</p>
<p>如果说个体户雇一两个帮手，老干部还能说服自己这不是剥削，那么对雇工高达100人的私营企业又当如何看待呢？这些老干部，不乏在参加革命前就是雇工或长工出身，难道他们还不知道这意味着什么吗？为平复老干部的情绪，总设计师多次开会统一思想。1983年他指出：“有个别雇工超过了国务院的规定，这冲击不了社会主义。只要方向正确，头脑清醒，这个问题容易解决。十年、八年以后解决也来得及，没有什么危险。”，1984年再次指出，“前些时候那个雇工问题，相当震动呀，大家担心得不得了。我的意见是放两年再看。”事实上，一直到1987年之前，我国只允许有个体经济，而不承认有私人资本。1984年文件指出，对雇工超过8人的采取“不鼓励，不禁止”的政策，而不能按资本主义看待。</p>
<p>私营企业就在这样暧昧不清的环境中野蛮生长，直到1988年修宪。而在私营企业野蛮生长的同时，资本主义的生产方式开始侵蚀国企。</p>
<p>二、国企改制：国企主人沦为打工人的过程</p>
<p>（一）1978年之前的国企</p>
<p>1978年前的国企工人不是“打工人”，他们是“企业的主人”。他们和打工人的区别至少有如下三个方面。</p>
<p>其一、工人与企业的关系。打工人只是企业的雇员，企业可以随时解雇他们。但当时的工人并非企业的雇员，企业没有权力开除工人。由于企业没有权力开除工人，因此企业的干部也不敢随意训斥工人。干部和工人的关系相对融洽，干部不是靠权力压服工人，而是通过模范带头作用引领工人。</p>
<p>其二、企业利润的分配。打工人只能获取工资，而不能享有企业的利润。当时的工人是企业的主人，那企业的利润自然应该由主人享有，而不是由企业的管理层霸占，这是工人和打工人的另一个重要区别。当时的企业，除了支付工资外，还通过各种福利将利润反馈工人。比如，企业有自己的医院、学校和修房子的住建科，职工享受免费的医疗和教育，并且享受福利分房。</p>
<p>其三、企业的管理。打工人仅仅是企业的雇员，因此他只有服从领导的义务，而没有管理企业的权力。当时的工人是企业的主人，那么主人就不能仅仅有服从的义务而没有相应的权力。《鞍钢宪法》作为当时企业管理的原则性规定，在制度层面保障了工人对企业的管理权。《鞍钢宪法》可概括为“两参一改三结合”，即“干部参加劳动，工人参加管理；改革不合理的规章制度；工程技术人员、管理者和工人在生产实践和技术革新中相结合”。工人在劳动中不是被动的工具，不是被动的领受任务，而是主动的自觉的人，主动参与到企业计划的制定和管理之中。</p>
<p>企业不能开除工人，工人能够参与管理，因此工人也能够最大限度监督干部。70年代末期，某个钢铁厂的领导公车私用，被一群工人堵在厂门口，要求他下车来解释，这个车拿去干嘛了，为什么要占国家的便宜，厂领导乖乖下车，低头认错。</p>
<p>这个年代的工人，有福利、有待遇、有民主、有权力，他们由衷感到自己就是企业的主人，他们和打工人有着本质的区别。</p>
<p>对国企而言，改革改的就是这三点。</p>
<p>（二）国企改革在改什么</p>
<p>国企改革的第一步是收回工人对企业的管理权。1979年国家推行放权让利，在国营企业建立厂长负责制，收回工人对工厂的管理权。为缓和工人的抵触，在收回工人权力的同时，给工人增加工资和奖金。从短期看工人收入增加，从长期看工人权力丧失，最终必然导致更大的经济利益的丧失。</p>
<p>国企改革的第二步是利改税（1983年）和拨改贷（1985年）。我国企业以前所有利润统一上缴国家，如果需要扩建厂房或者购买设备，则由国家无偿拨款给企业。利改税和拨改贷，就是用所得税替代利润上缴，用有息贷款替代无偿拨款。先看利改税。以大企业为例，国营大中型企业按55％的比例缴纳所得税，税后盈余还需按一定比例上交。整体而言，企业要将大约7-8成的利润通过利税方式上缴国家。再看拨改贷。国家收走了企业8成的盈利，却不再给企业的建设拨款，而是要求企业向银行借贷。私企外企的综合税率只有17%-33%（本身税就低，还有各种减免），而国企综合税率高达7-8成，这使得国企在极度不公平的环境下参与了市场竞争，为之后国企破产埋下伏笔。</p>
<p>随着一长制的恢复，工人失去已有的民主权利，管理层逐渐失控。1982年全国职工状况调查表明，一些领导干部通过不正当的手段为自己的子女安排较好的工种，在提干、晋级、住房分配等涉及群众利益方面，都给自己以及自己的子女和亲属以特殊的照顾。企业厂长由上级领导任命、委派，实行负责制，职工满意不满意都得接受，干好干坏群众既不能褒，也不能贬。他们说：“工人只尽主人翁义务，没有主人翁权利，主人担风险（企业办不好，领不到工资），公仆有保险（企业办垮了照样当官或调走了事）”。企业干群关系开始紧张，工人用消极怠工来对付干部，已经成为公开的秘密。</p>
<p>1987年推行的承包制进一步降低了工人的积极性。承包制就是把国营企业的各个车间部门承包给各种厂长、书记、主任等等，这些人按承诺缴纳一定的利润，剩下的钱可以自行分配。承包制使得工人和干部的收入差距迅速扩大。这样，通过两权分离就创造出来“先富起来”的一批干部，工人与经营者奖金差距日益拉大。工人对工厂的变化看的非常清楚，工人中都流传着这样的话：“工人穷，厂长富，车间主任万元户，厂长挣钱没有数。”此时的工人，已经开始逐步从主人沦为打工人。</p>
<p>一长制使得厂长建立了工厂里面的独裁，承包制扩大了工人和干部的收入差距，这还没完。厂里面的领导为了赚更多的钱，开始在外面建小厂。钢铁厂的领导开个焦炭厂，高价把焦炭卖给自己单位；媒矿的领导在外面开个洗煤厂，私底下利益输送。这一切，都被工人看在眼里。就在这样的大背景下，工人和工厂的关系发生了根本性变化。曾经在毛时代积极奋战的工人，有一些人开始变得偷奸耍滑。70年代的时候，某个钢铁厂的领导公车私用，被一群工人堵在厂门口，要求他下车来解释，这个车拿去干嘛了，为什么要占国家的便宜。80年代的时候，还是那个钢铁厂，还是那些工人，他们开始从厂里面偷钢偷铁，拿一块好点的钢回家去打把菜刀，或者投点特殊钢材拿去卖给私人老板。你问工人，“你为什么要这样干啊？”他说，“领导大偷，工人小偷，这有什么问题吗？国家的便宜，不占白不占。”</p>
<p>部分工人开始了磨洋工。当资本制度全面建立时，曾经的主人由抱怨而愤怒、由愤怒而反抗，最初这种反抗是消极的，是以怠工或磨洋工的形式体现出来的。一种声音出现了，他们痛斥工人偷懒，他们大呼人性本恶，他们说国企效率就是低下，国企工人就是磨洋工，他们说这一切的原因就是国企没有清晰的产权制度，“全民所有就是全民所无”。但他们却从来不说这一切都是什么造成的，他们也从不建立一个规章制度去限制资本占有工人的剩余价值。这些人献言献策，要建立一个由严格的规章制度和明晰的产权制度构成的现代化企业，去防范工人从厂里面拿钢拿铁，去防止工人“偷懒摸鱼”。其本质，就是把工人从主人变成打工人。</p>
<p>1994年通过并于1995年实施的《劳动法》，从法律层面上明确了劳动者仅仅是企业的雇员，而不是工厂的主人，也就是说，从法律意义而言，工厂有权力开除工人了。</p>
<p>90年代中后期，随着住房、医疗和教育改革的推进，国企工人享有的最后一点福利也被剥夺。</p>
<p>他们不再享有管理企业的权力，他们不再拥有铁饭碗的身份，企业的利润也不再通过各种福利反馈他们。从这个时候起，国企工人彻底沦为“打工人”。</p>
<p>（三）下岗：第一批被优化的打工人</p>
<p>1996年一季度，在长期不公平的竞争中（至少有两点：其一、税收不平等。其二、私企和外企只给职工发工资，而国企除了工资，还要给职工修房子、看病、上学），在国企乱象横生的背景下，国有工业企业首次出现全行业净亏损。国有及国有控股大中型亏损企业6599户，亏损面达39.1％。而导致这一切的锅，自然又是由那些“磨洋工”的国企“打工人”背了。</p>
<p>面对当时的局面，领导人提出要进一步深化改革，砸三铁、甩包袱，也就是在这个大背景下出台的。在此前后，国有企业甩卖了自己的医院、学校，分出了自己的住建科成立房地产公司，优化了大批国企“打工人”以减少成本。</p>
<p>被优化的打工人生活境遇迅速下降，以三线职工为例，2005年三线被优化的职工月收入低于300元的有68％，收入的92％用于衣食和子女教育，88％的人无法养活自己而不得不依靠政府福利、亲友救济。被优化的那些人生活没有着落，出现了各种人间悲剧。有女工为了小孩读书，被迫去站街。有男工为了自己的小孩上学，吃了某种药制造了一个大新闻，让社会捐助自己的遗孤。还有一个在全国都流传很广的事情，某家小孩好几个月没吃肉了，忍不住去菜场偷肉，抓住后被痛打一顿，让父母来领人，他父亲老泪纵横，当天晚上花了所有钱买了一只鸡炖给全家吃，这锅汤里面放了准备好的老鼠药。</p>
<p>1997年刘欢的《从头再来》就是给这些被优化的人。“昨天所有的荣誉，已变成遥远的回忆，辛辛苦苦已度过半生，今夜重又走进风雨……心若在梦就在，天地之间还有真爱，看成败人生豪迈，只不过是从头再来。”工人听了这个歌当时就直骂娘，你为什么不走进风雨，凭什么叫我们从头再来！</p>
<p>黄宏的小品也是在说这个事情，里面有一句台词是这样的，“工人要为国家想，我不下岗谁下岗”。笔者父亲听了当时就火冒三丈。笔者和他争论，工人就是要为国家想啊，要有大局观啊。他把衣服一脱摔在地上，背对着笔者说，“看见没有，背上的这些伤，你爸爸没有为国家想吗！我和你妈，现在都四五十岁了，我们TMD被当包袱甩了，你懂不懂！”至今，这些人谈起那些要把他们当包袱甩掉的人，简直是咬牙切齿。</p>
<p>这些沦为“打工人”的曾经的主人，有数千万人被优化掉。他们的切身利益受到了前所未有的冲击，这迫使他们开始关注自身的权利。到2005年，全国群体上访涉及约400万人，其中以他们为主体的有40％。</p>
<p>三、新世纪以来私企打工人的生活</p>
<p>打工人从本质上来讲就是资本的雇佣奴隶。“要理解什么是主人，就要理解什么是奴隶。主人的对立面就是奴隶，奴隶的主人是不信任奴隶的，怕他们偷懒，所以随时都拿着皮鞭抽打他们，强迫他们工作，根本不把他们当人，只把他们当会说话的工具。”</p>
<p>打工人奴隶般的生活，在沿海的私人企业中体现得淋漓尽致。</p>
<p>（一）你就是个打工的</p>
<p>1993年，致丽大火夺去了87个女工的生命。调查结果显示，资方为了防止打工人偷东西，将逃生通道用拉闸门上锁封死，将窗户用铁条焊死，以至于在厂区起火之后，女工只能从仅有的一个出口逃生。众多女工涌向狭小的通道，在相互踩踏、浓烟肆虐中失去了生命。致丽大火以一种异常悲凉的方式，提醒着全国人民，资本对打工人的统治已经彻底建立起来了。</p>
<p>致丽大火促进了《劳动法》出台，但《劳动法》的首要意义并不在于它规定了若干保护劳动者的条款，而在于它明确表明了这样一个事实——工人不再是企业的主人，而只是企业的雇佣劳动者。也就是说，在打工人已经在城乡各地出现十数年之后，法律终于明确了他们的身份，“对！你就是一个打工的！”。</p>
<p>在招商引资的大政方针之下，各地争相优化营商环境，资本肆意蹂躏打工人。</p>
<p>管理方面，资方管理粗暴，动辄辱骂职工，体罚工人，更有甚至部分资方嚣张跋扈，殴打职工，限制职工人身自由。工资方面，打工人工资不仅长期不涨，资方还故意拖欠发放、逼迫员工自离，花样百出克扣工资。</p>
<p>打工人领着微薄的工资，自然也只能过着悲惨的生活。他们大多租住城市的犄角旮旯，80%以上是临建房或简易房，位置偏远、建筑密度大、卫生条件差、安全隐患高。频发的城中村电动车起火事件，夺去了不知多杀打工人的生命。为了打工，他们没有时间照顾自己的小孩，数以千万的打工人小孩成了留守儿童。</p>
<p>他们为资本增殖贡献了自己最宝贵的青春，但在资方眼中他们只是创造财富的工具。资方会爱护机器，因为机器是资方花钱买的，坏了还要花钱修，但资方不会爱护打工人，因为打工人伤了把他开了就是。《广州日报》2005年有一篇报道称，广东省有1300多万农民工，珠三角企业每年发生断指事故个案至少有3万宗，被机器切断的手指头超过4万只。珠三角的工业辉煌，民工们“贡献”的手指头已经几十万计。</p>
<p>（二）抗争、《劳动合同法》和996</p>
<p>这一切都引发了打工人自发的抗争。根据劳动部专家的分析，我国从1990～1994年五年中参加集体停工的人数分别为：24.3万人、28.9万人、26.8万人、31.0万人、49.6万人。到1999年，全国受理劳动争议案件12万件，其中集体争议涉及的私企和外资劳动者占21.9万人。排第一位的争议原因就是欠薪。</p>
<p>2003年沿海地区出现季节性缺工后，工人同老板的谈判能力提高，行动越来越多，掀起了一股延续数年的小浪潮。</p>
<p>据《中国统计年鉴》：2002年以前不到1万起，每年集体劳动争议工人数顶多30万；到2004-2005年每年集体劳动争议案件就达近2万起，每年集体劳动争议工人数40-50万；到2008年，集体劳动争议案件达到2.2万起，集体劳动争议工人数超过50万。</p>
<p><img src="https://i.loli.net/2021/01/02/vMPTu1qsbGAp4kU.png" alt="图片"></p>
<p>这构成了2008年《劳动合同法》出台的大背景。</p>
<p>如果把劳动与资本的对抗看做一场战争，劳动合同法这种法律出台，一定程度上又可看做两军在重新制定停战协议书。</p>
<p>以前体力无产者需要在每一个场合通过个别斗争来争取合法权益，但有了劳动法律之后，他们很大程度上不必如此。即使在某些场合，体力无产者的力量明显不足以争取到这些权益，资方也可能出于“守法”的考虑而主动妥协。从这个角度来说，法律这个阶级之间的停战协议，保证了被压迫阶级在某些力量较小的个别场合，也能获得相应的权利。</p>
<p>对体力无产者而言，5天8小时工作制、最低工资标准、劳动法关于加班费的条款，这三者必须连起来理解。通过限制最低工资，迫使体力无产者自愿加班，通过加班费条款，使得体力无产者在6天12小时工作制的时候能够养家糊口。对统治阶级而言，这才是加班费条款的真实意义，即，通过这个条款调节体力无产者的收入，使其在6天12小时工作制下能够完成劳动力再生产。</p>
<p>至于脑力无产者的加班费，并不在考虑范围之内。从统治阶级整体利益看来，这种996剥削方式能更好地压迫劳动者群体，而暂时还不至于引发实质性反抗，因此根本不必改变。</p>
<p>当然，法律作为两个阶级之间的停战协议，自然也应该适用于阶级中的任何一个群体。比如，加班要给加班费这个规定，就应该既适用于体力无产者群体，也适用于脑力无产者群体。但是脑力无产者的这种适用，与体力无产者的这种适用截然不同。脑力无产者还必须通过在单个场合的个别斗争，才能去要求公司支付加班费。</p>
<p>在资本快速发展的时候，脑力无产者似乎还有一些阶层跃升的希望，因此他们宁愿忍受没有加班费的996，而不愿和公司闹翻去要加班费。</p>
<p>2015年后，随着经济下滑，劳资的力量对比发生了变化，资本的压迫更重了。以前，996虽然残暴，但还有些念想，年终奖毕竟还比较客观，房价也没有那么夸张，就算被公司优化，找工作也并不困难。现在，996更加残暴，年终奖没啥指望，房价早已上天，35岁以上的人工作都朝不保夕。不得不感慨，好日子似乎到头了。</p>
<p>近些年来，熟练掌握互联网的脑力无产者抱怨越来越多。他们用各种黑话表达不满，用各种梗冷嘲热讽。而官媒总希望劳动者闭上抱怨的嘴吧，和他们一起讴歌盛世。前段时间某官媒微博发文，鼓励年轻人顶住压力追求梦想，微博下面一片骂声，有说房价的，有说工资的，有说996的，官媒被打脸后不得不关闭评论。有人截图后写了一句话，才一千条评论就顶不住了，你还让年轻人顶住压力。</p>
<p>脑力无产者玩打工人梗的风波，就是在这样的大背景下发生的。</p>
<p>这样的行为，从现象层面看是玩梗，是自嘲，从本质层面看，却标志着脑力无产者自发的觉醒。</p>
]]></content>
  </entry>
  <entry>
    <title>DBReview Update/Insert/Delete</title>
    <url>/2021/01/08/Update/</url>
    <content><![CDATA[<h3 id="更新数据类语句总结"><a href="#更新数据类语句总结" class="headerlink" title="更新数据类语句总结"></a>更新数据类语句总结</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--update由where子句决定的 可以修改单个元组、多个元组或结合 in等关键字与select语句交互</span></span><br><span class="line"><span class="keyword">update</span> <span class="keyword">table</span></span><br><span class="line"><span class="keyword">set</span> expr</span><br><span class="line"><span class="keyword">where</span> Condition</span><br><span class="line"></span><br><span class="line"><span class="comment">--a.插入单个元组</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">table</span>(<span class="keyword">rows</span> <span class="keyword">of</span> Features)</span><br><span class="line"><span class="keyword">values</span>(<span class="keyword">rows</span> <span class="keyword">of</span> <span class="keyword">values</span>)</span><br><span class="line"><span class="comment">--b.插入子查询结果</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">table</span>(<span class="keyword">rows</span> <span class="keyword">of</span> features)</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">rows</span></span><br><span class="line"><span class="keyword">from</span> ……</span><br><span class="line"><span class="comment">--同update说明</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> <span class="keyword">table</span></span><br><span class="line"><span class="keyword">where</span> Condition</span><br><span class="line"></span><br><span class="line">&amp;PS：无<span class="keyword">where</span>条件时表示多所有元组操作</span><br></pre></td></tr></table></figure>

<h4 id="实验四"><a href="#实验四" class="headerlink" title="实验四"></a>实验四</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">一、对xsgl数据库完成下列操作要求：</span><br><span class="line"><span class="comment">--1.	将被全部学生都选修了的课程的总学分改为4学分。</span></span><br><span class="line"><span class="keyword">update</span> kc</span><br><span class="line"><span class="keyword">set</span> sno = <span class="number">4</span></span><br><span class="line"><span class="keyword">where</span> cno <span class="keyword">in</span> (</span><br><span class="line">	<span class="keyword">select</span> cno </span><br><span class="line">    <span class="keyword">from</span> kc c1</span><br><span class="line">    <span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>(</span><br><span class="line">    	<span class="keyword">select</span> *</span><br><span class="line">        <span class="keyword">from</span> xs s1</span><br><span class="line">        <span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>(</span><br><span class="line">        	<span class="keyword">select</span> *</span><br><span class="line">            <span class="keyword">from</span> sc s2</span><br><span class="line">            <span class="keyword">where</span> s2.学号 = s1.学号 <span class="keyword">and</span> s2.课程号 = c1.课程号</span><br><span class="line">        )</span><br><span class="line">    )</span><br><span class="line">)</span><br><span class="line"><span class="comment">--2.	从学生表删除没有选课的学生。</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> 学号 <span class="keyword">not</span> <span class="keyword">in</span> (</span><br><span class="line">	<span class="keyword">select</span> 学号</span><br><span class="line">    <span class="keyword">from</span> sc</span><br><span class="line">)</span><br><span class="line"><span class="comment">--3.	将每个学生的平均分，总分和选课门数插入到数据库中（学号，姓名，平均分，总分，选课门数）</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> new_table(</span><br><span class="line">	sno <span class="built_in">char</span>(<span class="number">20</span>) primary <span class="keyword">key</span>,</span><br><span class="line">	sname <span class="built_in">char</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">	avgrade <span class="built_in">int</span>,</span><br><span class="line">    totgrade <span class="built_in">int</span>,</span><br><span class="line">    cty <span class="built_in">int</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> new_table</span><br><span class="line"><span class="keyword">select</span> sno</span><br><span class="line">, sname, <span class="keyword">avg</span>(grade), <span class="keyword">sum</span>(grade), <span class="keyword">count</span>(cno)</span><br><span class="line"><span class="keyword">from</span> sc <span class="keyword">right</span> <span class="keyword">join</span> student <span class="keyword">on</span> (student.sno = sc.sno)</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sno, sname</span><br><span class="line"><span class="comment">--4.	创建每门课程的平均分和选课人数的视图（课程号，课程名，平均分，人数）</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> QAQ(cno, cname, <span class="keyword">avg</span>, per)</span><br><span class="line"><span class="keyword">as</span> <span class="keyword">select</span> cno, cname, <span class="keyword">avg</span>(grade), <span class="keyword">count</span>(sno)</span><br><span class="line">	<span class="keyword">from</span> course <span class="keyword">join</span> kc <span class="keyword">on</span> (course.cno = kc.cno)</span><br><span class="line">	<span class="keyword">group</span> <span class="keyword">by</span> cno, cname</span><br><span class="line"><span class="comment">--5.	将李强同学从学生表删除（提示应该先删除李强同学的选课记录）</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> sc</span><br><span class="line"><span class="keyword">where</span> sno <span class="keyword">in</span> (</span><br><span class="line">	<span class="keyword">select</span> sno</span><br><span class="line">    <span class="keyword">from</span> student</span><br><span class="line">    <span class="keyword">where</span> sname = <span class="string">&#x27;李强&#x27;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> sname = <span class="string">&#x27;李强&#x27;</span></span><br><span class="line"><span class="comment">--6.	插入一条选课记录（具体内容自己选）</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> sc(sno, cno)</span><br><span class="line"><span class="keyword">values</span>(<span class="string">&#x27;201900800551&#x27;</span>, <span class="string">&#x27;J001&#x27;</span>)</span><br><span class="line"><span class="comment">--7.	创建网络工程专业的学生的选课信息的视图，要求视图包含，学号，姓名，专业，课程号，课程名，成绩</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> IE_info(sno, sname, sdept, cno, cname, grade)</span><br><span class="line"><span class="keyword">as</span> <span class="keyword">select</span> sno, sname, sdept, cno, cname, grade</span><br><span class="line">	<span class="keyword">from</span> sc <span class="keyword">join</span> student <span class="keyword">on</span> (sc.sno = student.sno)</span><br><span class="line">		<span class="keyword">join</span> course <span class="keyword">on</span> (sc.cno = course.cno)</span><br><span class="line"><span class="comment">--8.	查询网络工程专业的各科的平均成绩，要求使用第7题创建的视图进行查询</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">avg</span>(grade), cno, cname</span><br><span class="line"><span class="keyword">from</span> IE_info</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cno, cname</span><br><span class="line"><span class="comment">--9.	查询被信息管理专业的学生都选修了的课程的课程号，课程名</span></span><br><span class="line"><span class="keyword">select</span> cno, cname</span><br><span class="line"><span class="keyword">from</span> course c1</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>(</span><br><span class="line">	<span class="keyword">select</span> *</span><br><span class="line">    <span class="keyword">from</span> student s1</span><br><span class="line">    <span class="keyword">where</span> s1.sdept = <span class="string">&#x27;IS&#x27;</span> <span class="keyword">and</span> <span class="keyword">not</span> <span class="keyword">exists</span>(</span><br><span class="line">    	<span class="keyword">select</span> *</span><br><span class="line">        <span class="keyword">from</span> sc</span><br><span class="line">        <span class="keyword">where</span> sc.sno = s1.sno <span class="keyword">and</span> c1.cno = sc.cno</span><br><span class="line">    )</span><br><span class="line">)</span><br><span class="line"><span class="comment">--10.	显示选修课程数最多的学号及选修课程数最少的学号，姓名（使用派生表实现）</span></span><br><span class="line"><span class="keyword">select</span> sno, sname</span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> sno, <span class="keyword">count</span>(cno) <span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> sno) <span class="keyword">as</span> temp(ssno, cnt) <span class="keyword">join</span> </span><br><span class="line">	student <span class="keyword">on</span> (student.sno = temp.ssno)</span><br><span class="line"><span class="keyword">where</span> cnt &gt;= <span class="keyword">all</span>(<span class="keyword">select</span> <span class="keyword">count</span>(cno) <span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> sno) <span class="keyword">or</span> cnt &lt;= <span class="keyword">all</span>(<span class="keyword">select</span> <span class="keyword">count</span>(cno) <span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> sno)</span><br><span class="line"><span class="comment">--11.	查询每个学生成绩高于自己的平均成绩的学号，姓名，课程号和成绩（使用派生表实现）</span></span><br><span class="line"><span class="keyword">select</span> sno, sname, cno, grade</span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> sc.sno, sname, <span class="keyword">avg</span>(grade) <span class="keyword">from</span> student <span class="keyword">join</span> sc <span class="keyword">on</span> (student.sno = sc.sno)</span><br><span class="line">     <span class="keyword">group</span> <span class="keyword">by</span> sc.sno, sname</span><br><span class="line">     ) <span class="keyword">as</span> temp(ssno, sname, avgg) <span class="keyword">join</span> sc <span class="keyword">on</span> (sc.sno = temp.ssno)</span><br><span class="line"><span class="keyword">where</span> grade &gt; avgg</span><br><span class="line">//<span class="number">12.</span>	自己验证<span class="keyword">with</span> <span class="keyword">check</span> <span class="keyword">option</span>的作用。</span><br><span class="line"><span class="comment">--13.	创建一个网络工程系的学生基本信息的视图MA_STUDENT，在此视图的基础上，再定义一个该专业女生信息的视图，然后再删除MA_STUDENT，观察执行情况。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> MA_STUDENT</span><br><span class="line"><span class="keyword">as</span> <span class="keyword">select</span> *</span><br><span class="line">	<span class="keyword">from</span> student <span class="keyword">where</span> sdept = <span class="string">&#x27;MA&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> FEMALE_MA</span><br><span class="line"><span class="keyword">as</span> <span class="keyword">select</span> *</span><br><span class="line">	<span class="keyword">from</span> MA_STUDENT <span class="keyword">where</span> ssex = <span class="string">&#x27;女&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">view</span> MA_STUDENT</span><br><span class="line"><span class="comment">--14.	查询和程明同龄的学生的学号和姓名以及年龄</span></span><br><span class="line"><span class="keyword">select</span> sno, sname, sage</span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> sage <span class="keyword">in</span> (</span><br><span class="line">	<span class="keyword">select</span> sage</span><br><span class="line">    <span class="keyword">from</span> student</span><br><span class="line">    <span class="keyword">where</span> sname = <span class="string">&#x27;程明&#x27;</span></span><br><span class="line">)</span><br><span class="line"><span class="comment">--15.	查询没有被全部的学生都选修的课程的课程号和课程名</span></span><br><span class="line">取巧版：</span><br><span class="line"><span class="keyword">select</span> course.cno, course.cname</span><br><span class="line"><span class="keyword">from</span> course <span class="keyword">left</span> <span class="keyword">join</span> sc <span class="keyword">on</span> (course.cno = sc.cno)</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cno, cname <span class="keyword">having</span> <span class="keyword">count</span>(sno) &lt;&gt; (<span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> student)</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> cno, cname</span><br><span class="line"><span class="keyword">from</span> course c1</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">exists</span>(</span><br><span class="line">	<span class="keyword">select</span> *</span><br><span class="line">    <span class="keyword">from</span> student s1</span><br><span class="line">    <span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>(</span><br><span class="line">    	<span class="keyword">select</span> *</span><br><span class="line">        <span class="keyword">from</span> sc</span><br><span class="line">        <span class="keyword">where</span> sc.sno = s1.sno <span class="keyword">and</span> sc.cno = c1.cno</span><br><span class="line">    )</span><br><span class="line">)</span><br><span class="line"><span class="comment">--16.	查询选课学生包含了 选英语的全部学生 的课程的课程号和课程名。 翻译成人话：选了英语的全选了的课有哪些</span></span><br><span class="line"><span class="keyword">select</span> cno, cname</span><br><span class="line"><span class="keyword">from</span> course c1</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>(</span><br><span class="line">	<span class="keyword">select</span> *</span><br><span class="line">    <span class="keyword">from</span> sc <span class="keyword">join</span> course c2 <span class="keyword">on</span> (sc.cno = c2.cno)</span><br><span class="line">    <span class="keyword">where</span> cname = <span class="string">&#x27;英语&#x27;</span> <span class="keyword">and</span> <span class="keyword">not</span> <span class="keyword">exists</span>(</span><br><span class="line">    	<span class="keyword">select</span> *</span><br><span class="line">        <span class="keyword">from</span> sc s1</span><br><span class="line">        <span class="keyword">where</span> s1.sno = sc.sno <span class="keyword">and</span> s1.cno = c1.cno</span><br><span class="line">    )</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>SqlServer</category>
      </categories>
      <tags>
        <tag>Update/Insert/Delete</tag>
      </tags>
  </entry>
  <entry>
    <title>DBReview 关系代数</title>
    <url>/2021/01/08/%E5%85%B3%E7%B3%BB%E4%BB%A3%E6%95%B0/</url>
    <content><![CDATA[<p>仅包含4种关系代数中独有的运算符。</p>
<ul>
<li>选择运算符</li>
</ul>
<p>$\sigma_{F}(R)$ 其中F为一个布尔表达式，表示从关系模式R中选择出满足F关系的元组。</p>
<p>PS：需要注意的是，在关系代数中，不同于t-sql语言，表达且、或、非等含义需要使用逻辑代数中的符号如$\and$ 、 $\or$ 、 $\neg$的符号, 而不等于则表示为$&lt;&gt;$。</p>
<ul>
<li>投影运算符</li>
</ul>
<p>$\Pi_{e_1,e_2…e_n}(R)$ 表示取出关系R中的一些列。</p>
<ul>
<li>连接运算符</li>
</ul>
<p>$A \bowtie B$ 在连接运算符下方写连接条件 $A \theta B$  表示按条件对表进行连接。</p>
<p>而若不写条件则为自然连接，将按照相同的属性列进行连接并在结果中消除相同的属性列。</p>
<ul>
<li>除运算</li>
</ul>
<p>$A \div B$ 形象的理解如此： </p>
<p>A中含有 X Y Z三个属性组，而B中含有 Y、Z、W、……等许多列（不包含X）</p>
<p>A ÷ B的结果为：对于A中与B中相同的几个属性列</p>
<p>若A中的属性组X <strong>所对应</strong> 的取值 <strong>覆盖</strong>了 B中相同的属性列 的取值，则A中的相应属性组被加入到结果的一部分。</p>
]]></content>
      <categories>
        <category>SqlServer</category>
      </categories>
      <tags>
        <tag>关系代数</tag>
      </tags>
  </entry>
  <entry>
    <title>DBReview Function/Procedure/cursor</title>
    <url>/2021/01/08/%E5%87%BD%E6%95%B0&amp;%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E3%80%81%E6%B8%B8%E6%A0%87/</url>
    <content><![CDATA[<h4 id="a-函数"><a href="#a-函数" class="headerlink" title="a.函数"></a>a.函数</h4><ul>
<li>基本格式<ul>
<li>不提供架构名一律是在默认架构dbo下建立的函数</li>
<li>调用函数时需要附带架构名</li>
</ul>
</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">function</span> [schema_Name.]function_Name(</span><br><span class="line">@para1 <span class="keyword">type</span> [= defaultValue],……)</span><br><span class="line"><span class="keyword">returns</span> <span class="keyword">Type</span></span><br><span class="line"><span class="keyword">as</span> <span class="keyword">begin</span></span><br><span class="line">	<span class="keyword">Sql</span>-<span class="keyword">Statement</span></span><br><span class="line">	<span class="keyword">return</span> expr</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">function</span> schema.functionName</span><br></pre></td></tr></table></figure>

<ul>
<li><p>表值函数、标量函数</p>
<ul>
<li><p>内联表值函数  (简略版) </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">function</span> <span class="keyword">Name</span>(@para1 <span class="keyword">type</span>, @papra2 <span class="keyword">type</span>,……)</span><br><span class="line"><span class="keyword">returns</span> <span class="keyword">table</span></span><br><span class="line"><span class="keyword">return</span> (<span class="keyword">select</span>-<span class="keyword">Statement</span>)</span><br></pre></td></tr></table></figure>

<p><strong>可以对内联表值函数产生的表对其中来自单个表的元素进行修改。</strong></p>
</li>
<li><p>多语句表值函数 </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">function</span> <span class="keyword">Name</span>(@para1 <span class="keyword">type</span>, @papra2 <span class="keyword">type</span>,……)</span><br><span class="line"><span class="keyword">returns</span> @<span class="keyword">Name</span> <span class="keyword">table</span>(表中数据定义，和正常定义表一样写)</span><br><span class="line"><span class="keyword">as</span> <span class="keyword">begin</span></span><br><span class="line">	<span class="keyword">Sql</span>-<span class="keyword">Statement</span></span><br><span class="line">	<span class="keyword">return</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>



</li>
</ul>
</li>
</ul>
<h4 id="b-存储过程"><a href="#b-存储过程" class="headerlink" title="b.存储过程"></a>b.存储过程</h4><ul>
<li><p>基本格式</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> proc <span class="keyword">Name</span> @para1 <span class="keyword">type</span> [ = defaultV] [<span class="keyword">output</span>], ……</span><br><span class="line"><span class="keyword">as</span> </span><br><span class="line">	<span class="keyword">sql</span>-<span class="keyword">Statement</span></span><br><span class="line">	</span><br><span class="line">exec Proc_Name <span class="keyword">Parameters</span>-<span class="keyword">group</span> [<span class="keyword">output</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> proc <span class="keyword">Name</span> @para1 <span class="keyword">type</span> [ = defaultv] [<span class="keyword">output</span>], ……</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line">	<span class="keyword">sql</span>-<span class="keyword">statement</span></span><br><span class="line">	</span><br><span class="line"><span class="keyword">drop</span> proc <span class="keyword">Name</span></span><br></pre></td></tr></table></figure>



</li>
</ul>
<h4 id="c-游标-非常有用，没有它sql就是个sb语言"><a href="#c-游标-非常有用，没有它sql就是个sb语言" class="headerlink" title="c.游标(非常有用，没有它sql就是个sb语言)"></a>c.游标(非常有用，没有它sql就是个sb语言)</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">declare</span> <span class="keyword">Name</span> [insensitive][<span class="keyword">scroll</span>] <span class="keyword">cursor</span></span><br><span class="line"><span class="keyword">for</span> <span class="keyword">select</span>-<span class="keyword">Statement</span></span><br><span class="line">[<span class="keyword">for</span> <span class="keyword">read</span> <span class="keyword">only</span> | <span class="keyword">update</span> <span class="keyword">of</span> colName,……]</span><br><span class="line"><span class="comment">--intensitive将阻止游标对原表的直接操作，即在游标上做操作不影响原表的内容</span></span><br><span class="line"><span class="comment">--scroll 如果不加入scroll关键字，则游标仅可进行next操作</span></span><br><span class="line"><span class="keyword">open</span> <span class="keyword">Name</span></span><br><span class="line"><span class="comment">--打开后游标指定的select语句被执行，游标指向所查询到的结果的第一个元组</span></span><br><span class="line"><span class="keyword">fetch</span> [<span class="keyword">next</span>|<span class="keyword">prior</span>|<span class="keyword">first</span>|<span class="keyword">last</span>|<span class="keyword">absolute</span> n|<span class="keyword">relative</span> n]</span><br><span class="line"><span class="keyword">from</span> Cursor_Name</span><br><span class="line">[<span class="keyword">into</span> @var_name,……](把游标的结果直接放进去。)</span><br><span class="line"><span class="comment">--next表示遍历下一行， prior是返回到前一行， first第一行，last最后一行</span></span><br><span class="line"><span class="comment">--absolute n表示返回结果集的第n行， relative n则为当前行后的第n行</span></span><br><span class="line"><span class="comment">--(可为负数，实际移动为 n % 结果集大小 )</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--重要的遍历标记： 全局变量@@fetch_status</span></span><br><span class="line"><span class="comment">--为0则表示上一次fetch语句成功，不为0则说明到达了末尾（或者失败了。）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">close</span> Cursor_Name <span class="comment">--可以重新打开</span></span><br><span class="line"><span class="keyword">deallocate</span> Cursor_Name <span class="comment">--释放游标所占用的资源</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>经典遍历操作</p>
<ul>
<li><pre><code class="sql">declare cur1 scroll cursor
for select sname from student
where sname like &#39;张%&#39;

open cur1
fetch first from cur1
while(@@fetch_status = 0)
begin
    fetch next from cur1
end
close cur1
deallocate cur1
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">+ 使用游标的update、delete操作</span><br><span class="line"></span><br><span class="line">  + &#96;&#96;&#96;sql</span><br><span class="line">    declare cur1 scroll cursor</span><br><span class="line">    for select sno, sage from student</span><br><span class="line">    	where sage &#x3D; 20</span><br><span class="line">    open cur1</span><br><span class="line">    fetch absolute 3 from cur1</span><br><span class="line">    </span><br><span class="line">    delete from student</span><br><span class="line">    where current of cur1</span><br><span class="line">    </span><br><span class="line">    close cur1</span><br><span class="line">    deallocate cur1</span><br></pre></td></tr></table></figure>


</code></pre>
</li>
</ul>
</li>
</ul>
<h2 id="实验七"><a href="#实验七" class="headerlink" title="实验七"></a>实验七</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">使用数据库student，完成以下操作，并写出相应的代码</span><br><span class="line"><span class="comment">--1.	用函数实现：求某个专业选修了某门课程的学生人数，并调用函数求出计算机系“数据库”课程的选课人数。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">function</span> count_number(@sdept <span class="built_in">char</span>(<span class="number">20</span>), @cname <span class="built_in">char</span>(<span class="number">20</span>))</span><br><span class="line"><span class="keyword">returns</span> <span class="built_in">int</span></span><br><span class="line"><span class="keyword">as</span> <span class="keyword">return</span> (<span class="keyword">select</span> <span class="keyword">count</span>(sc.sno) <span class="keyword">from</span> sc <span class="keyword">join</span> course <span class="keyword">on</span> (sc.cno = course.cno) </span><br><span class="line">           <span class="keyword">join</span> student <span class="keyword">on</span> (sc.sno = student.sno)</span><br><span class="line">           <span class="keyword">where</span> @cname = cname <span class="keyword">and</span> @sdept = student.sdept)</span><br><span class="line"><span class="comment">--以上为错误写法，仅有内联表值函数可以直接return select的结果。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">function</span> count_number(@sdept <span class="built_in">char</span>(<span class="number">20</span>), @cname <span class="built_in">char</span>(<span class="number">20</span>))</span><br><span class="line"><span class="keyword">returns</span> <span class="built_in">int</span></span><br><span class="line"><span class="keyword">as</span> <span class="keyword">begin</span></span><br><span class="line">	<span class="keyword">declare</span> @res <span class="built_in">int</span></span><br><span class="line">	<span class="keyword">select</span> @res = <span class="keyword">count</span>(sc.sno) </span><br><span class="line">	<span class="keyword">from</span> sc <span class="keyword">join</span> course <span class="keyword">on</span> (sc.cno = course.cno) </span><br><span class="line">          <span class="keyword">join</span> student <span class="keyword">on</span> (sc.sno = student.sno)</span><br><span class="line">    <span class="keyword">where</span> @cname = cname <span class="keyword">and</span> @sdept = student.sdept</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> @res</span><br><span class="line"><span class="keyword">end</span>       </span><br><span class="line"></span><br><span class="line">print dbo.count_number(<span class="string">&#x27;CS&#x27;</span>, <span class="string">&#x27;数据库&#x27;</span>)</span><br><span class="line"><span class="comment">--2.	用内嵌表值函数实现：查询某个专业所有学生所选的每门课的平均成绩；调用该函数求出计算机系的所有课程的平均成绩。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">function</span> Avg_perCourse(@sdept <span class="built_in">char</span>(<span class="number">20</span>)) <span class="keyword">returns</span> <span class="keyword">table</span></span><br><span class="line"><span class="keyword">as</span> <span class="keyword">return</span></span><br><span class="line"><span class="keyword">select</span> cno, <span class="keyword">avg</span>(grade)</span><br><span class="line"><span class="keyword">from</span> sc</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cno</span><br><span class="line"><span class="keyword">where</span> sno <span class="keyword">in</span> (</span><br><span class="line">	<span class="keyword">select</span> sno</span><br><span class="line">    <span class="keyword">from</span> student</span><br><span class="line">    <span class="keyword">where</span> sdept = @sdept</span><br><span class="line">)</span><br><span class="line"><span class="comment">--以上又写错了QAQ</span></span><br><span class="line"><span class="comment">--1.同时用到group by 和where时，要先筛选(where)，后集群(group by)</span></span><br><span class="line"><span class="comment">--2.表值函数需要指定列名(以及指定列名是个好习惯……)</span></span><br><span class="line"></span><br><span class="line">print Avg_perCourse(<span class="string">&#x27;CS&#x27;</span>)</span><br><span class="line"><span class="comment">--这个也错了。</span></span><br><span class="line"><span class="comment">--表值函数无法print，应当使用 select * from Avg_perCourse(&#x27;CS&#x27;)来展示信息</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">function</span> Avg_perCourse(@sdept <span class="built_in">char</span>(<span class="number">20</span>)) <span class="keyword">returns</span> <span class="keyword">table</span></span><br><span class="line"><span class="keyword">as</span> <span class="keyword">return</span></span><br><span class="line"><span class="keyword">select</span> cno, <span class="keyword">avg</span>(grade) 平均成绩</span><br><span class="line"><span class="keyword">from</span> sc</span><br><span class="line"><span class="keyword">where</span> sno <span class="keyword">in</span> (</span><br><span class="line">	<span class="keyword">select</span> sno</span><br><span class="line">    <span class="keyword">from</span> student</span><br><span class="line">    <span class="keyword">where</span> sdept = @sdept</span><br><span class="line">)</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cno</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span></span><br><span class="line">Avg_perCourse(<span class="string">&#x27;CS&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--3.	创建多语句表值函数，通过学号作为实参调用该函数，可显示该学生的姓名以及各门课的成绩和学分，调用该函数求出“200515002”的各门课成绩和学分。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">function</span> All_Grade(@sno <span class="built_in">char</span>(<span class="number">20</span>)) </span><br><span class="line"><span class="keyword">returns</span> @tmp_table <span class="keyword">table</span>(</span><br><span class="line">	sno <span class="built_in">char</span>(<span class="number">20</span>),</span><br><span class="line">    cno <span class="built_in">char</span>(<span class="number">20</span>),</span><br><span class="line">    grade <span class="built_in">int</span>,</span><br><span class="line">    credit <span class="built_in">int</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">as</span> <span class="keyword">begin</span></span><br><span class="line">	<span class="keyword">insert</span> <span class="keyword">into</span> @tmp_table</span><br><span class="line">	<span class="keyword">select</span> sc.sno, sc.cno, grade, credit</span><br><span class="line">	<span class="keyword">from</span> sc <span class="keyword">join</span> student <span class="keyword">on</span> (sc.sno = student.sno)</span><br><span class="line">		<span class="keyword">join</span> course <span class="keyword">on</span> (sc.cno = course.cno)</span><br><span class="line">	<span class="keyword">where</span> sc.sno = @sno</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">--经常性的犯小错误 —— 合并表的时候，查询条件没有指明是哪个表的属性 !!!!!IMPORTANT</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> All_Grade(<span class="string">&#x27;200515002&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--4.	编写一个存储过程，统计某门课程的优秀（90-100）人数、良好（80-89）人数、中等（70-79）人数、及格（60-69）人数和及格率，其输入参数是课程号，输出的是各级别人数及及格率，及格率的形式是90.25%，执行存储过程，在消息区显示1号课程的统计信息。</span></span><br><span class="line"><span class="keyword">create</span> proc Count_Grade @cno <span class="built_in">char</span>(<span class="number">20</span>), @A <span class="built_in">int</span> = <span class="number">0</span> <span class="keyword">output</span>, @B <span class="built_in">int</span> = <span class="number">0</span> <span class="keyword">output</span>, @C <span class="built_in">int</span> = <span class="number">0</span> <span class="keyword">output</span>, @D <span class="built_in">int</span> = <span class="number">0</span> <span class="keyword">output</span>, @rate <span class="built_in">numeric</span>(<span class="number">6</span>,<span class="number">2</span>) <span class="keyword">output</span></span><br><span class="line"><span class="keyword">as</span> <span class="keyword">begin</span></span><br><span class="line">	<span class="keyword">declare</span> @<span class="keyword">All</span> <span class="built_in">int</span></span><br><span class="line">	<span class="keyword">declare</span> @<span class="keyword">now</span> <span class="built_in">int</span></span><br><span class="line">	<span class="keyword">declare</span> cur1 <span class="keyword">scroll</span> <span class="keyword">cursor</span></span><br><span class="line">	<span class="keyword">for</span> <span class="keyword">select</span> grade</span><br><span class="line">		<span class="keyword">from</span> sc</span><br><span class="line">		<span class="keyword">where</span> cno = @cno</span><br><span class="line">	<span class="keyword">open</span> cur1</span><br><span class="line">	<span class="keyword">fetch</span> <span class="keyword">first</span> cur1 <span class="keyword">into</span> @<span class="keyword">now</span></span><br><span class="line">	<span class="keyword">while</span>(@@fetch_status = <span class="number">0</span>) <span class="keyword">begin</span></span><br><span class="line">		@<span class="keyword">All</span> = @<span class="keyword">All</span> + <span class="number">1</span></span><br><span class="line">		<span class="keyword">case</span> </span><br><span class="line">		<span class="keyword">when</span> @<span class="keyword">now</span> <span class="keyword">between</span> <span class="number">90</span> <span class="keyword">and</span> <span class="number">100</span> <span class="keyword">then</span> @A = @A + <span class="number">1</span></span><br><span class="line">		<span class="keyword">when</span> @<span class="keyword">now</span> <span class="keyword">between</span> <span class="number">80</span> <span class="keyword">and</span> <span class="number">89</span> <span class="keyword">then</span> @B = @B + <span class="number">1</span></span><br><span class="line">		<span class="keyword">when</span> @<span class="keyword">now</span> <span class="keyword">between</span> <span class="number">70</span> <span class="keyword">and</span> <span class="number">79</span> <span class="keyword">then</span> @C = @C + <span class="number">1</span></span><br><span class="line">		<span class="keyword">when</span> @<span class="keyword">now</span> <span class="keyword">between</span> <span class="number">60</span> <span class="keyword">and</span> <span class="number">69</span> <span class="keyword">then</span> @D = @D + <span class="number">1</span></span><br><span class="line">		</span><br><span class="line">		<span class="keyword">fetch</span> <span class="keyword">next</span> cur1 <span class="keyword">into</span> @<span class="keyword">now</span></span><br><span class="line">	<span class="keyword">end</span></span><br><span class="line">	@rate = <span class="number">100.0</span>*(@A + @B + @C + @D)/@<span class="keyword">All</span></span><br><span class="line">	print <span class="string">&#x27;优秀：&#x27;</span> + <span class="keyword">cast</span>(@A <span class="keyword">as</span> <span class="built_in">char</span>(<span class="number">10</span>)) + <span class="string">&#x27;人&#x27;</span></span><br><span class="line">	print <span class="string">&#x27;良好：&#x27;</span> + <span class="keyword">cast</span>(@B <span class="keyword">as</span> <span class="built_in">char</span>(<span class="number">10</span>)) + <span class="string">&#x27;人&#x27;</span></span><br><span class="line">	print <span class="string">&#x27;中等：&#x27;</span> + <span class="keyword">cast</span>(@C <span class="keyword">as</span> <span class="built_in">char</span>(<span class="number">10</span>)) + <span class="string">&#x27;人&#x27;</span></span><br><span class="line">	print <span class="string">&#x27;及格：&#x27;</span> + <span class="keyword">cast</span>(@D <span class="keyword">as</span> <span class="built_in">char</span>(<span class="number">10</span>)) + <span class="string">&#x27;人&#x27;</span></span><br><span class="line">	print <span class="string">&#x27;及格率：&#x27;</span> + <span class="keyword">cast</span>(@rate <span class="keyword">as</span> <span class="built_in">char</span>(<span class="number">15</span>)) + <span class="string">&#x27;%&#x27;</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">--以上为错误示范……sql编程时，给局部变量赋值必须通过select/set语句实现</span></span><br><span class="line"><span class="comment">--更sb的是：在调试的时候，改了已经create之后的create部分的代码</span></span><br><span class="line"><span class="comment">--一直奇怪怎么还有错… 忘记alter修改存储过程之后再运行了……</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> proc Count_Grade @cno <span class="built_in">char</span>(<span class="number">20</span>), @A <span class="built_in">int</span> <span class="keyword">output</span>, @B <span class="built_in">int</span> <span class="keyword">output</span>, @C <span class="built_in">int</span> <span class="keyword">output</span>, @D <span class="built_in">int</span> <span class="keyword">output</span>, @rate <span class="built_in">numeric</span>(<span class="number">6</span>,<span class="number">2</span>) <span class="keyword">output</span></span><br><span class="line"><span class="keyword">as</span> <span class="keyword">begin</span></span><br><span class="line">	<span class="keyword">declare</span> @<span class="keyword">all</span> <span class="built_in">int</span></span><br><span class="line">	<span class="keyword">declare</span> @<span class="keyword">now</span> <span class="built_in">int</span></span><br><span class="line">	<span class="keyword">select</span> @A = <span class="number">0</span>, @B = <span class="number">0</span>, @C = <span class="number">0</span>, @D = <span class="number">0</span>, @<span class="keyword">all</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">declare</span> cur1 <span class="keyword">scroll</span> <span class="keyword">cursor</span></span><br><span class="line">	<span class="keyword">for</span> <span class="keyword">select</span> grade</span><br><span class="line">		<span class="keyword">from</span> sc</span><br><span class="line">		<span class="keyword">where</span> cno = @cno</span><br><span class="line">	<span class="keyword">open</span> cur1</span><br><span class="line">	<span class="keyword">fetch</span> <span class="keyword">first</span> <span class="keyword">from</span> cur1 <span class="keyword">into</span> @<span class="keyword">now</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> @@fetch_status = <span class="number">0</span></span><br><span class="line">	<span class="keyword">begin</span></span><br><span class="line">		<span class="keyword">select</span> @<span class="keyword">all</span> = @<span class="keyword">all</span> + <span class="number">1</span></span><br><span class="line">		<span class="keyword">if</span> (@<span class="keyword">now</span> <span class="keyword">between</span> <span class="number">90</span> <span class="keyword">and</span> <span class="number">100</span>) </span><br><span class="line">			<span class="keyword">select</span> @A = @A + <span class="number">1</span></span><br><span class="line">		<span class="keyword">if</span> (@<span class="keyword">now</span> <span class="keyword">between</span> <span class="number">80</span> <span class="keyword">and</span> <span class="number">89</span>) </span><br><span class="line">			<span class="keyword">select</span> @B = @B + <span class="number">1</span></span><br><span class="line">		<span class="keyword">if</span> (@<span class="keyword">now</span> <span class="keyword">between</span> <span class="number">70</span> <span class="keyword">and</span> <span class="number">79</span>) </span><br><span class="line">			<span class="keyword">select</span> @C = @C + <span class="number">1</span></span><br><span class="line">		<span class="keyword">if</span> (@<span class="keyword">now</span> <span class="keyword">between</span> <span class="number">60</span> <span class="keyword">and</span> <span class="number">69</span>) </span><br><span class="line">			<span class="keyword">select</span> @D = @D + <span class="number">1</span></span><br><span class="line">		</span><br><span class="line">		<span class="keyword">fetch</span> <span class="keyword">next</span> <span class="keyword">from</span> cur1 <span class="keyword">into</span> @<span class="keyword">now</span></span><br><span class="line">	<span class="keyword">end</span></span><br><span class="line">	<span class="keyword">close</span> cur1</span><br><span class="line">	<span class="keyword">deallocate</span> cur1</span><br><span class="line"></span><br><span class="line">	<span class="keyword">select</span> @rate = <span class="number">100.0</span>*(@A + @B + @C + @D)/@<span class="keyword">all</span></span><br><span class="line">	print <span class="string">&#x27;优秀：&#x27;</span> + <span class="keyword">cast</span>(@A <span class="keyword">as</span> <span class="built_in">char</span>(<span class="number">10</span>)) + <span class="string">&#x27;人&#x27;</span></span><br><span class="line">	print <span class="string">&#x27;良好：&#x27;</span> + <span class="keyword">cast</span>(@B <span class="keyword">as</span> <span class="built_in">char</span>(<span class="number">10</span>)) + <span class="string">&#x27;人&#x27;</span></span><br><span class="line">	print <span class="string">&#x27;中等：&#x27;</span> + <span class="keyword">cast</span>(@C <span class="keyword">as</span> <span class="built_in">char</span>(<span class="number">10</span>)) + <span class="string">&#x27;人&#x27;</span></span><br><span class="line">	print <span class="string">&#x27;及格：&#x27;</span> + <span class="keyword">cast</span>(@D <span class="keyword">as</span> <span class="built_in">char</span>(<span class="number">10</span>)) + <span class="string">&#x27;人&#x27;</span></span><br><span class="line">	print <span class="string">&#x27;及格率：&#x27;</span> + <span class="keyword">cast</span>(@rate <span class="keyword">as</span> <span class="built_in">char</span>(<span class="number">8</span>)) + <span class="string">&#x27;%&#x27;</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> @aa <span class="built_in">int</span>, @bb <span class="built_in">int</span>, @cc <span class="built_in">int</span>, @dd <span class="built_in">int</span>, @ee <span class="built_in">numeric</span>(<span class="number">6</span>,<span class="number">2</span>)</span><br><span class="line">exec Count_Grade <span class="string">&#x27;1&#x27;</span>, @aa <span class="keyword">output</span>, @bb <span class="keyword">output</span>, @cc <span class="keyword">output</span>, @dd <span class="keyword">output</span>, @ee <span class="keyword">output</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--5.	创建一个带有输入参数的存储过程，该存储过程根据传入的学生名字，查询其选修的课程名和成绩，执行存储过程，在消息区显示赵箐箐的相关信息。</span></span><br><span class="line"><span class="keyword">create</span> proc <span class="keyword">Query</span> @sname <span class="built_in">char</span>(<span class="number">10</span>)</span><br><span class="line"><span class="keyword">as</span> <span class="keyword">begin</span></span><br><span class="line">	<span class="keyword">declare</span> @cname <span class="built_in">char</span>(<span class="number">20</span>), @grade <span class="built_in">int</span></span><br><span class="line">	<span class="keyword">declare</span> cur <span class="keyword">scroll</span> <span class="keyword">cursor</span></span><br><span class="line">	<span class="keyword">for</span> <span class="keyword">select</span> cname, grade</span><br><span class="line">		<span class="keyword">from</span> sc <span class="keyword">join</span> course <span class="keyword">on</span> (sc.cno = course.cno)</span><br><span class="line">			<span class="keyword">join</span> student <span class="keyword">on</span> (sc.sno = student.sno) <span class="comment">--此处没有用到公共属性 呜呜呜 不用带前缀</span></span><br><span class="line">		<span class="keyword">where</span> sname = @sname</span><br><span class="line">	<span class="keyword">open</span> cur</span><br><span class="line">	print @sname + <span class="string">&#x27;选修信息：&#x27;</span></span><br><span class="line">	<span class="keyword">fetch</span> <span class="keyword">next</span> <span class="keyword">from</span> cur <span class="keyword">into</span> @cname, @grade</span><br><span class="line">	<span class="keyword">while</span> @@fetch_status = <span class="number">0</span> </span><br><span class="line">	<span class="keyword">begin</span></span><br><span class="line">		print @cname + <span class="keyword">cast</span>(@grade <span class="keyword">as</span> <span class="built_in">char</span>(<span class="number">5</span>))</span><br><span class="line">		<span class="keyword">fetch</span> <span class="keyword">next</span> <span class="keyword">from</span> cur <span class="keyword">into</span> @cname, @grade</span><br><span class="line">	<span class="keyword">end</span></span><br><span class="line">	<span class="keyword">close</span> cur</span><br><span class="line">	<span class="keyword">deallocate</span> cur</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">exec <span class="keyword">Query</span> <span class="string">&#x27;赵菁菁&#x27;</span></span><br><span class="line"><span class="comment">---6.	以基本表 course为基础，完成如下操作</span></span><br><span class="line"><span class="comment">--生成显示如下报表形式的游标：报表首先列出学生的学号和姓名，然后在此学生下，列出其所选的全部课程的课程号、课程名和学分；依此类推，直到列出全部学生。</span></span><br><span class="line"><span class="keyword">declare</span> c1 <span class="keyword">scroll</span> <span class="keyword">cursor</span> <span class="keyword">for</span></span><br><span class="line"><span class="keyword">select</span> sno, sname</span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">open</span> c1</span><br><span class="line"><span class="keyword">declare</span> @sno <span class="built_in">char</span>(<span class="number">10</span>), @sname <span class="built_in">char</span>(<span class="number">20</span>)</span><br><span class="line"><span class="keyword">fetch</span> <span class="keyword">first</span> <span class="keyword">from</span> c1 <span class="keyword">into</span> @sno, @sname</span><br><span class="line"><span class="keyword">while</span> @@fetch_status = <span class="number">0</span> <span class="keyword">begin</span></span><br><span class="line">	print @sno + @sname</span><br><span class="line">	print <span class="string">&#x27;----------------------------&#x27;</span></span><br><span class="line">	<span class="keyword">declare</span> c2 <span class="keyword">scroll</span> <span class="keyword">cursor</span> <span class="keyword">for</span></span><br><span class="line">	<span class="keyword">select</span> sc.cno, cname, ccredit</span><br><span class="line">	<span class="keyword">from</span> sc <span class="keyword">join</span> course <span class="keyword">on</span> (sc.cno = course.cno)</span><br><span class="line">	<span class="keyword">where</span> sno = @sno</span><br><span class="line">	<span class="keyword">open</span> c2</span><br><span class="line">	<span class="keyword">declare</span> @cno <span class="built_in">char</span>(<span class="number">4</span>), @cname <span class="built_in">char</span>(<span class="number">10</span>), @credit <span class="built_in">int</span></span><br><span class="line">	<span class="keyword">fetch</span> <span class="keyword">first</span> <span class="keyword">from</span> c2 <span class="keyword">into</span> @cno, @cname, @credit</span><br><span class="line">	<span class="keyword">while</span> @@fetch_status = <span class="number">0</span> <span class="keyword">begin</span></span><br><span class="line">		print @cno + @cname + @credit</span><br><span class="line">		<span class="keyword">fetch</span> <span class="keyword">next</span> <span class="keyword">from</span> c2 <span class="keyword">into</span> @cno, @cname, @credit</span><br><span class="line">	<span class="keyword">end</span>	</span><br><span class="line">	print <span class="string">&#x27;------------------------------&#x27;</span></span><br><span class="line">	<span class="keyword">close</span> c2</span><br><span class="line">	<span class="keyword">deallocate</span> c2</span><br><span class="line">	<span class="keyword">fetch</span> <span class="keyword">next</span> <span class="keyword">from</span> c1 <span class="keyword">into</span> @sno, @sname</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">close</span> c1</span><br><span class="line"><span class="keyword">deallocate</span> c1</span><br><span class="line"><span class="comment">--以上代码的一个小错误：没有更正  输出字符串数据时，记得把非字符串用cast函数转换，在写一个比较长的程序时容易遗忘。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--7.	请设计一个存储过程实现下列功能：判断某个专业某门课程成绩排名为n的学生的成绩是否低于该门课程的平均分，如果低于平均分，则将其成绩改为平均分，否则输出学号、姓名、班号、课程号、课程名、成绩。（提示：可以在存储过程内部使用游标）。</span></span><br><span class="line"><span class="keyword">create</span> proc Change_grade @sdept <span class="built_in">char</span>(<span class="number">20</span>), @cno <span class="built_in">char</span>(<span class="number">20</span>), @n <span class="built_in">int</span></span><br><span class="line"><span class="keyword">as</span> <span class="keyword">begin</span></span><br><span class="line">	<span class="keyword">declare</span> cur <span class="keyword">scroll</span> <span class="keyword">cursor</span> <span class="keyword">for</span></span><br><span class="line">	<span class="keyword">select</span> grade</span><br><span class="line">	<span class="keyword">from</span> sc <span class="keyword">join</span> student <span class="keyword">on</span> (sc.sno = student.sno)</span><br><span class="line">	<span class="keyword">where</span> sdept = @sdept <span class="keyword">and</span> cno = @cno</span><br><span class="line">	<span class="keyword">order</span> <span class="keyword">by</span> grade <span class="keyword">desc</span></span><br><span class="line">	</span><br><span class="line">	<span class="keyword">declare</span> @cnt <span class="built_in">int</span></span><br><span class="line">	<span class="keyword">declare</span> @<span class="keyword">avg</span> <span class="built_in">numeric</span>(<span class="number">6</span>, <span class="number">2</span>)</span><br><span class="line">	<span class="keyword">select</span> @cnt = <span class="keyword">count</span>(*), @<span class="keyword">avg</span> = <span class="keyword">avg</span>(grade)</span><br><span class="line">		<span class="keyword">from</span> sc <span class="keyword">join</span> student <span class="keyword">on</span> (sc.sno = student.sno)</span><br><span class="line">		<span class="keyword">where</span> sdept = @sdept <span class="keyword">and</span> cno = @cno</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span>(@cnt &lt; n) <span class="keyword">begin</span></span><br><span class="line">		print <span class="string">&#x27;该门课程人数少于n人&#x27;</span></span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	<span class="keyword">end</span></span><br><span class="line">	</span><br><span class="line">	<span class="keyword">open</span> cur</span><br><span class="line">	<span class="keyword">declare</span> @grade <span class="built_in">numeric</span>(<span class="number">6</span>, <span class="number">2</span>)</span><br><span class="line">	<span class="keyword">fetch</span> <span class="keyword">absolute</span> n <span class="keyword">from</span> cur <span class="keyword">into</span> @grade</span><br><span class="line">	<span class="keyword">if</span> @grade &lt; @<span class="keyword">avg</span></span><br><span class="line">		<span class="keyword">update</span> sc</span><br><span class="line">		<span class="keyword">set</span> grade = @<span class="keyword">avg</span></span><br><span class="line">		<span class="keyword">where</span> <span class="keyword">current</span> <span class="keyword">of</span> cur</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">		</span><br><span class="line">	<span class="keyword">end</span></span><br><span class="line">	<span class="keyword">close</span> cur</span><br><span class="line">	<span class="keyword">deallocate</span> cur</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">--8.	对student数据库设计存储过程，实现将某门课程成绩低于课程平均成绩的学生成绩都加上3分。（提示可以使用存储过程内部使用游标）</span></span><br><span class="line"><span class="keyword">create</span> proc Add_Grade @cno <span class="built_in">char</span>(<span class="number">20</span>)</span><br><span class="line"><span class="keyword">as</span> <span class="keyword">begin</span></span><br><span class="line">	<span class="keyword">declare</span> cur <span class="keyword">scroll</span> <span class="keyword">cursor</span> <span class="keyword">for</span></span><br><span class="line">	<span class="keyword">select</span> sno, grade</span><br><span class="line">	<span class="keyword">from</span> sc</span><br><span class="line">	<span class="keyword">where</span> cno = @cno</span><br><span class="line">	<span class="keyword">order</span> <span class="keyword">by</span> grade <span class="keyword">asc</span></span><br><span class="line">	<span class="keyword">open</span> cur</span><br><span class="line">	<span class="keyword">declare</span> @sno <span class="built_in">char</span>(<span class="number">20</span>), @grade <span class="built_in">numeric</span>(<span class="number">6</span>,<span class="number">2</span>), @<span class="keyword">avg</span> <span class="built_in">numeric</span>(<span class="number">6</span>, <span class="number">2</span>)</span><br><span class="line">	<span class="keyword">select</span> @<span class="keyword">avg</span> = <span class="keyword">avg</span>(grade) <span class="keyword">from</span> sc <span class="keyword">where</span> cno = @cno</span><br><span class="line">	<span class="keyword">fetch</span> <span class="keyword">first</span> <span class="keyword">from</span> cur <span class="keyword">into</span> @sno, @grade</span><br><span class="line">	<span class="keyword">while</span> @@fetch_status = <span class="number">0</span> <span class="keyword">begin</span></span><br><span class="line">		<span class="keyword">if</span> @grade &lt; @<span class="keyword">avg</span></span><br><span class="line">			<span class="keyword">update</span> sc</span><br><span class="line">			<span class="keyword">set</span> grade = grade + <span class="number">1</span></span><br><span class="line">			<span class="keyword">where</span> <span class="keyword">current</span> <span class="keyword">of</span> cur</span><br><span class="line">		<span class="keyword">else</span> break</span><br><span class="line">	<span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--9.	设计存储过程实现学生转专业功能：某个学生（学号）在转专业时，如果想转入的专业是计算机专业那么要求该学生的平均成绩必须超过95分，否则不允许转专业，并将转专业的信息插入到一个转专业的表里，changesd(学号，原专业，新专业，平均成绩)</span></span><br><span class="line">creare <span class="keyword">table</span> changesd(</span><br><span class="line">sno <span class="built_in">char</span>(<span class="number">20</span>) primary <span class="keyword">key</span>,</span><br><span class="line">oldsdept <span class="built_in">char</span>(<span class="number">20</span>),</span><br><span class="line">newsdept <span class="built_in">char</span>(<span class="number">20</span>),</span><br><span class="line">avg_grade <span class="built_in">numeric</span>(<span class="number">6</span>, <span class="number">2</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> proc Trans_Sdept @new_sdept <span class="built_in">char</span>(<span class="number">20</span>), @sno <span class="built_in">char</span>(<span class="number">20</span>)</span><br><span class="line"><span class="keyword">as</span> <span class="keyword">begin</span></span><br><span class="line">	<span class="keyword">declare</span> @<span class="keyword">avg</span> <span class="built_in">numeric</span>(<span class="number">6</span>, <span class="number">2</span>)</span><br><span class="line">	<span class="keyword">select</span> @<span class="keyword">avg</span> = <span class="keyword">avg</span>(grade)</span><br><span class="line">	<span class="keyword">from</span> sc</span><br><span class="line">	<span class="keyword">where</span> sno = @sno</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> @new_sdept = <span class="string">&#x27;CS&#x27;</span> <span class="keyword">and</span> @<span class="keyword">avg</span> &lt;= <span class="number">95</span></span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	<span class="keyword">declare</span> @old_sdept <span class="built_in">char</span>(<span class="number">20</span>)</span><br><span class="line">	<span class="keyword">select</span> @old_sdept = sdept</span><br><span class="line">	<span class="keyword">from</span> student</span><br><span class="line">	<span class="keyword">where</span> sno = @sno</span><br><span class="line">	<span class="keyword">insert</span> <span class="keyword">into</span> changesd</span><br><span class="line">	<span class="keyword">values</span>(@sno, @old_sdept, @new_sdept, @<span class="keyword">avg</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">--10.	现有图书管理数据库， 其中包含如下几个表：</span></span><br><span class="line"><span class="comment">--读者表：reader(学号，姓名，性别，余额)</span></span><br><span class="line"><span class="comment">--借书表：lend（学号，书号，借书日期，应还日期，是否续借）</span></span><br><span class="line"><span class="comment">--欠款表：debt(学号，日期，欠款金额)</span></span><br><span class="line"><span class="comment">--还书表：return(学号，书号，还书日期) </span></span><br><span class="line"><span class="comment">--请设计一个存储过程实现续借或还书操作，具体要求如下：</span></span><br><span class="line"><span class="comment">--只有没有超期的书才可以续借（借书和续借时间都为30天），并修改应还日期，否则只能还书；还书时删除借书表内的借阅记录，并向还书表中插入一条还书记录，注意还书日期为当前日期，并且对超期图书，按照超期的天数计算出罚款金额（每天每本书罚款0.1元），并将罚款信息插入到欠款表中，同时将罚款从读者表的余额里扣除。</span></span><br><span class="line"><span class="comment">--analysis: 续借：没有超期，应还日期 + 1个月 </span></span><br><span class="line"><span class="comment">--还书：删除借阅lend记录，插入还书return记录，对于超期图书，插入欠款表debt并修改reader表余额</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> reader(sno <span class="built_in">char</span>(<span class="number">20</span>) primary <span class="keyword">key</span>, sname <span class="built_in">char</span>(<span class="number">20</span>), sex <span class="built_in">char</span>(<span class="number">4</span>), money <span class="built_in">numeric</span>(<span class="number">4</span>, <span class="number">1</span>))</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> lend(sno <span class="built_in">char</span>(<span class="number">20</span>), bno <span class="built_in">char</span>(<span class="number">20</span>), bortime datetime, lendtime datetime, Again <span class="built_in">int</span>, primary <span class="keyword">key</span>(sno, bno))</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> debt(sno <span class="built_in">char</span>(<span class="number">20</span>), dtime datetime, money <span class="built_in">numeric</span>(<span class="number">4</span>, <span class="number">1</span>), primary <span class="keyword">key</span>(sno, bno))</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">return</span>(sno <span class="built_in">char</span>(<span class="number">20</span>), bno <span class="built_in">char</span>(<span class="number">20</span>), ltime datetime, primary <span class="keyword">key</span>(sno, bno))</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> proc Return_Book @sno <span class="built_in">char</span>(<span class="number">20</span>), @bno <span class="built_in">char</span>(<span class="number">20</span>)</span><br><span class="line"><span class="keyword">as</span> <span class="keyword">begin</span></span><br><span class="line">	<span class="keyword">declare</span> @lendtime datetime, @again <span class="built_in">int</span></span><br><span class="line">	<span class="keyword">select</span> @lendtime = lendtime, @again = Again</span><br><span class="line">	<span class="keyword">from</span> lend <span class="keyword">where</span> sno = @sno <span class="keyword">and</span> bno = @bno</span><br><span class="line">	<span class="keyword">if</span>(@lendtime &gt; <span class="keyword">getdate</span>() <span class="keyword">or</span> @again &lt;&gt; <span class="number">0</span>) <span class="keyword">begin</span></span><br><span class="line">		<span class="keyword">declare</span> @money <span class="built_in">numeric</span>(<span class="number">4</span>, <span class="number">1</span>)</span><br><span class="line">		<span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">return</span> <span class="keyword">values</span>(@sno, @bno, <span class="keyword">getdate</span>())</span><br><span class="line">		<span class="keyword">delete</span> <span class="keyword">from</span> lend <span class="keyword">where</span> sno = @sno <span class="keyword">and</span> bno = @bno</span><br><span class="line">		<span class="keyword">if</span>(@lendtime &gt; <span class="keyword">getdate</span>()) <span class="keyword">begin</span></span><br><span class="line">			<span class="keyword">select</span> @money = <span class="keyword">cast</span>((<span class="keyword">getdate</span>() - @lendtime) <span class="keyword">as</span> <span class="built_in">int</span>)*<span class="number">0.1</span></span><br><span class="line">			<span class="keyword">insert</span> <span class="keyword">into</span> debt <span class="keyword">values</span>(@sno, <span class="keyword">getdate</span>(), @money)</span><br><span class="line">			<span class="keyword">update</span> reader</span><br><span class="line">			<span class="keyword">set</span> money = money - @money</span><br><span class="line">			<span class="keyword">where</span> sno = @sno</span><br><span class="line">		<span class="keyword">end</span></span><br><span class="line">	<span class="keyword">end</span></span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">		<span class="keyword">update</span> lend</span><br><span class="line">		<span class="keyword">set</span> lendtime = <span class="keyword">dateadd</span>(<span class="keyword">day</span>, <span class="number">30</span>, @lendtime)</span><br><span class="line">		<span class="keyword">where</span> sno = @sno, bno = @bno</span><br><span class="line">	<span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">--一个点：考前稍微熟悉一下常用的字符串函数和日期类函数</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>SqlServer</category>
      </categories>
      <tags>
        <tag>Function/Proc/Cursor</tag>
      </tags>
  </entry>
  <entry>
    <title>DBReview Definition Of Data</title>
    <url>/2021/01/08/%E6%95%B0%E6%8D%AE%E5%AE%9A%E4%B9%89/</url>
    <content><![CDATA[<p>a.模式</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--1.定义/创建模式</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">schema</span> NameOfSchema authorization NameOfUser</span><br><span class="line"><span class="comment">--一个模式类似于Cpp中的Namespace，其中可以进一步定义表、索引、视图</span></span><br><span class="line"><span class="comment">--而建表、索引、视图将在默认模式下进行(如果不显式指定的话)</span></span><br><span class="line"><span class="comment">--对应了三级模式中的模式部分(即内模式 - 模式 - 外模式(对应表结构))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--2.删除模式</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">schema</span> NameOfSchema &lt;<span class="keyword">cascade</span>/restrict&gt;</span><br><span class="line"><span class="comment">--cascade级联删除模式下的一切 而restrict将拒绝级联删除。</span></span><br></pre></td></tr></table></figure>

<p>b.表</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">Name</span>(</span><br><span class="line">NameCol1 DataType ColCondition,</span><br><span class="line">NameCol2 DataType ColCondition,</span><br><span class="line">    TableCheck(),</span><br><span class="line">    ……</span><br><span class="line">)</span><br><span class="line"><span class="comment">--2.修改表</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> NameOfTable</span><br><span class="line">[<span class="keyword">add</span> [<span class="keyword">Column</span>] <span class="keyword">Name</span> DataType [<span class="keyword">Check</span>]] <span class="comment">--添加新列</span></span><br><span class="line">[<span class="keyword">add</span> <span class="keyword">constraint</span> <span class="keyword">Name</span> <span class="keyword">Check</span>] <span class="comment">--添加新约束</span></span><br><span class="line">[<span class="keyword">drop</span> [<span class="keyword">column</span>] <span class="keyword">Name</span> [<span class="keyword">cascade</span>]] <span class="comment">--删除列</span></span><br><span class="line">[<span class="keyword">drop</span> <span class="keyword">constraint</span> <span class="keyword">Name</span> [<span class="keyword">cascade</span>]] <span class="comment">--删除约束</span></span><br><span class="line">[<span class="keyword">alter</span> <span class="keyword">column</span> <span class="keyword">Name</span> DataType]	<span class="comment">--改变原有列</span></span><br><span class="line">e.g.</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> c1 <span class="keyword">unique</span>(sdept)</span><br><span class="line"><span class="comment">--对列和约束进行各种操作 &amp; 除了修改约束需要删除后添加来进行</span></span><br><span class="line"><span class="comment">--特例：</span></span><br><span class="line"><span class="comment">--1.添加not null/null约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">Name</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">column</span> <span class="keyword">Name</span> <span class="keyword">not</span> <span class="literal">null</span> </span><br><span class="line"><span class="comment">--2.default约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">Name</span></span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> c2 <span class="keyword">default</span> <span class="keyword">Values</span> <span class="keyword">for</span> NameOfColumn</span><br><span class="line"></span><br><span class="line"><span class="comment">--3.删除表</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="keyword">Name</span> [<span class="keyword">cascade</span>]</span><br></pre></td></tr></table></figure>

<p>c.索引</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> [<span class="keyword">unique</span>][cluster] <span class="keyword">index</span> <span class="keyword">Name</span></span><br><span class="line"><span class="keyword">on</span> tableName([colname [<span class="keyword">asc</span>/<span class="keyword">desc</span>]]),……</span><br><span class="line">e.g.:</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> <span class="keyword">index</span> StuSno <span class="keyword">on</span> student(sno) <span class="keyword">asc</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> <span class="keyword">index</span> CouCno <span class="keyword">on</span> course(cno) <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--修改索引名</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">index</span> OldName <span class="keyword">rename</span> <span class="keyword">to</span> NewName</span><br><span class="line"><span class="comment">--删除索引</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">index</span> <span class="keyword">Name</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>SqlServer</category>
      </categories>
      <tags>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>DBReview 安全性</title>
    <url>/2021/01/08/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E5%85%A8%E6%80%A7/</url>
    <content><![CDATA[<p>a.视图机制</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> NameOfView(NameOfColumn1, Name2)</span><br><span class="line"><span class="keyword">as</span> </span><br><span class="line"><span class="keyword">select</span> <span class="keyword">Statement</span></span><br><span class="line">[<span class="keyword">with</span> <span class="keyword">check</span> <span class="keyword">option</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">view</span> NameOfView [<span class="keyword">cascade</span>]</span><br></pre></td></tr></table></figure>

<p>&amp;视图可以像操作基本表一样对其进行查询、插入、更新等操作</p>
<p>&amp;理所应当的，视图上也可以再建立一个视图</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">update</span> NameOfView</span><br><span class="line"><span class="keyword">set</span> expr</span><br><span class="line"><span class="keyword">where</span> Condition</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> NameOfView</span><br><span class="line"><span class="keyword">values</span>()/ <span class="keyword">select</span> <span class="keyword">Statement</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> NameOfView</span><br><span class="line"><span class="keyword">where</span> Condition</span><br></pre></td></tr></table></figure>

<p>但并非所有视图都是可以被更新的：只有当对视图的操作是<strong>可以转化为对基本表的操作</strong>时，视图才是可更新的</p>
<p>&amp;依此：行列子集视图总是可更新的。 // 而存在比如聚集函数产生的列的视图往往不可更新。</p>
<p>b.用户创建、角色创建等</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--登录名创建</span></span><br><span class="line"><span class="keyword">create</span> login <span class="keyword">Name</span></span><br><span class="line"><span class="keyword">with</span> <span class="keyword">password</span>=<span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">default_database = student</span><br><span class="line"></span><br><span class="line">exec sp_addlogin <span class="keyword">Name</span>, <span class="string">&#x27;1234&#x27;</span>, student</span><br><span class="line"><span class="comment">--用户创建</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> <span class="keyword">Name</span></span><br><span class="line"><span class="keyword">for</span> login 登录名</span><br><span class="line"></span><br><span class="line">exec  sp_adduser 登录名 <span class="keyword">Name</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--角色创建</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">role</span> <span class="keyword">Name</span></span><br><span class="line">e.g.</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">role</span> role1</span><br><span class="line"></span><br><span class="line">exec sp_addrolemember <span class="string">&#x27;role1&#x27;</span>, <span class="string">&#x27;zhangli&#x27;</span></span><br><span class="line">exec sp_addrolemember <span class="string">&#x27;role1&#x27;</span>, <span class="string">&#x27;role2&#x27;</span> <span class="comment">--将role2的权限赋给role1</span></span><br></pre></td></tr></table></figure>



<p>c.权限-sql支持的自主存取控制方法 (可以对许多权限进行操作)</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">grant</span> 权限,……</span><br><span class="line"><span class="keyword">on</span> <span class="keyword">table</span>/<span class="keyword">view</span>/.. <span class="keyword">Name</span></span><br><span class="line"><span class="keyword">to</span> <span class="keyword">User</span>,……</span><br><span class="line">[<span class="keyword">with</span> <span class="keyword">grant</span> <span class="keyword">option</span>]</span><br><span class="line"></span><br><span class="line">e.g.</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">create</span> <span class="keyword">table</span></span><br><span class="line"><span class="keyword">to</span> user1, user2</span><br><span class="line"></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">insert</span>, <span class="keyword">update</span>, <span class="keyword">delete</span></span><br><span class="line"><span class="keyword">on</span> student <span class="keyword">to</span> user1, user2</span><br><span class="line"></span><br><span class="line">deny 权限 <span class="keyword">on</span> <span class="keyword">Table</span>/<span class="keyword">view</span>……</span><br><span class="line"><span class="keyword">to</span> <span class="keyword">User</span>,……</span><br><span class="line">[<span class="keyword">cascade</span>]</span><br><span class="line"></span><br><span class="line">e.g.</span><br><span class="line">deny <span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">on</span> user1</span><br><span class="line">deny <span class="keyword">insert</span> <span class="keyword">on</span> student <span class="keyword">to</span> user1</span><br><span class="line"></span><br><span class="line"><span class="keyword">revoke</span> 权限</span><br><span class="line"><span class="keyword">on</span> <span class="keyword">table</span>/<span class="keyword">view</span>……</span><br><span class="line"><span class="keyword">to</span> <span class="keyword">User</span>,……</span><br><span class="line">[<span class="keyword">cascade</span>]</span><br></pre></td></tr></table></figure>



<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">1．创建一windows用户（名字自定），用sql语句建立windows验证模式的登录名。默认数据库为student</span><br><span class="line"><span class="comment">--2．用sql语句和系统存储过程建立登录名sqluser,密码为1234</span></span><br><span class="line"><span class="keyword">create</span> login sqluser <span class="keyword">with</span> <span class="keyword">password</span> = <span class="string">&#x27;1234&#x27;</span>,default_database = student</span><br><span class="line"></span><br><span class="line">exec sp_addlogin sqluser, <span class="string">&#x27;1234&#x27;</span>, student</span><br><span class="line"><span class="comment">--3．为student数据库新建用户u1，其登录名为sqluser。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> u1 <span class="keyword">for</span> login sqluser</span><br><span class="line"></span><br><span class="line"><span class="comment">--4．新建登录usersf，并将其加入到sysadmin固定服务器角色中。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> usersf</span><br><span class="line">exec sp_addsrvrolemember <span class="string">&#x27;usersf&#x27;</span>,<span class="string">&#x27;sysadmin&#x27;</span></span><br><span class="line"><span class="comment">--5．将student用户usersf（登录名为usersf）加入到db_owner角色中，使其全权负责该数据库,并验证其权限。</span></span><br><span class="line">exec sp_addrolemember <span class="string">&#x27;db_owner&#x27;</span>, <span class="string">&#x27;usersf&#x27;</span></span><br><span class="line"><span class="comment">--6．为SPJ数据库新建用户u2，u3，其登录名分别为u2，u3。</span></span><br><span class="line"><span class="keyword">create</span> login u3 <span class="keyword">with</span> <span class="keyword">password</span>=<span class="string">&#x27;123&#x27;</span></span><br><span class="line"><span class="keyword">create</span> login u2 <span class="keyword">with</span> <span class="keyword">password</span> = <span class="string">&#x27;1234&#x27;</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> u2 <span class="keyword">for</span> login u2</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> u3 <span class="keyword">for</span> login u3</span><br><span class="line"><span class="comment">--（1）授予用户u2对S表有SELECT 权，对P表颜色（COLOR）具有更新权限；</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span></span><br><span class="line"><span class="keyword">on</span> S <span class="keyword">to</span> u2</span><br><span class="line"><span class="keyword">with</span> <span class="keyword">grant</span> <span class="keyword">option</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">update</span></span><br><span class="line"><span class="keyword">on</span> P(COLOR) <span class="keyword">to</span> u2</span><br><span class="line"><span class="keyword">with</span> <span class="keyword">grant</span> <span class="keyword">option</span></span><br><span class="line"><span class="comment">--（2）u2将其拥有的权限授予u3；</span></span><br><span class="line"><span class="comment">--（3）用sql语句逐一验证u2、u3所获得的权限。</span></span><br><span class="line"><span class="comment">--（4）撤销用户u3所获得的权限，并验证。</span></span><br><span class="line"><span class="keyword">revoke</span> <span class="keyword">update</span></span><br><span class="line"><span class="keyword">on</span> P(COLOR) <span class="keyword">from</span> u3</span><br><span class="line"><span class="keyword">revoke</span> <span class="keyword">select</span> <span class="keyword">on</span> S <span class="keyword">from</span> u3</span><br><span class="line"><span class="comment">--7.在student数据库中建立角色operate,该角色具有对student和course表的查询权限；具有对表sc的插入和修改权限。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">role</span> operate</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span> <span class="keyword">on</span> stduent <span class="keyword">to</span> operate <span class="comment">--不能一次性给两个对象授予权限</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span> <span class="keyword">on</span> course <span class="keyword">to</span> operate</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">insert</span>, <span class="keyword">update</span> <span class="keyword">on</span> sc <span class="keyword">to</span> operate</span><br><span class="line"></span><br><span class="line"><span class="comment">--8.拒绝用户u1对sc表的修改权限。</span></span><br><span class="line">deny <span class="keyword">update</span> <span class="keyword">on</span> sc <span class="keyword">to</span> u1</span><br><span class="line"><span class="comment">--9.使用存储过程将角色operate赋给用户u1,并用sql语句验证其权限。（特别验证u1对sc表的修改权限）</span></span><br><span class="line">exec sp_addrolemember operate, u1</span><br><span class="line"><span class="comment">--10. 在student数据库中创建架构（schema）teacher指定给用户teacher（也就是要先创建一个teacher用户）</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> teacher</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">schema</span> teacher authorization teacher</span><br><span class="line"><span class="comment">--11.	在已创建的teacher架构中创建“tea”表，表结构为（tno(编号), tname(姓名), tsd（专业）,tphone, te_mail）(数据类型和长度自己定义)，通过teacher架构为teacher用户设置查询权限，验证teacher用户对表tea是否具有select权限和delete权限，为什么？</span></span><br><span class="line"><span class="keyword">create</span> teacher.tea(</span><br><span class="line">	tno <span class="built_in">char</span>(<span class="number">20</span>) primary <span class="keyword">key</span>,</span><br><span class="line">    tname <span class="built_in">char</span>(<span class="number">20</span>),</span><br><span class="line">    tsd <span class="built_in">char</span>(<span class="number">20</span>),</span><br><span class="line">    tphone <span class="built_in">char</span>(<span class="number">20</span>),</span><br><span class="line">    te_mail <span class="built_in">char</span>(<span class="number">20</span>)</span><br><span class="line">)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>SqlServer</category>
      </categories>
      <tags>
        <tag>Safety</tag>
      </tags>
  </entry>
  <entry>
    <title>DBReview 完整性</title>
    <url>/2021/01/08/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%8C%E6%95%B4%E6%80%A7%E7%9B%B8%E5%85%B3%E4%BB%A3%E7%A0%81/</url>
    <content><![CDATA[<h3 id="数据库完整性"><a href="#数据库完整性" class="headerlink" title="数据库完整性"></a>数据库完整性</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">a.实体完整性</span><br><span class="line">  1.</span><br><span class="line">  def: 主属性不能为空值 —— 设定主码</span><br><span class="line">  <span class="keyword">create</span> <span class="keyword">table</span> student(</span><br><span class="line">  	sno <span class="built_in">char</span>(<span class="number">20</span>) primary <span class="keyword">key</span>, <span class="comment">--列级约束</span></span><br><span class="line">    sname <span class="built_in">char</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span></span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">create</span> <span class="keyword">table</span> sc(</span><br><span class="line">  	sno <span class="built_in">char</span>(<span class="number">20</span>),</span><br><span class="line">    cno <span class="built_in">char</span>(<span class="number">20</span>),</span><br><span class="line">    score <span class="built_in">smallint</span>,</span><br><span class="line">    primary <span class="keyword">key</span>(sno, cno) <span class="comment">--表级约束</span></span><br><span class="line">  );</span><br><span class="line">  </span><br><span class="line">  2.完整性检查 &amp; 违约处理</span><br><span class="line">  1) 检查插入/更新时主码有无空值</span><br><span class="line">  2) 检查表中主码值是否唯一</span><br><span class="line">  </span><br><span class="line">  1) 只需扫描插入/更新时所有的元组即可。</span><br><span class="line">  2) 一般情况下需要全表扫描, 效率过低, 更好的办法是通过对主码建立 B+ 树索引, 快速找到待插入的主码值是否已经在表中。</span><br><span class="line">  违约即拒绝修改/插入。</span><br><span class="line">  </span><br><span class="line">b.参照完整性</span><br><span class="line">	def:外码属性取值要么为空要么在被参照属性中取值。 —— 设定外码约束。</span><br><span class="line">	<span class="keyword">create</span> <span class="keyword">table</span> sc(</span><br><span class="line">    	sno <span class="built_in">char</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">        cno <span class="built_in">char</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">        score <span class="built_in">smallint</span> ,</span><br><span class="line">        primary <span class="keyword">key</span>(sno, cno),</span><br><span class="line">        <span class="keyword">foreign</span> <span class="keyword">key</span> (sno) <span class="keyword">references</span> student(sno)</span><br><span class="line">        	<span class="keyword">on</span> <span class="keyword">delete</span> <span class="keyword">cascade</span>/<span class="keyword">no</span> <span class="keyword">action</span></span><br><span class="line">        	<span class="keyword">on</span> <span class="keyword">update</span> <span class="keyword">cascade</span>/<span class="keyword">no</span> <span class="keyword">action</span> , 			//表级约束</span><br><span class="line">        <span class="keyword">foreign</span> <span class="keyword">key</span> (cno) <span class="keyword">references</span> course(Cno)   //表级约束</span><br><span class="line">    );</span><br><span class="line">	</span><br><span class="line">	违约处理 &amp; 检查机制</span><br><span class="line">	一般情况下 对参照表操作(插入、修改外码值)导致完整性破坏将总是拒绝操作</span><br><span class="line">	而对被参照表操作(删除元组、修改主码值(被参照的主码))则可能将级联修改/拒绝/将参照元组的外码改为空值</span><br><span class="line">	</span><br><span class="line">	但可以按照上述方法手动设置在更新/删除时的级联操作(级联 or 拒绝执行)</span><br><span class="line">	</span><br><span class="line">c.用户定义的完整性</span><br><span class="line">	includeing:</span><br><span class="line">	not null</span><br><span class="line">	unique </span><br><span class="line">	<span class="keyword">check</span>子句</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">create</span> <span class="keyword">table</span> student(</span><br><span class="line">    	sno <span class="built_in">char</span>(<span class="number">20</span>) primary <span class="keyword">key</span>,</span><br><span class="line">        sname <span class="built_in">char</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span>, 				<span class="comment">--非空约束</span></span><br><span class="line">        sex <span class="built_in">char</span>(<span class="number">2</span>) <span class="keyword">check</span>(sex <span class="keyword">in</span> (<span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;女&#x27;</span>)),   <span class="comment">--check约束</span></span><br><span class="line">        sage <span class="built_in">smallint</span>,</span><br><span class="line">        sdept <span class="built_in">char</span>(<span class="number">20</span>),</span><br><span class="line">        <span class="keyword">sid</span> <span class="built_in">char</span>(<span class="number">20</span>) <span class="keyword">unique</span>,                      <span class="comment">--unique约束</span></span><br><span class="line">        <span class="keyword">check</span>(sex = <span class="string">&#x27;男&#x27;</span> <span class="keyword">or</span> <span class="keyword">substring</span>(<span class="keyword">sid</span>, <span class="number">5</span>, <span class="number">1</span>) &lt;&gt; <span class="string">&#x27;F&#x27;</span>) <span class="comment">-- 元组级check约束</span></span><br><span class="line">    )</span><br><span class="line">    //不满足将拒绝执行。</span><br><span class="line">    </span><br><span class="line">d.完整性约束语句</span><br><span class="line">	在建表时通过 <span class="keyword">constraint</span> 关键字创建约束可以在日后修改、删除某些约束。</span><br><span class="line">	也可以在建表后通过 <span class="keyword">constraint</span> 关键字添加、修改、删除约束。</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">create</span> <span class="keyword">table</span> student(</span><br><span class="line">    	sno <span class="built_in">char</span>(<span class="number">20</span>)</span><br><span class="line">        <span class="keyword">constraint</span> c1 <span class="keyword">check</span> (<span class="keyword">len</span>(sno) = <span class="number">11</span>),</span><br><span class="line">        sname <span class="built_in">char</span>(<span class="number">20</span>)</span><br><span class="line">        <span class="keyword">constraint</span> c2 <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">        <span class="keyword">constraint</span> pk primary <span class="keyword">key</span>(sno)</span><br><span class="line">    );</span><br><span class="line">    即<span class="comment">-- constraint 约束名 约束</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">alter</span> <span class="keyword">table</span> student</span><br><span class="line">    <span class="keyword">drop</span> constrint c1       <span class="comment">-- 删除student表中名为c1的约束</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">alter</span> <span class="keyword">table</span> student</span><br><span class="line">    <span class="keyword">add</span> <span class="keyword">constraint</span> Cs <span class="keyword">check</span> (<span class="keyword">len</span>(sno) = <span class="number">12</span>) <span class="comment">--添加新的约束</span></span><br><span class="line">    <span class="comment">--PS：修改约束需要通过alter-table-名 drop &amp; add constraint 来实现</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>SqlServer</category>
      </categories>
      <tags>
        <tag>完整性</tag>
      </tags>
  </entry>
  <entry>
    <title>DBReview trigger</title>
    <url>/2021/01/08/%E8%A7%A6%E5%8F%91%E5%99%A8/</url>
    <content><![CDATA[<h3 id="触发器总结"><a href="#触发器总结" class="headerlink" title="触发器总结"></a>触发器总结</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> tri_</span><br><span class="line"><span class="keyword">on</span> tableName/ViewName</span><br><span class="line"><span class="keyword">for</span>/instead <span class="keyword">of</span> <span class="keyword">update</span>, <span class="keyword">insert</span>, <span class="keyword">delete</span></span><br><span class="line"><span class="keyword">as</span> <span class="keyword">begin</span></span><br><span class="line">	<span class="keyword">sql</span>-<span class="keyword">Statement</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<h4 id="实验六"><a href="#实验六" class="headerlink" title="实验六"></a>实验六</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">---1.	将stu数据库中student表的sno定义为主键；</span></span><br><span class="line"><span class="keyword">use</span> stu</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> c1 primary <span class="keyword">key</span>(sno)</span><br><span class="line"><span class="comment">--2.	将数据库stu的表course的cno字段定义为主键，约束名称为cno_pk;</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> course</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> cno_pk primary <span class="keyword">key</span>(cno)</span><br><span class="line"><span class="comment">--3.	为表course中的字段cname添加唯一值约束；</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> course</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> c2 <span class="keyword">unique</span>(cname)</span><br><span class="line"><span class="comment">--4.	将数据库stu的表sc的sno及cno字段组合定义为主键，约束名称为sc_pk;</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> sc</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> sc_pk primary <span class="keyword">key</span>(sno, cno)</span><br><span class="line"><span class="comment">--5.	对于数据表sc的sno、cno字段定义为外码，使之与表student的主码sno及表course的主码cno对应，实现如下参照完整性：</span></span><br><span class="line"><span class="comment">--1)	删除student表中记录的同时删除sc表中与该记录sno字段值相同的记录；</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> sc</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> fk <span class="keyword">foreign</span> <span class="keyword">key</span>(sno) <span class="keyword">references</span> student(sno)</span><br><span class="line"><span class="keyword">on</span> <span class="keyword">delete</span> <span class="keyword">cascade</span></span><br><span class="line"><span class="comment">--2)	修改student表某记录的sno时，若sc表中与该字段值对应的有若干条记录，则拒绝修改；</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> sc</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> fk foreigin <span class="keyword">key</span>(sno) <span class="keyword">references</span> student(sno)</span><br><span class="line"><span class="keyword">on</span> <span class="keyword">delete</span> <span class="keyword">no</span> <span class="keyword">action</span></span><br><span class="line"><span class="comment">--3)	修改course表cno字段值时，该字段在sc表中的对应值也应修改；</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> sc</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> fk2 <span class="keyword">foreign</span> <span class="keyword">key</span>(cno) <span class="keyword">references</span> course(cno)</span><br><span class="line"><span class="keyword">on</span> <span class="keyword">update</span> <span class="keyword">cascade</span></span><br><span class="line"><span class="comment">--4)	删除course表一条记录时，若该字段在在sc表中存在，则删除该字段对应的记录；</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> sc</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> fk2 <span class="keyword">foreign</span> <span class="keyword">key</span>(cno) <span class="keyword">references</span> course(cno)</span><br><span class="line"><span class="keyword">on</span> <span class="keyword">delete</span> <span class="keyword">cascade</span></span><br><span class="line"><span class="comment">--5)	向sc表添加记录时，如果该记录的sno字段的值在student中不存在，则拒绝插入；</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--6.	定义check约束，要求学生学号sno必须为9位数字字符，且不能以0开头，第二三位皆为0；</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> STUDENT </span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> C1 <span class="keyword">CHECK</span>(SNO <span class="keyword">LIKE</span> <span class="string">&#x27;[1-9]00[0-9][0-9][0-9][0-9][0-9][0-9]&#x27;</span>)</span><br><span class="line"><span class="comment">--7.	定义stu数据库中student表中学生年龄值在16-25范围内；</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> c <span class="keyword">check</span>(sage <span class="keyword">between</span> <span class="number">16</span> <span class="keyword">and</span> <span class="number">25</span>)</span><br><span class="line"><span class="comment">--8.	定义stu数据库中student表中学生姓名长度在2-8之间；</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> c2 <span class="keyword">check</span>(<span class="keyword">len</span>(sname) <span class="keyword">between</span> <span class="number">2</span> <span class="keyword">and</span> <span class="number">8</span>)</span><br><span class="line"><span class="comment">--9.	定义stu数据库中student表中学生性别列中只能输入“男”或“女”；</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> c3 <span class="keyword">check</span>(ssex = <span class="string">&#x27;男&#x27;</span> <span class="keyword">or</span> ssex = <span class="string">&#x27;女&#x27;</span>)</span><br><span class="line"><span class="comment">--10.	定义stu数据库student表中学生年龄值默认值为20；</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> c3 <span class="keyword">default</span> <span class="number">20</span> <span class="keyword">for</span> sage</span><br><span class="line"><span class="comment">--11.	修改student表学生的年龄值约束可以为15-30范围内；</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student <span class="keyword">drop</span> <span class="keyword">constraint</span> c</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> c <span class="keyword">check</span>(sage <span class="keyword">between</span> <span class="number">15</span> <span class="keyword">and</span> <span class="number">30</span>)</span><br><span class="line"><span class="comment">--12.	删除上述唯一值约束、外键约束及check约束；</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">!!!!</span><br><span class="line">触发器的题认真看认真做。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--13.	设计触发器实现如果一个学生转专业了，那么输出一条信息显示该学生各门课程的平均分</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> trans_dept <span class="keyword">on</span> student</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">update</span></span><br><span class="line"><span class="keyword">as</span> </span><br><span class="line"><span class="keyword">if</span> <span class="keyword">update</span>(sdept) <span class="keyword">begin</span></span><br><span class="line">	<span class="keyword">declare</span> @avgg <span class="built_in">numeric</span>(<span class="number">4</span>, <span class="number">1</span>)</span><br><span class="line">	<span class="keyword">select</span> @avgg = <span class="keyword">avg</span>(grade)</span><br><span class="line">	<span class="keyword">from</span> sc <span class="keyword">join</span> inserted <span class="keyword">on</span> (sc.sno = inserted.sno)</span><br><span class="line">	</span><br><span class="line">	print <span class="string">&#x27;该学生的平均分为:&#x27;</span> + <span class="keyword">cast</span>(@avgg <span class="keyword">as</span> <span class="built_in">char</span>(<span class="number">10</span>))</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> trans_dept <span class="keyword">on</span> student</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">update</span></span><br><span class="line"><span class="keyword">as</span> <span class="keyword">begin</span></span><br><span class="line">	<span class="keyword">declare</span> @sno <span class="built_in">char</span>(<span class="number">20</span>)</span><br><span class="line">	<span class="keyword">declare</span> @oldsdept <span class="built_in">char</span>(<span class="number">20</span>)</span><br><span class="line">	<span class="keyword">declare</span> @newsdept <span class="built_in">char</span>(<span class="number">20</span>)</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">select</span> @sno = sno, @newsdept = sdept</span><br><span class="line">	<span class="keyword">from</span> inserted</span><br><span class="line">	<span class="keyword">select</span> @oldsdept = sdept <span class="keyword">from</span> deleted</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span>(@oldsdept &lt;&gt; @newsdept) <span class="keyword">begin</span></span><br><span class="line">		<span class="keyword">declare</span> @avgg <span class="built_in">numeric</span>(<span class="number">4</span>, <span class="number">1</span>)</span><br><span class="line">		<span class="keyword">select</span> @avgg = <span class="keyword">avg</span>(grade)</span><br><span class="line">		<span class="keyword">from</span> sc</span><br><span class="line">		<span class="keyword">where</span> sno = @sno</span><br><span class="line">		print @sno + <span class="string">&#x27;的平均成绩为&#x27;</span> + <span class="keyword">cast</span>(@avgg <span class="keyword">as</span> <span class="built_in">char</span>(<span class="number">20</span>))</span><br><span class="line">	<span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--14.	设计触发器实现如果成绩被修改了20分以上，则输出提示信息“修改成绩超过20分，请慎重”。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> update_grade <span class="keyword">on</span> sc</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">update</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">update</span>(grade) <span class="keyword">begin</span></span><br><span class="line">	<span class="keyword">declare</span> @oldgrade <span class="built_in">float</span></span><br><span class="line">	<span class="keyword">declare</span> @newgrade <span class="built_in">float</span></span><br><span class="line">	<span class="keyword">select</span> @oldgrade = grade <span class="keyword">from</span> deleted</span><br><span class="line">	<span class="keyword">select</span> @newgrade = grade <span class="keyword">from</span> inserted</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span>(<span class="keyword">abs</span>(@newgrade - @oldgrade) &gt; <span class="number">20</span>)</span><br><span class="line">		print <span class="string">&#x27;修改成绩超过20分，请慎重&#x27;</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> Update_grade <span class="keyword">on</span> sc</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">update</span></span><br><span class="line"><span class="keyword">as</span> <span class="keyword">begin</span></span><br><span class="line">	<span class="keyword">declare</span> @newgrade <span class="built_in">int</span>, @oldgrade <span class="built_in">int</span></span><br><span class="line">	<span class="keyword">select</span> @newgrade = grade <span class="keyword">from</span> inserted</span><br><span class="line">	<span class="keyword">select</span> @oldgrade = grade <span class="keyword">from</span> deleted</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span>(@newgrade - @oldgrade &gt; <span class="number">20</span> <span class="keyword">or</span> @oldgrade - @newgrade &gt; <span class="number">20</span>)</span><br><span class="line">		print <span class="string">&#x27;修改成绩超过20分，请慎重&#x27;</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">--QAQ做错了</span></span><br><span class="line"><span class="comment">--15. 在student表中增加一列total,表示学生选课总门数，初始值为0。定义一个触发器，实现如下完整性约束：当向SC表插入选课记录时，自动更新student表对应学号的total值,考虑成批插入数据的情况。</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student</span><br><span class="line"><span class="keyword">add</span> total <span class="built_in">int</span> <span class="keyword">default</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">update</span> student</span><br><span class="line"><span class="keyword">set</span> total = total + (<span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> sc <span class="keyword">where</span> student.sno = sc.sno)</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> Check_total_course <span class="keyword">on</span> sc</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">insert</span></span><br><span class="line"><span class="keyword">as</span> <span class="keyword">begin</span></span><br><span class="line">	<span class="keyword">update</span> student</span><br><span class="line">	<span class="keyword">set</span> total = total + (<span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> inserted <span class="keyword">where</span> student.sno = inserted.sno)</span><br><span class="line">	<span class="keyword">where</span> sno <span class="keyword">in</span> (</span><br><span class="line">    	<span class="keyword">select</span> sno</span><br><span class="line">        <span class="keyword">from</span> inserted</span><br><span class="line">    )</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student</span><br><span class="line"><span class="keyword">add</span> total <span class="built_in">int</span> <span class="keyword">default</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> upd_stu_tot <span class="keyword">on</span> sc</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">insert</span></span><br><span class="line"><span class="keyword">as</span> <span class="keyword">begin</span></span><br><span class="line">	<span class="keyword">update</span> student</span><br><span class="line">	<span class="keyword">set</span> total = total + (<span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> inserted <span class="keyword">where</span> sno = student.sno)</span><br><span class="line">	<span class="keyword">where</span> sno <span class="keyword">in</span> (</span><br><span class="line">    	<span class="keyword">select</span> sno</span><br><span class="line">        <span class="keyword">from</span> inserted</span><br><span class="line">    )</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">--16.设计一触发器，约束数据库系统课程的课容量为120。</span></span><br><span class="line"><span class="number">16</span>．设有两个表：商品库存表（商品编号，商品名称，库存数量，库存单价，库存金额）；商品销售表（商品编号，商品名称，购货商号，销售数量，销售单价，销售金额）；设计一触发器实现如下业务规则：</span><br><span class="line">（<span class="number">1</span>）保证在商品库存表中插入的数据，库存金额 = 库存数量 * 库存单价。</span><br><span class="line">（<span class="number">2</span>）如果销售的商品不存在库存或者库存为零，则返回提示信息。否则自动减少商品库存表中对应商品的库存数量和库存金额。</span><br><span class="line">建表并验证触发器的执行。</span><br><span class="line"><span class="number">17</span>．建立教师表（教工编号，姓名，专业，职称，工资）和</span><br><span class="line">工资变化表（教工编号，原工资，新工资），设计触发器实现教授的工资不得低于<span class="number">4000</span>元，如果低于<span class="number">4000</span>元则自动改为<span class="number">4000</span>元。</span><br><span class="line"><span class="number">18.</span>	使用第<span class="number">17</span>题的两个表设计触发器实现如果教工的工资发生变化则向工资变化表插入一条记录，包含教工编号，原工资，新工资。</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="有价值的一些题"><a href="#有价值的一些题" class="headerlink" title="有价值的一些题"></a>有价值的一些题</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">模糊字符串查询[0-9] [a-z] 等等</span><br><span class="line"><span class="comment">--6.	定义check约束，要求学生学号sno必须为9位数字字符，且不能以0开头，第二三位皆为0；</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> STUDENT </span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> C1 <span class="keyword">CHECK</span>(SNO <span class="keyword">LIKE</span> <span class="string">&#x27;[1-9]00[0-9][0-9][0-9][0-9][0-9][0-9]&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--13.学生转专业了输出平均成绩</span></span><br><span class="line"><span class="keyword">USE</span> STUDENT</span><br><span class="line"><span class="keyword">GO</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> A1</span><br><span class="line"><span class="keyword">ON</span> STUDENT</span><br><span class="line"><span class="keyword">FOR</span></span><br><span class="line"><span class="keyword">UPDATE</span></span><br><span class="line"><span class="keyword">AS</span> </span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">UPDATE</span>(SDEPT)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">DECLARE</span> @<span class="keyword">AVG</span> <span class="built_in">NUMERIC</span>(<span class="number">4</span>,<span class="number">1</span>),@SNO <span class="built_in">CHAR</span>(<span class="number">9</span>)</span><br><span class="line"><span class="keyword">SELECT</span> @SNO=(<span class="keyword">SELECT</span> SNO <span class="keyword">FROM</span> DELETED)</span><br><span class="line"><span class="keyword">SELECT</span> @<span class="keyword">AVG</span>=(<span class="keyword">SELECT</span> <span class="keyword">AVG</span>(GRADE) <span class="keyword">FROM</span> SC <span class="keyword">WHERE</span> SNO=@SNO) </span><br><span class="line">PRINT @SNO+<span class="string">&#x27;各门课的平均成绩&#x27;</span>+<span class="keyword">cast</span>(@<span class="keyword">AVG</span> <span class="keyword">as</span> <span class="built_in">CHAR</span>(<span class="number">5</span>))</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="comment">--14.	设计触发器实现如果成绩被修改了20分以上，则输出提示信息“修改成绩超过20分，	请慎重”。</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> A2</span><br><span class="line"><span class="keyword">ON</span> SC</span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">UPDATE</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">UPDATE</span>(GRADE)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">DECLARE</span> @<span class="keyword">OLD</span> <span class="built_in">INT</span></span><br><span class="line"><span class="keyword">DECLARE</span> @<span class="keyword">NEW</span> <span class="built_in">INT</span></span><br><span class="line"><span class="keyword">SELECT</span> @<span class="keyword">OLD</span> = GRADE <span class="keyword">FROM</span> DELETED</span><br><span class="line"><span class="keyword">SELECT</span> @<span class="keyword">NEW</span> = GRADE <span class="keyword">FROM</span> INSERTED</span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">abs</span>(@<span class="keyword">NEW</span>-@<span class="keyword">OLD</span>)&gt;=<span class="number">20</span></span><br><span class="line">PRINT<span class="string">&#x27;修改成绩超过20分，请慎重&#x27;</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="comment">--增加一个触发器，当有课程插入sc时，student的total+相应数值，考虑成批插入</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> TRI_add_course </span><br><span class="line"><span class="keyword">ON</span> SC </span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">INSERT</span> </span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">    <span class="keyword">UPDATE</span> student</span><br><span class="line">        <span class="keyword">SET</span> total = total + (<span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> INSERTED <span class="keyword">WHERE</span> sno = Student.sno)</span><br><span class="line">        <span class="keyword">WHERE</span> sno <span class="keyword">IN</span>( <span class="keyword">SELECT</span> Sno <span class="keyword">FROM</span> INSERTED )</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>SqlServer</category>
      </categories>
      <tags>
        <tag>trigger</tag>
      </tags>
  </entry>
  <entry>
    <title>DBReview Select</title>
    <url>/2020/12/16/Select/</url>
    <content><![CDATA[<h2 id="Select语句小总结"><a href="#Select语句小总结" class="headerlink" title="Select语句小总结"></a>Select语句小总结</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> [<span class="keyword">distinct</span>] cols</span><br><span class="line"><span class="keyword">from</span> t1 [<span class="keyword">join</span> t2 <span class="keyword">on</span> (t1.xxx = t2.xxx)]</span><br><span class="line"><span class="keyword">where</span> Condition</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> col_name <span class="keyword">having</span> condition</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> col_name <span class="keyword">desc</span>/<span class="keyword">asc</span>   //倒序 <span class="keyword">or</span> 正序</span><br></pre></td></tr></table></figure>



<h4 id="嵌套查询"><a href="#嵌套查询" class="headerlink" title="嵌套查询"></a>嵌套查询</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> t1</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">col</span> <span class="keyword">in</span> (</span><br><span class="line">		<span class="keyword">select</span> cols <span class="keyword">from</span> t2</span><br><span class="line">		<span class="keyword">where</span> Condition)</span><br></pre></td></tr></table></figure>

<h4 id="常用字符串函数"><a href="#常用字符串函数" class="headerlink" title="常用字符串函数"></a>常用字符串函数</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">LEFT(string, num) <span class="comment">--取string的左起num个字符</span></span><br><span class="line">right(string, num) <span class="comment">--取string 右起num个字符</span></span><br><span class="line">L/Rtrim(string) <span class="comment">--去除string左起/右起的多余空白符</span></span><br><span class="line">substring(string, <span class="keyword">start</span>, <span class="keyword">length</span>) <span class="comment">--取string从start位置起的length个字符</span></span><br><span class="line"><span class="comment">--PS：sqlString位置从1开始</span></span><br></pre></td></tr></table></figure>

<h4 id="小的语法点"><a href="#小的语法点" class="headerlink" title="小的语法点"></a>小的语法点</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--top rank 语句</span></span><br><span class="line">e.g.</span><br><span class="line"><span class="keyword">select</span> top <span class="number">5</span> 学号</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">where</span> 课程号 = <span class="string">&#x27;J001&#x27;</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 成绩 <span class="keyword">desc</span></span><br><span class="line"><span class="comment">--该语句是在查询得到的子表中选出前五条记录， 因此需要order by 排序</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--case when 简单搜索语句</span></span><br><span class="line">e.g.</span><br><span class="line"><span class="keyword">select</span> 专业, <span class="keyword">sum</span>(<span class="keyword">case</span> 性别 <span class="keyword">when</span> <span class="string">&#x27;男&#x27;</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 男生人数, <span class="keyword">sum</span>(<span class="keyword">case</span> 性别 <span class="keyword">when</span> <span class="string">&#x27;女&#x27;</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 女生人数</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 专业</span><br><span class="line"><span class="comment">--该语句在查询中可用于搜索一列中的具体值出现了多少次并作为查询子表的一列出现</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--group by 可对多元素分组</span></span><br><span class="line">e.g.</span><br><span class="line"><span class="keyword">select</span> 专业, 性别, <span class="keyword">count</span>(学号)</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 专业, 性别</span><br><span class="line"><span class="comment">--即 将专业的各个值和性别的各个值组合后再聚集， 可推广至更多元素。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--使用[]通配符时, = 查询不到正确结果, 必须使用 like 关键字</span></span><br><span class="line"><span class="keyword">select</span> 学号, 姓名, 性别, <span class="keyword">datediff</span>(yy, 出生时间, <span class="keyword">getdate</span>()), 专业</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">substring</span>(学号, <span class="number">5</span>, <span class="number">1</span>) <span class="keyword">like</span> <span class="string">&#x27;[1,2,3,4,9]&#x27;</span> <span class="keyword">or</span> <span class="keyword">substring</span>(学号, <span class="number">6</span>, <span class="number">1</span>) <span class="keyword">like</span> <span class="string">&#x27;[1,2,3,4,9]&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--既使用[] 又使用 % 通配符时, 使用 in 来表示字符串是否对应集合中的某个字符串时会出错</span></span><br><span class="line"><span class="comment">--T21 QAQ 外层别漏group by</span></span><br><span class="line"><span class="comment">--(有聚合函数和其他列同时出现必带group by)</span></span><br><span class="line"></span><br><span class="line">交集操作 <span class="keyword">intersect</span> 并集<span class="keyword">union</span> 差集<span class="keyword">except</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>







<h4 id="实验二"><a href="#实验二" class="headerlink" title="实验二"></a>实验二</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--1．	查询有直接先行课的课程的课号，课名和先行课号。</span></span><br><span class="line"><span class="keyword">select</span> 课程名, 课程号, 先行课号</span><br><span class="line"><span class="keyword">from</span> kc</span><br><span class="line"><span class="keyword">where</span> 先行课号 <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span></span><br><span class="line"><span class="comment">--2．	查询先行课号是“J001”号课程的课号和课名</span></span><br><span class="line"><span class="keyword">select</span> 课程号, 课程名</span><br><span class="line"><span class="keyword">from</span> kc</span><br><span class="line"><span class="keyword">where</span> 先行课号 = <span class="string">&#x27;J001&#x27;</span></span><br><span class="line"><span class="comment">--3．	查询所有的网络工程系姓李，张，王的同学的学号和姓名</span></span><br><span class="line"><span class="keyword">select</span> 学号, 姓名</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> 姓名 <span class="keyword">like</span> <span class="string">&#x27;[李,张,王]%&#x27;</span> <span class="keyword">and</span> 专业 = <span class="string">&#x27;网络工程&#x27;</span></span><br><span class="line"><span class="comment">--4．	查询不在网络工程和信息管理专业学习的学生的学号和姓名，系别，并对查询结果按照专业的升序和学号的降序排序</span></span><br><span class="line"><span class="keyword">select</span> 学号, 姓名, 专业</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> 专业 <span class="keyword">not</span> <span class="keyword">in</span> (<span class="string">&#x27;网络工程&#x27;</span>, <span class="string">&#x27;信息管理&#x27;</span>)</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 专业 <span class="keyword">asc</span>, 学号 <span class="keyword">desc</span></span><br><span class="line"><span class="comment">--5．	查询每门课不及格的学生的人数，显示课号和人数</span></span><br><span class="line"><span class="keyword">select</span> 课程号, <span class="keyword">count</span>(学号)</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">where</span> 成绩 &lt; <span class="number">60</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 课程号</span><br><span class="line"><span class="comment">--6．	查询年龄不在30-35之间的网络工程系的学生的学号，姓名和年龄</span></span><br><span class="line"><span class="keyword">select</span> 学号, 姓名, 年龄</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> 年龄 <span class="keyword">not</span> <span class="keyword">between</span> <span class="number">30</span> <span class="keyword">and</span> <span class="number">35</span> <span class="keyword">and</span> 专业 = <span class="string">&#x27;网络工程&#x27;</span></span><br><span class="line"><span class="comment">--7．	查询没有选修‘J001’号课程的学生的学号（注意去掉重复的元组）</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> 学号</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">where</span> 学号 <span class="keyword">not</span> <span class="keyword">in</span> (</span><br><span class="line">    <span class="keyword">select</span> 学号</span><br><span class="line">    <span class="keyword">from</span> cj</span><br><span class="line">    <span class="keyword">where</span> 课程号 = <span class="string">&#x27;J001&#x27;</span></span><br><span class="line">)</span><br><span class="line"><span class="comment">--8．	查询每个学生的学号，姓名，出生年份，并给出生年份起别名为chusheng </span></span><br><span class="line"><span class="keyword">select</span> 学号, 姓名, <span class="keyword">year</span>(出生时间) chusheng</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="comment">--9. 查询每个学生的学号，姓名和出生日期（出生日期根据身份证号码查询）</span></span><br><span class="line"><span class="keyword">select</span> 学号, 姓名, <span class="keyword">substring</span>(<span class="keyword">id</span>, <span class="number">11</span>, <span class="number">4</span>)</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="comment">--10.查询选修J001课程成绩排名第一的同学的学号和成绩</span></span><br><span class="line"><span class="keyword">select</span> 学号, 成绩</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">where</span> 成绩 &gt;= (</span><br><span class="line">	<span class="keyword">select</span> <span class="keyword">max</span>(成绩)</span><br><span class="line">    <span class="keyword">from</span> cj</span><br><span class="line">    <span class="keyword">where</span> 课程号 = <span class="string">&#x27;J001&#x27;</span></span><br><span class="line">) <span class="keyword">and</span> 课程号 = <span class="string">&#x27;J001&#x27;</span></span><br><span class="line"><span class="comment">--11. 查询所有名字中含有’明’或者’丽’的同学的学号，姓名</span></span><br><span class="line"><span class="keyword">select</span> 学号, 姓名</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> 姓名 <span class="keyword">like</span> <span class="string">&#x27;%[明,丽]%&#x27;</span></span><br><span class="line"><span class="comment">--12. 查询信息管理专业年龄超过20岁的学生的人数</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(学号)</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> 专业 = <span class="string">&#x27;信息管理&#x27;</span> <span class="keyword">and</span> 年龄 &gt; <span class="number">20</span></span><br><span class="line"><span class="comment">--13. 查询平均成绩超过80分的课程的课程号和平均成绩</span></span><br><span class="line"><span class="keyword">select</span> 课程号, <span class="keyword">avg</span>(成绩)</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 课程号 <span class="keyword">having</span> <span class="keyword">avg</span>(成绩) &gt; <span class="number">80</span></span><br><span class="line"><span class="comment">--14. 查询每个专业所有姓张的人数</span></span><br><span class="line"><span class="keyword">select</span> 专业, <span class="keyword">count</span>(学号)</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">LEFT</span>(姓名, <span class="number">1</span>) = <span class="string">&#x27;张&#x27;</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 专业</span><br><span class="line"><span class="comment">--15. 查询各种姓氏的人数（假设没有复姓）</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">LEFT</span>(姓名, <span class="number">1</span>), <span class="keyword">count</span>(<span class="keyword">LEFT</span>(姓名, <span class="number">1</span>))</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">LEFT</span>(姓名, <span class="number">1</span>)</span><br><span class="line"><span class="comment">--16.查询选修课程超过5门的学生的学号和选课门数，以及平均成绩</span></span><br><span class="line"><span class="keyword">select</span> 学号, <span class="keyword">count</span>(课程号), <span class="keyword">avg</span>(成绩)</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 学号 <span class="keyword">having</span> <span class="keyword">count</span>(课程号) &gt; <span class="number">5</span></span><br><span class="line"><span class="comment">--17. 查询选修‘J001’课程的成绩排名前五的学生的学号和成绩</span></span><br><span class="line"><span class="keyword">select</span> top <span class="number">5</span> 学号, 成绩</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">where</span> 课程号 = <span class="string">&#x27;J001&#x27;</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 成绩 <span class="keyword">desc</span></span><br><span class="line"><span class="comment">--18.查询每个学生的最低分和选课门数</span></span><br><span class="line"><span class="keyword">select</span> 学号, <span class="keyword">min</span>(成绩), <span class="keyword">count</span>(课程号)</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 学号</span><br><span class="line"><span class="comment">--19. 查询各个专业各种性别的人数</span></span><br><span class="line"><span class="keyword">select</span> 专业, <span class="keyword">sum</span>(<span class="keyword">case</span> 性别 <span class="keyword">when</span> <span class="string">&#x27;男&#x27;</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 男生人数, <span class="keyword">sum</span>(<span class="keyword">case</span> 性别 <span class="keyword">when</span> <span class="string">&#x27;女&#x27;</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 专业</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> 专业, 性别, <span class="keyword">count</span>(学号) 人数</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 专业, 性别</span><br><span class="line"><span class="comment">--20.查询各个专业男生的人数</span></span><br><span class="line"><span class="keyword">select</span> 专业, <span class="keyword">count</span>(学号) 男生人数</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> 性别 = <span class="string">&#x27;男&#x27;</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 专业</span><br><span class="line"><span class="comment">--21. 列出有二门以上课程（含两门）不及格的学生的学号及该学生的平均成绩；</span></span><br><span class="line"><span class="keyword">select</span> 学号, <span class="keyword">avg</span>(成绩)</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">where</span> 学号 <span class="keyword">in</span> (</span><br><span class="line">	<span class="keyword">select</span> 学号</span><br><span class="line">    <span class="keyword">from</span> cj</span><br><span class="line">    <span class="keyword">where</span> 成绩 &lt; <span class="number">60</span></span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> 学号 <span class="keyword">having</span> <span class="keyword">count</span>(课程号) &gt;= <span class="number">2</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 学号</span><br><span class="line"><span class="comment">--22. 显示学号第五位或者第六位是1、2、3、4或者9的学生的学号、姓名、性别、年龄及专业；</span></span><br><span class="line"><span class="keyword">select</span> 学号, 姓名, 性别, <span class="keyword">datediff</span>(yy, 出生时间, <span class="keyword">getdate</span>()), 专业</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">substring</span>(学号, <span class="number">5</span>, <span class="number">1</span>) <span class="keyword">like</span> <span class="string">&#x27;[1,2,3,4,9]&#x27;</span> <span class="keyword">or</span> <span class="keyword">substring</span>(学号, <span class="number">6</span>, <span class="number">1</span>) <span class="keyword">like</span> <span class="string">&#x27;[1,2,3,4,9]&#x27;</span></span><br><span class="line"><span class="comment">--23. 查询选修了A001和A002课程的学生的学号，课程号，成绩（使用连接）；</span></span><br><span class="line"><span class="keyword">select</span> 学号, 课程号, 成绩</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">where</span> 学号 <span class="keyword">in</span> (</span><br><span class="line">	<span class="keyword">select</span> c1.学号</span><br><span class="line">    <span class="keyword">from</span> cj c1 <span class="keyword">join</span> cj c2 <span class="keyword">on</span> (c1.学号 = c2.学号)</span><br><span class="line">    <span class="keyword">where</span> c1.课程号 = <span class="string">&#x27;A001&#x27;</span> <span class="keyword">and</span> c2.课程号 = <span class="string">&#x27;A002&#x27;</span></span><br><span class="line">)</span><br><span class="line"><span class="comment">--24. 查询选修了A001或者A002或者J001或者J002课程的学生的学号和课程号</span></span><br><span class="line"><span class="keyword">select</span> 学号, 课程号</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">where</span> 学号 <span class="keyword">in</span> (</span><br><span class="line">	<span class="keyword">select</span> 学号</span><br><span class="line">	<span class="keyword">from</span> cj</span><br><span class="line">	<span class="keyword">where</span> 课程号 <span class="keyword">like</span> <span class="string">&#x27;[A, J]00[1, 2]&#x27;</span></span><br><span class="line">)</span><br><span class="line"><span class="comment">--25. 查询姓名为两个字的不同姓氏的人数，输出姓氏，人数。</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">Left</span>(姓名, <span class="number">1</span>), <span class="keyword">count</span>(<span class="keyword">LEFT</span>(姓名, <span class="number">1</span>))</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">len</span>(姓名) = <span class="number">2</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">Left</span>(姓名, <span class="number">1</span>)</span><br><span class="line"><span class="comment">--26.查询选修了高数或者英语的学生的学号和姓名</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> xs.学号, 姓名</span><br><span class="line"><span class="keyword">from</span> cj <span class="keyword">join</span> xs <span class="keyword">on</span> (xs.学号 = cj.学号)</span><br><span class="line">	<span class="keyword">join</span> kc <span class="keyword">on</span> (cj.课程号 = kc.课程号)</span><br><span class="line"><span class="keyword">where</span> 课程名 = <span class="string">&#x27;高数&#x27;</span> <span class="keyword">or</span> 课程名 = <span class="string">&#x27;英语&#x27;</span></span><br><span class="line"><span class="comment">--27. 查询没有选课的学生的学号和姓名</span></span><br><span class="line"><span class="keyword">select</span> 学号, 姓名</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> 学号 <span class="keyword">not</span> <span class="keyword">in</span> (</span><br><span class="line">	<span class="keyword">select</span> 学号</span><br><span class="line">    <span class="keyword">from</span> cj</span><br><span class="line">)</span><br><span class="line"><span class="comment">--28. 查询每个学生的学号，姓名，选课门数和平均分</span></span><br><span class="line"><span class="keyword">select</span> xs.学号, 姓名，<span class="keyword">count</span>(课程号), <span class="keyword">avg</span>(成绩)</span><br><span class="line"><span class="keyword">from</span> cj <span class="keyword">right</span> <span class="keyword">join</span> xs <span class="keyword">on</span> (cj.学号 = xs.学号)</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> xs.学号, 姓名</span><br><span class="line"><span class="comment">--29. 查询选课人数超过5人的课程的课程号，课程名，选课人数和平均分</span></span><br><span class="line"><span class="keyword">select</span> cj.课程号, 课程名, <span class="keyword">count</span>(学号), <span class="keyword">avg</span>(成绩)</span><br><span class="line"><span class="keyword">from</span> cj <span class="keyword">join</span> kc <span class="keyword">on</span> (cj.课程号 = kc.课程号)</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cj.课程号, 课程名 <span class="keyword">having</span> <span class="keyword">count</span>(学号) &gt; <span class="number">5</span></span><br><span class="line"><span class="comment">--30. 查询计算机系选数据库最高分</span></span><br><span class="line"><span class="keyword">select</span> top <span class="number">1</span> 成绩</span><br><span class="line"><span class="keyword">from</span> cj <span class="keyword">join</span> xs <span class="keyword">on</span> (cj.学号 = xs.学号)</span><br><span class="line">	<span class="keyword">join</span> kc <span class="keyword">on</span> (cj.课程号 = kc.课程号)</span><br><span class="line"><span class="keyword">where</span> 专业 = <span class="string">&#x27;计算机&#x27;</span> <span class="keyword">and</span> 课程名 = <span class="string">&#x27;数据库&#x27;</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 成绩 <span class="keyword">desc</span></span><br><span class="line">二：对书上第二章课后习题的<span class="number">4</span>的SPJ数据库各表查询： </span><br><span class="line"><span class="number">1</span>．	求供应工程J1零件的供应商号码SNO</span><br><span class="line"><span class="number">2</span>．	求查询每个工程使用不同供应商的零件的个数</span><br><span class="line"><span class="number">3</span>．	求供应工程使用零件P3数量超过<span class="number">200</span>的工程号JNO</span><br><span class="line"><span class="number">4</span>．	求颜色为红色和蓝色的零件的零件号和名称</span><br><span class="line"><span class="number">5</span>．	求使用零件数量在<span class="number">200</span><span class="number">-400</span>之间的工程号</span><br><span class="line"><span class="number">6</span>．	查询每种零件的零件号，以及使用该零件的工程数。</span><br></pre></td></tr></table></figure>

<h4 id="实验二错题速览"><a href="#实验二错题速览" class="headerlink" title="实验二错题速览"></a>实验二错题速览</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--25. 查询姓名为两个字的不同姓氏的人数，输出姓氏，人数。</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">Left</span>(姓名, <span class="number">1</span>), <span class="keyword">count</span>(<span class="keyword">LEFT</span>(姓名, <span class="number">1</span>))</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">len</span>(姓名) = <span class="number">2</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">Left</span>(姓名, <span class="number">1</span>)  <span class="comment">--写的时候漏了group by</span></span><br><span class="line"><span class="comment">--21. 列出有二门以上课程（含两门）不及格的学生的学号及该学生的平均成绩；</span></span><br><span class="line"><span class="keyword">select</span> 学号, <span class="keyword">avg</span>(成绩)</span><br><span class="line"><span class="keyword">from</span> cj</span><br><span class="line"><span class="keyword">where</span> 学号 <span class="keyword">in</span> (</span><br><span class="line">	<span class="keyword">select</span> 学号</span><br><span class="line">    <span class="keyword">from</span> cj</span><br><span class="line">    <span class="keyword">where</span> 成绩 &lt; <span class="number">60</span></span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> 学号 <span class="keyword">having</span> <span class="keyword">count</span>(课程号) &gt;= <span class="number">2</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 学号 <span class="comment">--写的时候漏了外层的group by</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="实验三"><a href="#实验三" class="headerlink" title="实验三"></a>实验三</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--1.	查询没有选修英语的学生的学号，姓名和课程号，课程名，成绩</span></span><br><span class="line"><span class="keyword">select</span> xs.学号, 姓名, kc.课程号, 课程名, 成绩</span><br><span class="line"><span class="keyword">from</span> cj <span class="keyword">join</span> xs <span class="keyword">on</span> (xs.学号 = cj.学号)</span><br><span class="line">	<span class="keyword">join</span> kc <span class="keyword">on</span> (cj.课程号 = kc.课程号)</span><br><span class="line"><span class="keyword">where</span> 学号 <span class="keyword">not</span> <span class="keyword">in</span> (</span><br><span class="line">	<span class="keyword">select</span> 学号</span><br><span class="line">    <span class="keyword">from</span> cj <span class="keyword">join</span> kc <span class="keyword">on</span> (cj.课程号 = kc.课程号)</span><br><span class="line">    <span class="keyword">where</span> 课程名 = <span class="string">&#x27;英语&#x27;</span></span><br><span class="line">)</span><br><span class="line"><span class="comment">--2.	查询英语成绩高于英语的平均成绩的学生的学号，姓名，成绩</span></span><br><span class="line"><span class="keyword">select</span> xs.学号, 姓名, 成绩</span><br><span class="line"><span class="keyword">from</span> cj <span class="keyword">join</span> xs <span class="keyword">on</span> (cj.学号 = xs.学号)</span><br><span class="line"><span class="keyword">where</span> 学号 <span class="keyword">in</span>(</span><br><span class="line">	<span class="keyword">select</span> 学号</span><br><span class="line">    <span class="keyword">from</span> cj <span class="keyword">join</span> kc <span class="keyword">on</span> (cj.课程号 = kc.课程号)</span><br><span class="line">    <span class="keyword">where</span> 课程名 = <span class="string">&#x27;英语&#x27;</span> <span class="keyword">and</span> 成绩 &gt; (</span><br><span class="line">    	<span class="keyword">select</span> <span class="keyword">avg</span>(成绩)</span><br><span class="line">        <span class="keyword">from</span> cj <span class="keyword">join</span> kc <span class="keyword">on</span> (cj.课程号 = kc.课程号)</span><br><span class="line">        <span class="keyword">where</span> 课程名 = <span class="string">&#x27;英语&#x27;</span></span><br><span class="line">    )</span><br><span class="line">)</span><br><span class="line"><span class="comment">--3.	查询选修了英语和高数的学生的学号和姓名（要求使用两种方法实现）</span></span><br><span class="line"><span class="keyword">select</span> xs.学号, 姓名</span><br><span class="line"><span class="keyword">from</span> cj <span class="keyword">join</span> xs <span class="keyword">on</span> (xs.学号 = cj.学号)</span><br><span class="line">	<span class="keyword">join</span> kc <span class="keyword">on</span> (cj.课程号 = kc.课程号)</span><br><span class="line"><span class="keyword">where</span> 课程名 = <span class="string">&#x27;英语&#x27;</span></span><br><span class="line"><span class="keyword">intersect</span></span><br><span class="line"><span class="keyword">select</span> xs.学号, 姓名</span><br><span class="line"><span class="keyword">from</span> cj <span class="keyword">join</span> xs <span class="keyword">on</span> (xs.学号 = cj.学号)</span><br><span class="line">	<span class="keyword">join</span> kc <span class="keyword">on</span> (cj.课程号 = kc.课程号)</span><br><span class="line"><span class="keyword">where</span> 课程名 = <span class="string">&#x27;高数&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> xs.学号, 姓名</span><br><span class="line"><span class="keyword">from</span> cj <span class="keyword">join</span> xs <span class="keyword">on</span> (xs.学号 = cj.学号)</span><br><span class="line">	<span class="keyword">join</span> kc <span class="keyword">on</span> (kc.课程号 = cj.课程号)</span><br><span class="line"><span class="keyword">where</span> xs.学号 <span class="keyword">in</span> (</span><br><span class="line">	<span class="keyword">select</span> xs.学号</span><br><span class="line">    <span class="keyword">from</span> cj <span class="keyword">join</span> kc <span class="keyword">on</span> (cj.课程号 = kc.课程号)</span><br><span class="line">    <span class="keyword">where</span> 课程名 = <span class="string">&#x27;高数&#x27;</span></span><br><span class="line">) <span class="keyword">and</span> 课程名 = <span class="string">&#x27;英语&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--4.	查询没有选修程明所选修的全部课程的学生的姓名-</span></span><br><span class="line"><span class="comment">--选修了全部课程</span></span><br><span class="line"><span class="keyword">select</span> 姓名</span><br><span class="line"><span class="keyword">from</span> xs s1</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>(</span><br><span class="line">	<span class="keyword">select</span> *</span><br><span class="line">    <span class="keyword">from</span> cj c1 <span class="keyword">join</span> xs s2 <span class="keyword">on</span> (cj.学号 = s2.学号)</span><br><span class="line">    <span class="keyword">where</span> 姓名 = <span class="string">&#x27;程明&#x27;</span> <span class="keyword">and</span> <span class="keyword">not</span> <span class="keyword">exists</span>(</span><br><span class="line">    	<span class="keyword">select</span> *</span><br><span class="line">        <span class="keyword">from</span> cj c2</span><br><span class="line">        <span class="keyword">where</span> c2.课程号 = c1.课程号 <span class="keyword">and</span> s1.学号 = c2.学号</span><br><span class="line">    )</span><br><span class="line">)</span><br><span class="line"><span class="comment">--没有选修程明选修的全部课程</span></span><br><span class="line"><span class="keyword">select</span> 姓名</span><br><span class="line"><span class="keyword">from</span> xs s1</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">exists</span>(</span><br><span class="line">	<span class="keyword">select</span> *</span><br><span class="line">    <span class="keyword">from</span> cj c1 <span class="keyword">join</span> xs <span class="keyword">on</span> (c1.学号 = xs.学号)</span><br><span class="line">    <span class="keyword">where</span> 姓名 = <span class="string">&#x27;程明&#x27;</span> <span class="keyword">and</span> 课程号 <span class="keyword">not</span> <span class="keyword">in</span>(</span><br><span class="line">    	<span class="keyword">select</span> 课程号</span><br><span class="line">        <span class="keyword">from</span> cj c2</span><br><span class="line">        <span class="keyword">where</span> c2.学号 = s1.学号</span><br><span class="line">    )</span><br><span class="line">)</span><br><span class="line"><span class="comment">--5.	查询每个专业年龄超过该专业平均年龄的学生的姓名和专业</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> 姓名, 专业</span><br><span class="line"><span class="keyword">from</span> xs s1 <span class="keyword">left</span> <span class="keyword">join</span> cj <span class="keyword">on</span> (cj.学号 = s1.学号)</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">datediff</span>(yy, 出生时间, <span class="keyword">getdate</span>()) &gt; (</span><br><span class="line">	<span class="keyword">select</span> <span class="keyword">avg</span>(<span class="keyword">datediff</span>(yy, 出生时间, <span class="keyword">getdate</span>()))</span><br><span class="line">    <span class="keyword">from</span> xs s2</span><br><span class="line">    <span class="keyword">where</span> s1.专业 = s2.专业</span><br><span class="line">    <span class="comment">--group by s2.专业 可以不用聚集， 因为where筛选完成后， 临时表中仅剩下了和s2.专业相同专业的学生</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--6.	查询每个专业每门课程的专业，课程号，课程名，选课人数，平均分和最高分</span></span><br><span class="line"><span class="keyword">select</span> 专业, kc.课程号, 课程名, <span class="keyword">count</span>(cj.学号), <span class="keyword">avg</span>(成绩), <span class="keyword">max</span>(成绩)</span><br><span class="line"><span class="keyword">from</span> cj <span class="keyword">join</span> kc <span class="keyword">on</span> (cj.课程号 = kc.课程号)</span><br><span class="line">	<span class="keyword">join</span> xs <span class="keyword">on</span> (xs.学号 = cj.学号)</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 专业, kc.课程号, 课程名</span><br><span class="line"></span><br><span class="line"><span class="comment">--7.	查询每个学生取得最高分的课程的课程号，课程名和成绩</span></span><br><span class="line"><span class="keyword">select</span> s1.学号, cj.课程号, 课程名, 成绩</span><br><span class="line"><span class="keyword">from</span> cj <span class="keyword">right</span> <span class="keyword">join</span> xs s1 <span class="keyword">on</span> (cj.学号 = s1.学号)</span><br><span class="line">	<span class="keyword">join</span> kc <span class="keyword">on</span> (cj.课程号 = kc.课程号)</span><br><span class="line"><span class="keyword">where</span> 成绩 &gt;= <span class="keyword">all</span>(</span><br><span class="line">	<span class="keyword">select</span> 成绩</span><br><span class="line">    <span class="keyword">from</span> cj c1</span><br><span class="line">    <span class="keyword">where</span> c1.学号 = s1.学号</span><br><span class="line">)</span><br><span class="line"><span class="comment">--8.	查询每个专业年龄最高的学生的学号，姓名，专业和年龄</span></span><br><span class="line"><span class="keyword">select</span> 学号, 姓名, 专业, <span class="keyword">datediff</span>(yy, 出生时间, <span class="keyword">getdate</span>())</span><br><span class="line"><span class="keyword">from</span> xs s1</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">datediff</span>(yy, 出生时间, <span class="keyword">getdate</span>()) &gt;= <span class="keyword">all</span>(</span><br><span class="line">	<span class="keyword">select</span> <span class="keyword">datediff</span>(yy, 出生时间, <span class="keyword">getdate</span>())</span><br><span class="line">    <span class="keyword">from</span> xs s2</span><br><span class="line">    <span class="keyword">where</span> s1.专业 = s2.专业</span><br><span class="line">)</span><br><span class="line"><span class="comment">--9.	查询没有选修数据结构和操作系统的学生的学号和姓名。（使用存在量词实现）</span></span><br><span class="line"><span class="keyword">select</span> 学号, 姓名</span><br><span class="line"><span class="keyword">from</span> xs s1</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>(</span><br><span class="line">	<span class="keyword">select</span> *</span><br><span class="line">    <span class="keyword">from</span> cj <span class="keyword">join</span> kc <span class="keyword">on</span> (cj.课程号 = kc.课程号)</span><br><span class="line">    <span class="keyword">where</span> 课程名 <span class="keyword">in</span> (<span class="string">&#x27;数据结构&#x27;</span>, <span class="string">&#x27;操作系统&#x27;</span>) <span class="keyword">and</span> cj.学号 = s1.学号</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--10.	查询网络工程专业年龄最小的学生的学号和姓名</span></span><br><span class="line"><span class="keyword">select</span> 学号, 姓名</span><br><span class="line"><span class="keyword">from</span> xs</span><br><span class="line"><span class="keyword">where</span> 专业 = <span class="string">&#x27;网络工程&#x27;</span> <span class="keyword">and</span> <span class="keyword">datediff</span>(yy, 出生时间, <span class="keyword">getdate</span>()) &lt;= <span class="keyword">all</span>(</span><br><span class="line">	<span class="keyword">select</span> <span class="keyword">datediff</span>(yy, 出生时间, <span class="keyword">getdate</span>())</span><br><span class="line">    <span class="keyword">from</span> xs</span><br><span class="line">    <span class="keyword">where</span> 专业 = <span class="string">&#x27;网络工程&#x27;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--11.	查询选课人数超过5人的课程的课程号，课程名和成绩</span></span><br><span class="line"><span class="keyword">select</span> cj.课程号, 课程名, 成绩, 学号</span><br><span class="line"><span class="keyword">from</span> cj <span class="keyword">join</span> kc <span class="keyword">on</span> (cj.课程号 = kc.课程号)</span><br><span class="line"><span class="keyword">where</span> cj.课程号 <span class="keyword">in</span> (</span><br><span class="line">	<span class="keyword">select</span> 课程号</span><br><span class="line">    <span class="keyword">from</span> cj</span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> 课程号 <span class="keyword">having</span> <span class="keyword">count</span>(学号) &gt; <span class="number">5</span></span><br><span class="line">)</span><br><span class="line"><span class="comment">--12.	查询选修了信息管理专业所有学生选修的全部课程的学生的学号和姓名</span></span><br><span class="line"><span class="comment">--不存在任何一门课程, 该学生没有选修的</span></span><br><span class="line"><span class="keyword">select</span> 学号, 姓名</span><br><span class="line"><span class="keyword">from</span> xs s1</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>(</span><br><span class="line">	<span class="keyword">select</span> *</span><br><span class="line">    <span class="keyword">from</span> cj c1 <span class="keyword">join</span> xs s2 <span class="keyword">on</span> (c1.学号 = s2.学号)</span><br><span class="line">    <span class="keyword">where</span> 专业 = <span class="string">&#x27;信息管理&#x27;</span> <span class="keyword">and</span> <span class="keyword">not</span> <span class="keyword">exists</span>(</span><br><span class="line">    	<span class="keyword">select</span> *</span><br><span class="line">        <span class="keyword">from</span> cj c2</span><br><span class="line">        <span class="keyword">where</span> s1.学号 = c2.学号 <span class="keyword">and</span> c2.课程号 = c1.课程号</span><br><span class="line">    )</span><br><span class="line">)</span><br><span class="line"><span class="comment">--13.	使用存在量词实现查询没有被学生选修的课程的课程号和课程名</span></span><br><span class="line"><span class="keyword">select</span> 课程号, 课程名</span><br><span class="line"><span class="keyword">from</span> kc c1</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>(</span><br><span class="line">	<span class="keyword">select</span> *</span><br><span class="line">    <span class="keyword">from</span> cj</span><br><span class="line">    <span class="keyword">where</span> cj.课程号 = c1.课程号</span><br><span class="line">)</span><br><span class="line"><span class="comment">--14.	查询选课人数最多和选课人数最少的课程的课程号，课程名和人数</span></span><br><span class="line"><span class="keyword">select</span> kc.课程号, 课程名, <span class="keyword">count</span>(学号)</span><br><span class="line"><span class="keyword">from</span> cj <span class="keyword">right</span> <span class="keyword">join</span> kc <span class="keyword">on</span> (cj.课程号 = kc.课程号)</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> kc.课程号, 课程名 <span class="keyword">having</span> <span class="keyword">count</span>(学号) &gt;= <span class="keyword">all</span>(</span><br><span class="line">	<span class="keyword">select</span> <span class="keyword">count</span>(学号)</span><br><span class="line">    <span class="keyword">from</span> cj</span><br><span class="line"> 	<span class="keyword">group</span> <span class="keyword">by</span> 课程号</span><br><span class="line">) <span class="keyword">or</span> <span class="keyword">count</span>(学号) &lt;= <span class="keyword">all</span>(</span><br><span class="line">	<span class="keyword">select</span> <span class="keyword">count</span>(学号)</span><br><span class="line">    <span class="keyword">from</span> cj</span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> 课程号</span><br><span class="line">)</span><br><span class="line"><span class="comment">--15.	查询选修英语的成绩高于英语课程的平均成绩的学生的学号，姓名和成绩</span></span><br><span class="line"><span class="keyword">select</span> xs.学号, 姓名, 成绩</span><br><span class="line"><span class="keyword">from</span> cj <span class="keyword">join</span> kc <span class="keyword">on</span> (cj.课程号 = kc.课程号)</span><br><span class="line">	<span class="keyword">join</span> xs <span class="keyword">on</span> (cj.学号 = xs.学号)</span><br><span class="line"><span class="keyword">where</span> 课程名 = <span class="string">&#x27;英语&#x27;</span> <span class="keyword">and</span> 成绩 &gt; (</span><br><span class="line">	<span class="keyword">select</span> <span class="keyword">avg</span>(成绩)</span><br><span class="line">    <span class="keyword">from</span> cj <span class="keyword">join</span> kc <span class="keyword">on</span> (cj.课程号 = kc.课程号)</span><br><span class="line">    <span class="keyword">where</span> 课程名 = <span class="string">&#x27;英语&#x27;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--16.	查询各门课中成绩最高分的学生的学号，姓名，课程号，课程名，分数</span></span><br><span class="line"><span class="keyword">select</span> 学号, 姓名, 课程号, 课程名, 成绩</span><br><span class="line"><span class="keyword">from</span> cj <span class="keyword">join</span> kc c1 <span class="keyword">on</span> (cj.课程号 = c1.课程号)</span><br><span class="line">	<span class="keyword">join</span> xs <span class="keyword">on</span> (cj.学号 = xs.学号)</span><br><span class="line"><span class="keyword">where</span> 成绩 &gt;= <span class="keyword">all</span>(</span><br><span class="line">	<span class="keyword">select</span> 成绩</span><br><span class="line">    <span class="keyword">from</span> cj</span><br><span class="line">    <span class="keyword">where</span> cj.课程号 = c1.课程号</span><br><span class="line">)</span><br><span class="line"><span class="comment">--17.	查询每门课中成绩低于该课程的平均成绩的学号，课程号，成绩</span></span><br><span class="line"><span class="keyword">select</span> 学号, 课程号, 成绩</span><br><span class="line"><span class="keyword">from</span> cj c1</span><br><span class="line"><span class="keyword">where</span> 成绩 &lt; (</span><br><span class="line">	<span class="keyword">select</span> <span class="keyword">avg</span>(成绩)</span><br><span class="line">    <span class="keyword">from</span> cj c2</span><br><span class="line">    <span class="keyword">where</span> c2.课程号 = c1.课程号</span><br><span class="line">) </span><br><span class="line"><span class="comment">--18.	查询各个专业每门课程取得最高分的学生的学号，姓名，专业，课程号，课程名，成绩</span></span><br><span class="line"><span class="keyword">select</span> xs.学号, 姓名, 专业, kc.课程号, 课程名, cj.成绩</span><br><span class="line"><span class="keyword">from</span> cj c1 <span class="keyword">join</span> xs s1 <span class="keyword">on</span> (c1.学号 = s1.学号)</span><br><span class="line">	<span class="keyword">join</span> kc <span class="keyword">on</span> (c1.课程号 = kc.课程号)</span><br><span class="line"><span class="keyword">where</span> 成绩 &gt;= <span class="keyword">all</span>(</span><br><span class="line">	<span class="keyword">select</span> 成绩</span><br><span class="line">    <span class="keyword">from</span> cj c2 <span class="keyword">join</span> xs s2 <span class="keyword">on</span> (cj.学号 = s2.学号)</span><br><span class="line">    <span class="keyword">where</span> s1.专业 = s2.专业 <span class="keyword">and</span> c2.课程号 = c1.课程号</span><br><span class="line">)</span><br><span class="line"><span class="comment">--19.	查询没有选修全部课程的学生的学号和姓名，</span></span><br><span class="line"><span class="comment">--存在一门课程, 没有被选修</span></span><br><span class="line"><span class="comment">-- exists any Not do()</span></span><br><span class="line"><span class="keyword">select</span> 学号, 姓名</span><br><span class="line"><span class="keyword">from</span> xs s1</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">exists</span> (</span><br><span class="line">	<span class="keyword">select</span> *</span><br><span class="line">    <span class="keyword">from</span> kc c1</span><br><span class="line">	<span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>(</span><br><span class="line">    	<span class="keyword">select</span> *</span><br><span class="line">        <span class="keyword">from</span> cj</span><br><span class="line">        <span class="keyword">where</span> cj.课程号 = c1.课程号 <span class="keyword">and</span> cj.学号 = s1.学号</span><br><span class="line">    )</span><br><span class="line">)</span><br><span class="line"><span class="comment">--20.	查询没有被全部学生都选修了的课程的课程号和课程名</span></span><br><span class="line"><span class="comment">--至少存在一个学生, 没有选修</span></span><br><span class="line"><span class="comment">--exists any Not do()</span></span><br><span class="line"><span class="keyword">select</span> 课程号, 课程名</span><br><span class="line"><span class="keyword">from</span> kc c1</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">exists</span> (</span><br><span class="line">	<span class="keyword">select</span> *</span><br><span class="line">    <span class="keyword">from</span> xs s1</span><br><span class="line">    <span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>(</span><br><span class="line">    	<span class="keyword">select</span> *</span><br><span class="line">        <span class="keyword">from</span> cj</span><br><span class="line">        <span class="keyword">where</span> cj.学号 = s1.学号 <span class="keyword">and</span> c1.课程号 = cj.课程号</span><br><span class="line">    )</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--21.	查询选课门数少于网络工程专业某个学生的选课门数的学生的学号，姓名和选课门数</span></span><br><span class="line"><span class="keyword">select</span> xs.学号, 姓名, <span class="keyword">count</span>(课程号)</span><br><span class="line"><span class="keyword">from</span> cj <span class="keyword">join</span> xs <span class="keyword">on</span> (cj.学号 = xs.学号)</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> xs.学号 <span class="keyword">having</span> <span class="keyword">count</span>(课程号) &lt; <span class="keyword">any</span>(</span><br><span class="line">	<span class="keyword">select</span> <span class="keyword">count</span>(课程号)</span><br><span class="line">    <span class="keyword">from</span> cj</span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> 学号</span><br><span class="line">)</span><br><span class="line"><span class="comment">--22.	查询选课人数超过英语的选课人数的课程的课程号，课程名和人数</span></span><br><span class="line"><span class="number">23.</span>	查询成绩高于选修英语的某个学生的成绩的学生的学号，姓名，课程号，课程名，成绩</span><br><span class="line"><span class="number">24.</span>	查询选修了程明和方可以同学所选修的全部课程的学生的学号和姓名</span><br><span class="line"><span class="number">25.</span>	查询选课学生包含了选修英语的全部学生的课程的课程号和课程名</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="实验三错题-amp-有价值的题小总结"><a href="#实验三错题-amp-有价值的题小总结" class="headerlink" title="实验三错题 &amp; 有价值的题小总结"></a>实验三错题 &amp; 有价值的题小总结</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--2.	查询英语成绩高于英语的平均成绩的学生的学号，姓名，成绩</span></span><br><span class="line"><span class="comment">--二次嵌套</span></span><br><span class="line"><span class="keyword">select</span> xs.学号, 姓名, 成绩</span><br><span class="line"><span class="keyword">from</span> cj <span class="keyword">join</span> xs <span class="keyword">on</span> (cj.学号 = xs.学号)</span><br><span class="line"><span class="keyword">where</span> 学号 <span class="keyword">in</span>(</span><br><span class="line">	<span class="keyword">select</span> 学号</span><br><span class="line">    <span class="keyword">from</span> cj <span class="keyword">join</span> kc <span class="keyword">on</span> (cj.课程号 = kc.课程号)</span><br><span class="line">    <span class="keyword">where</span> 课程名 = <span class="string">&#x27;英语&#x27;</span> <span class="keyword">and</span> 成绩 &gt; (</span><br><span class="line">    	<span class="keyword">select</span> <span class="keyword">avg</span>(成绩)</span><br><span class="line">        <span class="keyword">from</span> cj <span class="keyword">join</span> kc <span class="keyword">on</span> (cj.课程号 = kc.课程号)</span><br><span class="line">        <span class="keyword">where</span> 课程名 = <span class="string">&#x27;英语&#x27;</span></span><br><span class="line">    )</span><br><span class="line">)</span><br><span class="line"><span class="comment">--4.	查询没有选修程明所选修的全部课程的学生的姓名</span></span><br><span class="line"><span class="keyword">select</span> 姓名</span><br><span class="line"><span class="keyword">from</span> xs s1</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>(</span><br><span class="line">	<span class="keyword">select</span> *</span><br><span class="line">    <span class="keyword">from</span> cj c1 <span class="keyword">join</span> xs s2 <span class="keyword">on</span> (cj.学号 = s2.学号)</span><br><span class="line">    <span class="keyword">where</span> 姓名 = <span class="string">&#x27;程明&#x27;</span> <span class="keyword">and</span> <span class="keyword">not</span> <span class="keyword">exists</span>(</span><br><span class="line">    	<span class="keyword">select</span> *</span><br><span class="line">        <span class="keyword">from</span> cj c2</span><br><span class="line">        <span class="keyword">where</span> c2.课程号 = c1.课程号 <span class="keyword">and</span> s1.学号 = c2.学号</span><br><span class="line">    )</span><br><span class="line">)</span><br><span class="line"><span class="comment">--选修全部课程 -&gt; For all course do() </span></span><br><span class="line"><span class="comment">--从逻辑角度转换成 Not exists any course Not do() 后可以使用二重not exists写出此题</span></span><br><span class="line"><span class="comment">--以下为正确版 -&gt; 没有选修</span></span><br><span class="line"><span class="comment">--使用exists时 考虑从&quot;存在&quot;涵义角度出发</span></span><br><span class="line"><span class="comment">--没有选修程明所选修的全部课程 -&gt; 存在至少一门课程, 程明选修了但该学生没有选修</span></span><br><span class="line"><span class="keyword">select</span> 姓名</span><br><span class="line"><span class="keyword">from</span> xs s1</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">exists</span>(</span><br><span class="line">	<span class="keyword">select</span> *</span><br><span class="line">    <span class="keyword">from</span> cj c1 <span class="keyword">join</span> xs <span class="keyword">on</span> (c1.学号 = xs.学号)</span><br><span class="line">    <span class="keyword">where</span> 姓名 = <span class="string">&#x27;程明&#x27;</span> <span class="keyword">and</span> 课程号 <span class="keyword">not</span> <span class="keyword">in</span>(</span><br><span class="line">    	<span class="keyword">select</span> 课程号</span><br><span class="line">        <span class="keyword">from</span> cj c2</span><br><span class="line">        <span class="keyword">where</span> c2.学号 = s1.学号</span><br><span class="line">    )</span><br><span class="line">)</span><br><span class="line"><span class="comment">--7.	查询每个学生取得最高分的课程的课程号，课程名和成绩</span></span><br><span class="line"><span class="comment">--一般情况下用不到group by 子句, 一旦使用group by子句就要将select中不在聚集函数中的列全部group by</span></span><br><span class="line"><span class="comment">--也就是说…如果不聚集是用不到group by的……别想错了。</span></span><br><span class="line"><span class="keyword">select</span> s1.学号, cj.课程号, 课程名, 成绩</span><br><span class="line"><span class="keyword">from</span> cj <span class="keyword">right</span> <span class="keyword">join</span> xs s1 <span class="keyword">on</span> (cj.学号 = s1.学号)</span><br><span class="line">	<span class="keyword">join</span> kc <span class="keyword">on</span> (cj.课程号 = kc.课程号)</span><br><span class="line"><span class="keyword">where</span> 成绩 &gt;= <span class="keyword">all</span>(</span><br><span class="line">	<span class="keyword">select</span> 成绩</span><br><span class="line">    <span class="keyword">from</span> cj c1</span><br><span class="line">    <span class="keyword">where</span> c1.学号 = s1.学号</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--在嵌套情况下能用聚集函数解决的不要用all、any的修饰词。。。。。。。。。</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>SqlServer</category>
      </categories>
      <tags>
        <tag>Select</tag>
      </tags>
  </entry>
</search>
